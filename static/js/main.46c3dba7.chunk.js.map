{"version":3,"sources":["Auth/store.ts","utils.tsx","Auth/User.tsx","Shared/InputField.tsx","config.ts","Auth/Login.tsx","Auth/Logout.tsx","xhr.tsx","Auth/InvitedSignup.tsx","Auth/TenantSignup.tsx","Auth/Permissions.tsx","Shared/NavLink.tsx","Dashboard/index.tsx","NotFound.tsx","Settings/ChangePassword.tsx","Shared/Layout.tsx","Settings/index.tsx","ForgotPassword.tsx","ResetPassword.tsx","model.ts","Users/store.ts","Shared/Spinner.tsx","Users/Item.tsx","Shared/List.tsx","Shared/Search.tsx","Users/List.tsx","Users/New.tsx","Users/Edit.tsx","Roles/store.ts","Roles/Item.tsx","Roles/List.tsx","Roles/New.tsx","Roles/Edit.tsx","Roles/EditPermissions.tsx","Roles/Roles.tsx","Users/EditRoles.tsx","Users/Users.tsx","Hotels/store.ts","Hotels/List.tsx","Contacts/AddContactForm.tsx","HotelPrices/store.ts","HotelPrices/List.tsx","HotelPrices/UploadPrices.tsx","MealPlans/store.ts","MealPlans/List.tsx","MealPlans/NewItem.tsx","MealPlans/MealPlans.tsx","RoomTypes/store.ts","RoomTypes/List.tsx","RoomTypes/NewItem.tsx","RoomTypes/RoomTypes.tsx","Shared/DatePicker.tsx","HotelPrices/NewItem.tsx","HotelPrices/CalculatePrice.tsx","HotelPrices/HotelPrices.tsx","ExtraServices/List.tsx","HotelPrices/ExtraServices.tsx","Hotels/Item.tsx","Locations/store.ts","Locations/List.tsx","Locations/NewItem.tsx","Locations/Locations.tsx","HotelPaymentPreferences/store.ts","HotelPaymentPreferences/List.tsx","HotelPaymentPreferences/NewItem.tsx","HotelPaymentPreferences/HotelPaymentPreferences.tsx","Hotels/NewItem.tsx","Hotels/Hotels.tsx","CabTypes/store.ts","CabTypes/List.tsx","CabTypes/NewItem.tsx","CabTypes/CabTypes.tsx","Cabs/store.ts","Cabs/Item.tsx","Cabs/List.tsx","Cabs/New.tsx","Cabs/Cabs.tsx","Trips/store.ts","TripStages/store.ts","TripStages/List.tsx","TripStages/NewItem.tsx","TripStages/TripStages.tsx","Tags/List.tsx","Trips/List.tsx","Shared/Component.tsx","Trips/Quotes.tsx","Trips/GivenQuotes.tsx","TransportServicePrices/store.ts","TransportServicePrices/List.tsx","TransportServicePrices/UploadPrices.tsx","TransportLocations/List.tsx","TransportServices/store.ts","TransportServices/List.tsx","TransportServices/NewItem.tsx","TransportServices/TransportServices.tsx","TransportServicePrices/NewItem.tsx","TransportServicePrices/CalculatePrice.tsx","TransportServicePrices/TransportServicePrices.tsx","TransportServicePrices/ExtraServices.tsx","Trips/QuoteExtras.tsx","Trips/NewQuote.tsx","Tags/EditTags.tsx","Trips/EditOwners.tsx","Trips/Payments.tsx","Trips/LatestGivenQuote.tsx","HotelBookingStages/store.ts","HotelBookingStages/List.tsx","HotelBookingStages/NewItem.tsx","HotelBookingStages/HotelBookingStages.tsx","Trips/HotelBookings.tsx","Trips/Item.tsx","TripSources/store.ts","TripSources/List.tsx","TripSources/NewItem.tsx","TripSources/TripSources.tsx","Trips/NewItem.tsx","Trips/HotelsBookingPendingList.tsx","Trips/HotelsBookingPendingItem.tsx","Trips/Trips.tsx","TripPlanRequests/store.ts","TripPlanRequests/Item.tsx","TripPlanRequests/List.tsx","TripPlanRequests/TripPlanRequests.tsx","Tenants/store.ts","Tenants/Item.tsx","Tenants/List.tsx","Tenants/New.tsx","Tenants/Tenants.tsx","EmailVerified.tsx","Shared/Dropdown.tsx","Notifications/store.ts","channels.tsx","Notifications/List.tsx","App.tsx","serviceWorker.ts","configureStore.ts","index.tsx"],"names":["AuthUserStatus","key","INITIAL_STATE","data","undefined","status","DEFAULT","actions","checkAuth","createAsyncAction","login","logout","reducer","state","arguments","length","action","type","getType","request","Object","objectSpread","CHECKING","AUTHENTICATING","success","AUTHENTICATED","payload","failure","UN_AUTHENTICATED","selectors","user","this","noRequestYet","isAuthenticated","isAuthenticating","wait","searchToQuery","search","options","qs","parse","ignoreQueryPrefix","queryToSearch","query","stringify","addQueryPrefix","withContext","ContextProvider","BaseComponent","Connected","props","react_default","a","createElement","Consumer","value","newProps","defineProperty","WrappedComponent","wrappedCompName","displayName","name","consumerName","numberToLocalString","n","parts","toString","split","replace","join","useThunkDispatch","useDispatch","EmptyNumberValidator","message","Yup","transform","originalValue","isType","trim","nullable","typeError","joinAttributes","_len","args","Array","_key","elms","map","item","isArray","_item","slicedToArray","shouldAdd","attribute","filter","reduce","children","index","concat","XHR","xhr","getUser","_getUser","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","get","then","_ref","stop","apply","getUserAction","_ref3","_callee2","dispatch","_","_ref2","_context2","catch","error","Promise","reject","_x","_x2","_x3","useAuthUserFetch","useCallback","useAuthUser","useSelector","userSelector","fetchUser","RedirectUnlessAuthenticated","_ref5","_ref5$children","_useAuthUser2","react","router_es","_ref6","location","to","pathname","noThrow","RedirectIfAuthenticated","_ref7","_ref7$children","_ref7$to","_useAuthUser3","ErrorMessage","_ref$className","className","objectWithoutProperties","formik_esm","assign","component","ErrorM","Input","_ref2$as","as","Component","id","otherProps","classNames","FormikFormGroup","render","ref","fieldProps","field","_fieldProps$form","form","allTouched","touched","errors","getIn","ui_es","hasError","aria-errormessage","InputField","_ref4","label","labelPlacement","noGroup","renderLabel","htmlFor","OnFormChange","connect","onChange","formik","_ref6$debounce","debounce","values","debounceHandler","useRef","useEffect","window","current","setTimeout","clearTimeout","src_config","publicUrl","process","appEnv","appUrl","APP_URL","appVersion","appName","serverBase","apiBaseUrl","pusher","cluster","authEndpoint","loginCredentialsSchema","Validator","shape","email","required","password","initialValues","_login","post","refresh","_refresh","patch","loginAction","_callee3","_context3","_x4","Login","useLogin","lib_default","src","config","onSubmit","setStatus","setSubmitting","validationSchema","isSubmitting","noValidate","role","autoFocus","placeholder","autoComplete","tabIndex","primary","disabled","_logout","delete","resp","localStorage","removeItem","logoutAction","Logout","navigate","from","useLogout","getAuthorizationToken","getItem","axios","defaults","baseURL","interceptors","use","compose","headers","params","FormData","url","method","toUpperCase","append","response","token","access_token","setItem","e","formikErrors","keys","status_code","retryAfter","parseInt","alert","XHRContext","React","createContext","withXHR","useXHR","useContext","XHRLink","_ref$href","href","tenantSignupCredentialsSchema","max","password_confirmation","invite_token","TenantSignup","signup","_signup","setErrors","readOnly","hidden","company_name","address_email","email_verified_url","tenantName","origin","PERMISSIONS","MANAGE_ROLES","MANAGE_TENANTS","MANAGE_TRIP_OWNERS","MANAGE_TRIP_PLAN_REQUESTS","MANAGE_USERS","VIEW_TRIP_PLAN_REQUESTS","useCheckPermissions","permissionsByName","useMemo","permissions","byName","permission","hasPermission","every","hasAnyPermission","_len2","_key2","some","NavLink","path","match","getConvertedTripAnalytics","_getConvertedTripAnalytics","getDuePayments","_getDuePayments","getTransactions","_getTransactions","ConvertedTrips","_useState","useState","_useState2","trips","setConvertedTripAnalytics","responsive","bordered","striped","rows","trip_source","trip_id","start_date","end_date","locations","no_of_adults","contact","latest_stage","short_name","moment","utc","local","format","l","phone_number","PhoneIcon","title","MailIcon","DuePayments","_useState3","_useState4","duePayments","setDuePayments","i","due_date","is_credit","due_amount","Transactions","_useState5","debited","credited","_useState6","transactions","setTransactions","meta","date","is_credited","amount","NotFound","changePasswordSchema","changePasswordInitialValues","changePassword","_changePassword","Container","fluid","_ref$as","Grid","noGutters","Col","xs","sm","md","lg","xl","_ref3$as","classes","spans","forEach","span","offset","order","breakPoint","infix","push","Settings","Settings_ChangePassword","forgotPasswordSchema","reset_password_link","forgotPassword","_forgotPassword","resetPasswordSchema","resetPassword","_resetPassword","_ref3$field","_ref4$field","init","items","model","byId","total","current_page","last_page","links","insert","prevState","atStart","stateMeta","toConsumableArray","getMeta","currentPage","lastPage","createReducer","list","isFetching","myState","Spinner","SpinnerIcon","useUser","userId","shouldFetch","usersSelector","useUserState","useUserFetch","User","_useUser","Shared_Spinner","roles","r","arr","email_verified_at","created_at","List","useSearch","defaultInitialParams","q","Search","_ref$initialParams","initialParams","onSearch","_ref$placeholder","style","marginBottom","minWidth","SearchIcon","getUsers","_getUsers","getUsersAction","useUsersFetch","useUsers","users","fetchUsers","Users","objectDestructuringEmpty","_useSearch","_useSearch2","setParams","_useUsers","page","SelectUsers","select_es","multiple","fetch","newUserSchema","min","invited_signup_link","getRole","_getRole","getRoleAction","useRole","roleId","roleState","rolesSelector","useRoleState","fetchRole","useRoleFetch","Role","_useRole","p","getRoles","_getRoles","getPermissions","_getPermissions","getRolesAction","_x5","useRolesFetch","useRoles","fetchRoles","Roles","_useRoles","Shared_Search","Shared_List","SelectRoles","SelectPermissions","newRoleSchema","put","_role$permissions","setFieldValue","List_SelectPermissions","RolesModule","Roles_Edit","Roles_EditPermissions","Roles_New","_user$roles","internal_name","List_SelectRoles","UsersModule","Edit","Users_EditRoles","New","getHotels","_getHotels","getHotelsAction","useHotelsFetch","useHotels","hotelsSelector","hotels","fetchHotels","_useHotels","hotel","stars","meal_plans","mealPlan","room_types","roomType","extra_bed_child_age_start","extra_bed_child_age_end","SelectHotels","addContactValidationSchema","positive","AddContactForm","onCreate","onCancel","onClick","getPrices","_getPrices","getPricesAction","prices","Prices","hotelId","_useHotelPrices","pricesSelector","alignCols","5","6","7","8","9","base_price","persons","adult_with_extra_bed_price","child_with_extra_bed_price","child_without_extra_bed_price","meal_plan","room_type","timezone_offset","Date","getTimezoneOffset","file","file_name","UploadPrices","set","Content-Type","encType","accept","currentTarget","files","getMealPlans","_getMealPlans","getMealPlansAction","useMealPlansFetch","useMealPlans","mealPlansSelector","mealPlans","fetchMealPlans","_useMealPlans","description","SelectMealPlans","MealPlansModule","MealPlans_NewItem","MealPlans_List_List","getRoomTypes","_getRoomTypes","getRoomTypesActions","useRoomTypes","roomTypesSelector","roomTypes","fetchRoomTypes","useRoomTypesFetch","_useRoomTypes","SelectRoomTypes","RoomTypesModule","RoomTypes_NewItem","RoomTypes_List_List","DatePicker","of","integer","carry","otherValues","hours","minutes","seconds","hotel_id","meal_plan_id","room_type_id","minInlineSize","remove","price","List_SelectHotels","List_SelectMealPlans","searchable","_ref8","List_SelectRoomTypes","allowed_extra_beds","getPrice","_getPrice","no_of_nights","rooms_detail","adults_with_extra_bed","children_with_extra_bed","children_without_extra_bed","no_of_rooms","INITIAL_VALUES","calculated_price","given_price","edited_given_price","comments","CalculatePriceForm","initialValuesProp","_ref$shouldEmptyIniti","shouldEmptyInitialValues","bookingFrom","bookingTo","notifyOnChange","flattenValues","parseFloat","otherData","room","otherRoomDetails","checkin","checkout","add","useDidMount","bookingDates","dates","days","diff","price_calculation_string","no_price_for_dates","setValues","shouldFetchPricesOnChange","onQuery","find","d","startDate","_ref9","_ref9$field","roomDetail","_ref10","isNaN","validExtraBeds","Math","RupeeIcon","target","_ref11","how","maxLength","validate","CalculatePrice","setPrice","ChevronDownIcon","CalculatePrice_CalculatePriceForm","HotelPricesModule","HotelPrices_NewItem","HotelPrices_UploadPrices","SelectHotelExtraServices","SelectTransportExtraServices","SelectOtherExtraServices","hotel_extras","service","ExtraServicesForm","resolve","hotel_extra","List_SelectHotelExtraServices","creatable","fetchOnMount","getHotel","_getHotel","createContact","_createContact","contactData","getHotelAction","_x6","useHotel","hotelSelector","useHotelState","fetchHotel","useHotelFetch","_useDialog","useDialog","_useDialog2","isVisibleAddContact","showAddContact","hideAddContact","_useHotel","contacts","payment_preference","dialog_es","open","onClose","closeButton","Header","Title","Body","_callee4","country","_context4","country_id","_x7","data-testid","getLocations","_getLocations","getCountries","_getCountries","getStates","_getStates","getCities","_getCities","getLocationsAction","_callee5","_context5","useLocationsFetch","useLocations","locationsSelector","fetchLocations","_useLocations","latitude","longitude","SelectLocations","SelectCountries","SelectStates","SelectCities","latitue","city","List_SelectCountries","List_SelectStates","List_SelectCities","LocationsModule","Locations_NewItem","Locations_List_List","getHotelPaymentPreferences","_getHotelPaymentPreferences","getHotelPaymentReferences","_getHotelPaymentReferences","getHotelPaymentPreferencesAction","hotelPaymentPreferences","useHotelPaymentPreferencesFetch","useHotelPaymentPreferences","hotelPaymentPreferencesSelector","fetchHotelPaymentPreferences","_useHotelPaymentPrefe","hotelPaymentPreference","SelectHotelPaymentPreferences","SelectHotelPaymentReferences","breakdowns","reference","day_offset","amount_share","totalAmountShare","breakdown","List_SelectHotelPaymentReferences","TripStagesModule","HotelPaymentPreferences_NewItem","HotelPaymentPreferences_List_List","rooms","location_id","payment_preference_id","List_SelectLocations","List_SelectHotelPaymentPreferences","HotelsModule","Hotels_NewItem","Hotels_Item","List_List","getCabTypes","_getCabTypes","getCabTypesAction","useCabTypesFetch","useCabTypes","cabTypesSelector","cabTypes","fetchCabTypes","_useCabTypes","1","cabType","capacity","SelectCabTypes","CabTypesModule","CabTypes_NewItem","CabTypes_List_List","getCab","_getCab","getCabAction","cab","useCab","cabId","cabsSelector","useCabState","fetchCab","useCabFetch","Cab","_useCab","number_plate","cab_type","toLocaleString","getCabs","_getCabs","getCabsAction","useCabsFetch","useCabs","cabs","fetchCabs","Cabs","_useCabs","newCabSchema","cab_type_id","List_SelectCabTypes","CabsModule","Cabs_New","isTripConverted","trip","converted_at","getTripStages","_getTripStages","getTripStagesAction","tripStages","useTripStagesFetch","useTripStages","tripStagesSelector","fetchTripStages","_useTripStages","tripStage","SelectTripStages","TripStages_NewItem","TripStages_List_List","getTags","_getTags","storeTags","_storeTags","tags","SelectTags","getTrips","_getTrips","getTripsAction","useTripsFetch","useTrips","tripSelector","fetchTrips","_useTrips","_params$stages","stages","_params$tags","_params$hotels_not_bo","hotels_not_booked","otherParams","s","t","Number","newParams","Filters","_ref4$stages","_ref4$tags","_ref4$hotels_not_book","created_by","latest_given_quote","_trip$sales_team","sales_team","_trip$operations_team","operations_team","pluralize","isBefore","isAfter","fromNow","_ref5$label","List_SelectTripStages","initialState","childProps","setState","getQuotes","_getQuotes","tripId","giveQuote","_giveQuote","getInstalments","_getInstalments","quoteId","giveQuoteSchema","Quote","quote","_ref$readOnly","showHotelBookingStatus","total_price","transport_extras","other_extras","showGiveQuote","close","_useFetchState","useFetchState","_useFetchState2","instalments","fetchInstalments","isFetchingInstalments","BedIcon","caption","4","quoteHotel","latest_booking_stage","3","BusIcon","from_date","to_date","transport_service","cab_locality","no_of_cabs","2","StarEmptyIcon","factor","ceil","givenPrice","confirm","quote_id","step","Component_Component","profitValue","toFixed","effectiveFactor","Footer","0","autoWidth","Quotes","quotes","setQuotes","getGivenQuotes","_getGivenQuotes","givenQuoteId","GivenQuote","givenQuote","givenQuotes","setGivenQuotes","getTransportServicePrices","_getTransportServicePrices","getTransportServicePricesAction","useTransportServicePrices","transportServicePricesSelector","transportServicePrices","fetchTransportServicePrices","useTransportServicePricesFetch","_useTransportServiceP","per_day_charges","per_day_parking_charges","per_km_charges","minimum_km_per_day","night_charges","parking_charges","toll_charges","SelectTransportLocations","getTransportLocations","_getTransportLocations","getTransportServices","_getTransportServices","getTransportServicesAction","useTransportServices","transportServicesSelector","transportServices","fetchTransportServices","useTransportServicesFetch","_useTransportServices","distance","SelectTransportServices","via","is_sightseeing","List_SelectTransportLocations","TransportServicesModule","TransportServices_NewItem","TransportServices_List_List","transport_service_id","cab_locality_id","storePrice","_storePrice","cab_price","List_SelectTransportServices","no_of_days","TransportServicePrices_CalculatePrice_CalculatePriceForm","TransportServicePrices_NewItem","TransportServicePrices_UploadPrices","CalculatePrice_CalculatePrice","TransportServicePrices_List_List","transport_extra","List_SelectTransportExtraServices","quote_extra","List_SelectOtherExtraServices","hotelPrice","setHotelPrice","cabPrice","setCabPrice","setHotels","_useState7","_useState8","hotelExtras","setHotelExtras","_useState9","_useState10","hotelExtrasPrice","setHotelExtrasPrice","_useState11","_useState12","transportExtrasPrice","setTransportExtrasPrice","_useState13","_useState14","otherExtrasPrice","setOtherExtrasPrice","_useState15","_useState16","setCabs","_useState17","_useState18","transportExtras","setTransportExtras","_useState19","_useState20","otherExtras","setOtherExtras","_useState21","_useState22","setComments","_useState23","_useState24","containerRef","saveQuote","_saveQuote","document","querySelectorAll","btn","click","scrollIntoView","behavior","block","handleHotelChange","handleHotelExtrasChange","handleCabChange","handleTransportExtrasChange","extras","handleOtherExtrasChange","initialQuote","others","subtract","ExtraServices_ExtraServicesForm","TransportServicePrices_ExtraServices_ExtraServicesForm","QuoteExtras_ExtraServicesForm","itemId","_ref$tags","onSuccess","EditOwners","_ref$users","u","List_SelectUsers","Payments","customer_payments","hotel_payments","cab_payments","CustomerPayments","payments","HotelPayments","CabPayments","InstalmentStatus","dueAmount","dueDate","today","DateString","Amount","Due","instalment","transaction","Payments_LogTransaction","payment","paymentable","transportService","rowSpan","paid_amount","Payments_Transactions","LogTransaction","dialogOpen","Fragment","payment_mode","logTransaction","_logTransaction","instalment_id","_ref12","tripConversionValidationSchema","percentage","details_verified","ConvertTrip","isConvertVisible","hideConvert","onConvert","GiveQuotesXHR","totalInstalmentAmount","totalAmount","remainingPercentage","totalPercentage","LatestGivenQuote","showConvert","convertTrip","_convertTrip","getHotelBookingStages","_getHotelBookingStages","getHotelBookingStagesAction","useHotelBookingStagesFetch","useHotelBookingStages","hotelBookingStagesSelector","hotelBookingStages","fetchHotelBookingStages","_useHotelBookingStage","hotelBookingStage","SelectHotelBookingStages","HotelBookingStages_NewItem","HotelBookingStages_List_List","quoteHotelStageChangeValidationSchema","stage","QuoteHotelBookingStage","quoteHotels","showEdit","setShowEdit","changeHotelBookingStage","_changeHotelBookingStage","quoteHotelIds","stageId","List_SelectHotelBookingStages","pivot","groupByHotel","byHotelId","groupedQuoteHotels","ComposeEmail","total_given_price","tenant","selector","node","ownerDocument","Error","querySelector","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","console","copyNodeToClipboard","fontFamily","fontWeight","fontSize","c","listStyle","paddingLeft","formatedCheckin","str","GenerateVoucher","isBooked","hotel_confirmation_number","voucher_number","hcn","vn","HotelBookings","isConverted","mergedByHotel","mergedQuoteHotels","mergedQuoteHotelsByCheckinCheckout","byCheckinCheckout","groupByCheckinCheckout","booked_at","getTrip","_getTrip","changeTripStage","_changeTripStage","getTripAction","Breadcrumbs","BasicDetails","CalendarIcon","UsersIcon","isEditing","setIsEditing","Tags_EditTags","marginLeft","Activities","activity_logs","total_quotes","activity","causer","useTrip","useTripState","fetchTrip","useTripFetch","Item","_useTrip","Shared_NavLink","Trips_LatestGivenQuote","GivenQuotes_Quotes","Trips_NewQuote","getTripSources","_getTripSources","getTripSourcesAction","tripSources","useTripSourcesFetch","useTripSources","tripSourcesSelector","fetchTripSources","_useTripSources","tripSource","SelectTripSources","TripSourcesModule","TripSources_NewItem","TripSources_List_List","destinations","count","age","_values$children","destination","trip_source_id","List_SelectTripSources","HotelsBookingPendingList","_params$hotel_booking","hotel_booking_stages","_params$locations","HotelsBookingPendingList_Filters","_ref2$label","HotelsBookingPendingItem_Breadcrumbs","Trips","Trips_List_List","HotelsBookingPendingItem_Item","Trips_NewItem","Item_Item","getTripPlanRequest","_getTripPlanRequest","useTripPlanRequestState","useTripPlanRequestFetch","TripPlanRequest","getTripPlanRequests","_getTripPlanRequests","assignTripRequestsOwner","_assignTripRequestsOwner","ownerId","requestIds","owner_id","Owner","onUpdate","owner","assigned_at","changeIsEditing","getTriPlanRequestsAction","useTripPlanRequestsFetch","useTripPlanRequests","TripPlanRequests","_useTripPlanRequests","no_of_children","hotel_preference","List_Owner","getTenant","_getTenant","getTenantAction","useTenant","tenantId","tenantsSelector","useTenantState","fetchTenant","useTenantFetch","Tenant","_useTenant","invited_at","signup_at","getTenants","_getTenants","getTenantsAction","useTenantsFetch","useTenants","tenants","fetchTenants","Tenants","_useTenants","newTenantSchema","address_name","send_invite","tenant_signup_link","checked","TenantsModule","Tenants_New","EmailVerified","OkIcon","Dropdown","_ref$alignRight","alignRight","align-right","markAsRead","pushNewNotification","createStandardAction","ChannelContext","ChannelContextProvider","channels","setChannels","client","Pusher","forceTLS","auth","Authorization","Echo","broadcaster","getChannels","Provider","NOTIFICATION_EVENT","getNotifications","_getNotifications","_markAsRead","getNotificationsAction","markNotificationAsReadAction","notifications","afterRead","read_at","_x8","useNotificationsState","notificationsSelector","useNotificationsFetch","useAllMarkNotificationsAsRead","TripConverted","notification","converted_by","Notification","Text","useMarkNotificationsAsRead","warn","bg-gray-100","useNotificationsChannel","notificationsChannel","private","NotificationList","_useNotifications","fetchNotifications","markAllAsRead","stopListening","useConnectedNotificationChannel","maxHeight","overflow","_useCheckPermissions","alt","CogAltIcon","OffIcon","Boolean","hostname","configureStore","store","rootReducer","thunkExtraAgrs","middlewares","thunkMiddleware","withExtraArgument","enhancers","applyMiddleware","createStore","composeWithDevTools","combineReducers","_combineReducers","authStore","roleStore","userStore","mealPlanStore","roomTypeStore","locationStore","hotelStore","cabTypeStore","cabStore","tripStore","tripSourceStore","tripStageStore","transportServiceStore","transportServicePriceStore","hotelPaymentPreferenceStore","hotelBookingStageStore","tripPlanRequestStore","tenantStore","hotelPriceStore","notificationStore","app","es","lib","_ref4$children","_useAuthUser","titleTemplate","defaultTitle","App_Header","minHeight","InvitedSignup","Auth_TenantSignup","src_ForgotPassword","src_ResetPassword","src_Dashboard","Auth_Logout","src_Settings","TripStages_TripStagesModule","TransportServicePrices_CabTypesModule","HotelBookingStages_MealPlansModule","TripPlanRequests_TripPlanRequests","src_EmailVerified","default","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46c3dba7.chunk.js","sourcesContent":["import { createAsyncAction, ActionType, getType } from \"typesafe-actions\"\nimport { store as tenantStore } from \"./../Tenants\"\nimport { store as notificationStore } from \"./../Notifications\"\n\nexport const key = \"AUTHENTICATED_USER_STATE\"\n\nexport enum AuthUserStatus {\n  DEFAULT = \"DEFAULT\",\n  CHECKING = \"CHECKING\",\n  UN_AUTHENTICATED = \"UN_AUTHENTICATED\",\n  AUTHENTICATING = \"AUTHENTICATING\",\n  AUTHENTICATED = \"AUTHENTICATED\",\n}\n\nexport interface IUser {\n  id: number\n  name: string\n  email: string\n  tenant?: tenantStore.ITenant\n  permissions: Array<string>\n  notifications?: Array<notificationStore.INotification>\n}\n\nexport interface IState {\n  readonly data?: IUser\n  readonly status: AuthUserStatus\n}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nexport interface IAuthToken {\n  access_token: string\n  expires_in: number\n}\n\n/**\n * ================ State ======================== *\n */\n// Initial state\nconst INITIAL_STATE: IState = {\n  data: undefined,\n  status: AuthUserStatus.DEFAULT,\n}\n// Redux actions\nexport const actions = {\n  checkAuth: createAsyncAction(\n    \"@AUTH/CHECK_AUTH_REQUEST\",\n    \"@AUTH/CHECK_AUTH_SUCCESS\",\n    \"@AUTH/CHECK_AUTH_FAILED\"\n  )<undefined, IUser, Error>(),\n  login: createAsyncAction(\n    \"@AUTH/LOGIN_REQUEST\",\n    \"@AUTH/LOGIN_SUCCESS\",\n    \"@AUTH/LOGIN_FAILED\"\n  )<undefined, IUser, Error>(),\n  logout: createAsyncAction(\n    \"@AUTH/LOGOUT_REQUEST\",\n    \"@AUTH/LOGOUT_SUCCESS\",\n    \"@AUTH/LOGOUT_FAILED\"\n  )<undefined, undefined, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\n// state reducer\nexport function reducer(\n  state: IState = INITIAL_STATE,\n  action: TActions\n): IState {\n  switch (action.type) {\n    case getType(actions.checkAuth.request):\n      return { ...state, status: AuthUserStatus.CHECKING }\n    case getType(actions.login.request):\n      return { ...state, status: AuthUserStatus.AUTHENTICATING }\n    case getType(actions.checkAuth.success):\n    case getType(actions.login.success):\n      return {\n        ...state,\n        status: AuthUserStatus.AUTHENTICATED,\n        data: action.payload,\n      }\n    case getType(actions.checkAuth.failure):\n    case getType(actions.login.failure):\n      return { ...state, status: AuthUserStatus.UN_AUTHENTICATED }\n    case getType(actions.logout.success):\n      return {\n        ...state,\n        status: AuthUserStatus.UN_AUTHENTICATED,\n        data: undefined,\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * ====================== Selector for State ======================== *\n */\nexport function selectors<IAppState extends IStateWithKey>(state: IAppState) {\n  return {\n    get state(): IState {\n      return state[key]\n    },\n    get user() {\n      return this.state.data\n    },\n    get status() {\n      return this.state.status\n    },\n    get noRequestYet() {\n      return this.status === AuthUserStatus.DEFAULT\n    },\n    get isAuthenticated(): boolean {\n      return this.status === AuthUserStatus.AUTHENTICATED\n    },\n    get isAuthenticating(): boolean {\n      return (\n        this.status === AuthUserStatus.AUTHENTICATING ||\n        this.status === AuthUserStatus.CHECKING\n      )\n    },\n    get wait(): boolean {\n      return this.isAuthenticating || this.noRequestYet\n    },\n  }\n}\n","import qs from \"qs\"\nimport React, { Context } from \"react\"\nimport { Subtract, Diff } from \"utility-types\"\nimport { useDispatch } from \"react-redux\"\nimport { ThunkDispatch } from \"./types\"\nimport * as Yup from \"yup\"\nimport { ownerDocument } from \"@tourepedia/ui\"\n\nexport function searchToQuery(\n  search: string = \"?\",\n  options: qs.IParseOptions = {}\n): { [key: string]: any } {\n  return qs.parse(search, { ignoreQueryPrefix: true, ...options })\n}\n\nexport function queryToSearch(\n  query: any = {},\n  options: qs.IStringifyOptions = {}\n): string {\n  return qs.stringify(query, { addQueryPrefix: true, ...options })\n}\n\n/**\n * High order component to reduce the context hoc boilerplate\n *\n * @params React.createContext\n * @params key for context access\n *\n * @return function (\n *  @params React.ComponentType which required the context\n *\n *  @return React.ComponentType which can be rendered and will render the Wrapped component with context along with\n *  passed props\n * )\n *\n * Usage:\n * type Theme =  \"dark\" | \"light\"\n * const ThemeContext = React.createContext<Theme>(\"dark\")\n * const withThemeContext = withContext<Theme>(ThemeContext, \"theme\")\n * type ThemeProps = { theme: Theme }\n *\n * ... late in app\n *\n * type ButtonProps = ThemeProps & { disabled?: boolean }\n * const Button = ({ theme, ...otherProps }: ButtonProps) => <button className={theme} {...otherProps} />\n * export default withThemeContext(Button)\n */\nexport function withContext<BaseContext, Key extends string>(\n  ContextProvider: Context<BaseContext>,\n  key: Key\n) {\n  // this is a hacky way to typehint the key as string\n  type Keys = Key | Key\n  type InjectedProps = { [key in Keys]: BaseContext }\n  return function connectWithContext<BaseProps extends InjectedProps>(\n    BaseComponent: React.ComponentType<BaseProps>\n  ) {\n    // return a component that requires (BaseProps -  InjectedProps)\n    function Connected(props: Subtract<BaseProps, InjectedProps>) {\n      return (\n        <ContextProvider.Consumer>\n          {value => {\n            const newProps = {\n              [key]: value,\n              ...(props as BaseProps),\n            }\n            return <BaseComponent {...newProps} />\n          }}\n        </ContextProvider.Consumer>\n      )\n    }\n    // Wrapped component can be accessed as static property\n    Connected.WrappedComponent = BaseComponent\n    // some react dev tools stuff for better debugging\n    const wrappedCompName =\n      BaseComponent.displayName || BaseComponent.name || \"Component\"\n    const consumerName = ContextProvider.Consumer.name || \"Context.Consumer\"\n    Connected.displayName =\n      wrappedCompName + \"(\" + consumerName + \".\" + key + \")\"\n    return Connected\n  }\n}\n\n/**\n * Get the props of any tag (HTML Tag, React Component)\n */\nexport type PropsOf<\n  Tag extends React.ReactType\n> = Tag extends keyof JSX.IntrinsicElements\n  ? JSX.IntrinsicElements[Tag]\n  : Tag extends React.SFC<infer Props>\n  ? Props & React.Attributes\n  : Tag extends React.ComponentClass<infer Props2>\n  ? (Tag extends new (...args: any[]) => infer Instance\n      ? Props2 & React.ClassAttributes<Instance>\n      : never)\n  : never\n\n/**\n * OverwriteAssign\n *\n * Overwrite props in `To` by `By` props\n * @example\n *\n *  // Expect: { name: string, email: number, phone: number }\n *  OverwriteAssign<{ name: string, email: string }, { email: number, phone: number }>\n */\nexport type OverwriteAssign<\n  To extends React.ReactType,\n  By extends object = {}\n> = Diff<PropsOf<To>, By> & By\n\nexport type AsProp<\n  As extends React.ReactType,\n  P extends object = {}\n> = OverwriteAssign<As, { as?: As } & P>\n\n/**\n * Convert a number to local string (add commas)\n */\nexport function numberToLocalString(n: number | null | undefined): string {\n  if (n === null || n === undefined) return \"\"\n  const str = n.toString()\n  // we dont want to add commas in the after the decimal point\n  const parts = str.split(\".\")\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n  return parts.join(\".\")\n}\n\nexport function useThunkDispatch() {\n  return useDispatch<ThunkDispatch>()\n}\n\n/**\n * Helper to validate the numbers that can be empty string\n */\nexport function EmptyNumberValidator(\n  message: string = \"Please enter a valid number\"\n) {\n  return Yup.number()\n    .transform(function(value, originalValue) {\n      if (this.isType(value)) return value\n      if (!originalValue || !originalValue.trim()) {\n        return null\n      }\n      return originalValue\n    })\n    .nullable(true)\n    .typeError(message)\n}\n\n/**\n * Join multiple attribute with •. A condition can also be passed\n */\nexport function joinAttributes(\n  ...args: Array<string | React.ReactNode | [boolean, string | React.ReactNode]>\n): React.ReactNode {\n  const elms = args\n    .map(item => {\n      if (Array.isArray(item)) {\n        const [shouldAdd, attribute] = item\n        if (shouldAdd) return attribute\n        return undefined\n      }\n      return item\n    })\n    .filter(item => item !== undefined && item !== \"\" && item !== null)\n  return (\n    <span>\n      {elms.reduce((children: Array<React.ReactNode>, item, index) => {\n        return children\n          .concat([<span key={index}>{item}</span>])\n          .concat(\n            index !== elms.length - 1\n              ? [<span key={`${item}-seperator`}> • </span>]\n              : []\n          )\n      }, [])}\n    </span>\n  )\n}\n\nexport function copyNodeToClipboard(selector: HTMLElement | string) {\n  try {\n    const document = ownerDocument()\n    let node: HTMLElement | null\n    if (!document || !window) {\n      throw new Error(\n        \"HTMLDOM and Window must be in context for selection to work\"\n      )\n    }\n    if (typeof selector === \"string\") {\n      node = document.querySelector(selector)\n    } else {\n      node = selector\n    }\n    if (!node) {\n      throw new Error(\"Node not found\")\n    }\n    // create a range that selects the root node\n    const range = document.createRange()\n    range.selectNode(node)\n    const selection = window.getSelection()\n    if (selection) {\n      // select the range\n      selection.removeAllRanges()\n      selection.addRange(range)\n      document.execCommand(\"copy\")\n    }\n  } catch (e) {\n    console.error(e)\n    window.alert(\"Please press Ctrl/Cmd+C to copy\")\n  }\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { Redirect, Location } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\n\nimport { selectors, actions, IUser, IStateWithKey } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { useThunkDispatch } from \"../utils\"\n\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async getUser(): Promise<IUser> {\n      return xhr.get(\"/me\").then(({ data }: { data: { data: IUser } }) => {\n        return data.data\n      })\n    },\n  }\n}\nexport const getUserAction = (): ThunkAction<Promise<IUser>> => async (\n  dispatch,\n  _,\n  { xhr }\n) => {\n  dispatch(actions.checkAuth.request())\n  return XHR(xhr)\n    .getUser()\n    .then(user => {\n      dispatch(actions.checkAuth.success(user))\n      return user\n    })\n    .catch(error => {\n      dispatch(actions.checkAuth.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useAuthUserState() {\n  interface StateProps {\n    user?: IUser\n    wait: boolean\n    isAuthenticating: boolean\n    isAuthenticated: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const userSelector = selectors(state)\n    return {\n      user: userSelector.user,\n      wait: userSelector.wait,\n      isAuthenticating: userSelector.isAuthenticating,\n      isAuthenticated: userSelector.isAuthenticated,\n    }\n  })\n}\n\nexport function useAuthUserFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback(() => dispatch(getUserAction()), [dispatch])\n}\n\nexport function useAuthUser() {\n  return {\n    ...useAuthUserState(),\n    fetchUser: useAuthUserFetch(),\n  }\n}\n\nexport function AuthUserProvider({\n  children = null,\n}: {\n  children:\n    | React.ReactNode\n    | ((props: { wait: boolean; user?: IUser }) => React.ReactNode)\n}) {\n  const { user, wait, isAuthenticating, fetchUser: getUser } = useAuthUser()\n  useEffect(() => {\n    if (!user && !isAuthenticating) {\n      getUser()\n    }\n  }, [getUser])\n  return (\n    <Fragment>\n      {typeof children === \"function\" ? children({ wait, user }) : children}\n    </Fragment>\n  )\n}\n\n/**\n * Redirects the user if the user is not authenticated\n *\n * Use this component to redirect the user to login from protected routes\n */\nexport function RedirectUnlessAuthenticated({\n  children = null,\n}: {\n  children?: React.ReactNode\n}) {\n  const { wait, user } = useAuthUser()\n  if (wait) {\n    return null\n  }\n  if (!user) {\n    return (\n      <Location>\n        {({ location }) => (\n          <Redirect to={`/login?next=${location.pathname}`} noThrow />\n        )}\n      </Location>\n    )\n  }\n  return <Fragment>{children}</Fragment>\n}\n\n/**\n * Redirects the user if the user is authenticated\n *\n * This is used to prevent users from navigate to routes that\n * should not be accessed when user is logged in e.g.\n * login, forgot password etc\n */\nexport function RedirectIfAuthenticated({\n  children = null,\n  to = \"/\",\n}: {\n  children?: React.ReactNode\n  to?: string\n}) {\n  const { wait, user } = useAuthUser()\n  if (wait) {\n    return null\n  }\n  if (user) {\n    return <Redirect to={to} noThrow />\n  }\n  return <Fragment>{children}</Fragment>\n}\n","import React, { Fragment, useEffect, useRef } from \"react\"\nimport {\n  ErrorMessage as FormikErrorMessage,\n  FieldProps,\n  Field,\n  ErrorMessageProps,\n  getIn,\n  connect,\n  FormikProps,\n} from \"formik\"\nimport { Omit } from \"utility-types\"\nimport { ErrorMessage as ErrorM, FormGroup } from \"@tourepedia/ui\"\nimport classNames from \"classnames\"\n\nexport function ErrorMessage({ className = \"\", ...props }: ErrorMessageProps) {\n  return (\n    <FormikErrorMessage\n      component={ErrorM}\n      className={`${className}`}\n      {...props}\n    />\n  )\n}\n\ninterface InputProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"as\" | \"label\"> {\n  as?: React.ReactType\n}\n\nexport function Input({\n  as: Component = \"input\",\n  id,\n  name,\n  className,\n  ...otherProps\n}: InputProps) {\n  return (\n    <Component\n      className={classNames(\"input\", className)}\n      name={name}\n      id={id || name}\n      {...otherProps}\n    />\n  )\n}\n\nexport { FormGroup }\n\nexport function FormikFormGroup({\n  name,\n  render,\n  children,\n  ref,\n  ...props\n}: Omit<React.HTMLProps<HTMLDivElement>, \"name\"> & {\n  name: string\n  render: (props: FieldProps) => React.ReactNode\n}) {\n  return (\n    <Field\n      name={name}\n      render={(fieldProps: FieldProps) => {\n        const {\n          field: { name },\n          form: { touched: allTouched, errors },\n        } = fieldProps\n        const touched: boolean = getIn(allTouched, name)\n        const error: string = getIn(errors, name)\n        return (\n          <FormGroup\n            hasError={!!(touched && error)}\n            aria-errormessage={error}\n            {...props}\n          >\n            {children ? children : render(fieldProps)}\n            <ErrorMessage name={name} />\n          </FormGroup>\n        )\n      }}\n    />\n  )\n}\n\nexport interface InputFieldProps extends InputProps {\n  name: string\n  type?: string\n  label?: React.ReactNode\n  className?: string\n  labelPlacement?: \"before\" | \"after\"\n  noGroup?: boolean\n}\n\nexport function InputField({\n  label,\n  name,\n  type,\n  className,\n  labelPlacement,\n  noGroup,\n  ...otherProps\n}: InputFieldProps) {\n  // for radio or checkbox, default to after\n  labelPlacement =\n    labelPlacement ||\n    (type === \"checkbox\" || type === \"radio\" ? \"after\" : \"before\")\n  const renderLabel = label ? <label htmlFor={name}>{label}</label> : null\n  function render({ field }: FieldProps) {\n    return (\n      <Fragment>\n        {labelPlacement === \"before\" ? renderLabel : null}\n        <Input type={type} {...field} {...otherProps} />\n        {labelPlacement === \"after\" ? renderLabel : null}\n      </Fragment>\n    )\n  }\n  if (noGroup) {\n    return <Field name={name} render={render} />\n  }\n  return <FormikFormGroup name={name} className={className} render={render} />\n}\n\nexport interface OnFormChangeProps {\n  onChange: (formik: FormikProps<any>) => any\n  debounce?: number\n}\n\nfunction OnFormChangeImpl({\n  onChange,\n  formik,\n  debounce = 300,\n}: OnFormChangeProps & { formik: FormikProps<any> }) {\n  const { values } = formik\n  const debounceHandler = useRef(-1)\n  useEffect(() => {\n    if (typeof window === \"undefined\") {\n      return\n    }\n    debounceHandler.current = window.setTimeout(() => {\n      onChange(formik)\n    }, debounce)\n    return function clearDebounce() {\n      debounceHandler.current && window.clearTimeout(debounceHandler.current)\n    }\n  }, [values])\n  return null\n}\n\nexport const OnFormChange = connect<OnFormChangeProps, any>(OnFormChangeImpl)\n","export default {\n  /**\n   * Public url of the application\n   * This is used to prefix the links of assets generated by build process. This can be set to \"/\" when the website\n   * is hosted on rooted domain\n   */\n  publicUrl: process.env.PUBLIC_URL,\n  /**\n   * Application environment\n   */\n  appEnv: process.env.NODE_ENV,\n  /**\n   * Application domain url\n   */\n  appUrl: process.env.APP_URL,\n  /**\n   * Version of the application\n   */\n  appVersion: process.env.REACT_APP_VERSION,\n  /**\n   * Name of the applications\n   */\n  appName: process.env.REACT_APP_APPLICATION_NAME,\n  /**\n   * Base url for the server\n   */\n  serverBase: process.env.REACT_APP_SERVER_BASE,\n  /**\n   * Base url for the apis\n   */\n  apiBaseUrl: process.env.REACT_APP_API_BASE_URL,\n  /**\n   * Pusher configuration\n   */\n  pusher: {\n    key: process.env.REACT_APP_PUSHER_APP_KEY,\n    cluster: process.env.REACT_APP_PUSHER_APP_CLUSTER || \"ap2\",\n    authEndpoint: process.env.REACT_APP_SERVER_BASE + \"/broadcasting/auth\",\n  },\n}\n","import React, { useCallback } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport { Formik, FormikActions, FormikProps, Form } from \"formik\"\nimport * as Validator from \"yup\"\n\nimport { RedirectIfAuthenticated } from \"./User\"\nimport { ThunkAction } from \"./../types\"\nimport { actions, IUser } from \"./store\"\nimport { getUserAction } from \"./User\"\nimport { searchToQuery, useThunkDispatch } from \"./../utils\"\nimport { InputField } from \"./../Shared/InputField\"\nimport config from \"../config\"\n\n// schemas\nexport interface ILoginCredentials {\n  email: string\n  password: string\n}\nexport interface IAuthToken {\n  access_token: string\n  expires_in: number\n}\nexport const loginCredentialsSchema = Validator.object().shape({\n  email: Validator.string()\n    .email(\"Invalid email address\")\n    .required(\"Email field is required\"),\n  password: Validator.string().required(\"Password field is required\"),\n})\nconst initialValues: ILoginCredentials = {\n  email: \"\",\n  password: \"\",\n}\n\n// actions\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async login(data: ILoginCredentials): Promise<IAuthToken> {\n      return xhr\n        .post(\"/login\", data)\n        .then(({ data }: { data: IAuthToken }) => data)\n    },\n    async refresh(): Promise<IAuthToken> {\n      return xhr\n        .patch(\"/refresh\")\n        .then(({ data }: { data: IAuthToken }) => data)\n    },\n  }\n}\nexport const loginAction = (\n  data: ILoginCredentials\n): ThunkAction<Promise<IUser>> => async (dispatch, _, { xhr }) => {\n  actions.login.request()\n  return XHR(xhr)\n    .login(data)\n    .then(() => {\n      return dispatch(getUserAction())\n    })\n    .catch(error => {\n      actions.login.failure(error)\n      return Promise.reject(error)\n    })\n}\n\ninterface LoginProps extends RouteComponentProps {}\n\nfunction useLogin() {\n  const dispatch = useThunkDispatch()\n  return useCallback((data: ILoginCredentials) => dispatch(loginAction(data)), [\n    dispatch,\n  ])\n}\n\nexport default function Login({ location }: LoginProps) {\n  const query = searchToQuery(location && location.search)\n  const next = query[\"next\"]\n  initialValues.email = query[\"email\"] || \"\"\n  const login = useLogin()\n  return (\n    <RedirectIfAuthenticated to={next}>\n      <Helmet>\n        <title>Sign in to TAD</title>\n      </Helmet>\n      <div className=\"min-h-screen\">\n        <div className=\"text-center\">\n          <img\n            src={config.publicUrl + \"/logo.png\"}\n            className=\"inline-block mt-16 w-20 rounded-full shadow\"\n          />\n        </div>\n        <h1 className=\"text-center my-4\">Sign in to TAD</h1>\n        <div className=\"max-w-sm mx-auto\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={(\n              values: ILoginCredentials,\n              actions: FormikActions<ILoginCredentials>\n            ) => {\n              actions.setStatus()\n              login(values).catch(error => {\n                actions.setStatus(error.message)\n                actions.setSubmitting(false)\n              })\n            }}\n            validationSchema={loginCredentialsSchema}\n            render={({\n              isSubmitting,\n              status,\n            }: FormikProps<ILoginCredentials>) => (\n              <Form noValidate>\n                <fieldset>\n                  {status ? (\n                    <p className=\"text-red-700\" role=\"alert\">\n                      {status}\n                    </p>\n                  ) : null}\n                  <InputField\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoFocus={!initialValues.email}\n                    id=\"email\"\n                    placeholder=\"username@domain.com\"\n                    autoComplete=\"username email\"\n                    required\n                    tabIndex={1}\n                  />\n                  <Link\n                    to=\"/forgot-password\"\n                    className=\"float-right text-blue-600 hover:text-blue-800 text-sm\"\n                  >\n                    Forgot Password ?\n                  </Link>\n                  <InputField\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    id=\"password\"\n                    required\n                    autoComplete=\"current-password\"\n                    autoFocus={!!initialValues.email}\n                    tabIndex={2}\n                  />\n                  <footer>\n                    <Button\n                      primary\n                      tabIndex={3}\n                      type=\"submit\"\n                      className=\"w-full\"\n                      disabled={isSubmitting}\n                    >\n                      Sign in\n                    </Button>\n                  </footer>\n                </fieldset>\n              </Form>\n            )}\n          />\n        </div>\n      </div>\n    </RedirectIfAuthenticated>\n  )\n}\n","import React, { useEffect, useCallback } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\n\nimport { ThunkAction } from \"./../types\"\nimport { actions } from \"./store\"\nimport { searchToQuery, useThunkDispatch } from \"./../utils\"\n\n// actions\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async logout(): Promise<any> {\n      return xhr.delete(\"/logout\").then(resp => {\n        localStorage.removeItem(\"access_token\")\n        return resp\n      })\n    },\n  }\n}\nexport const logoutAction = (): ThunkAction<Promise<any>> => async (\n  dispatch,\n  _,\n  { xhr }\n) =>\n  XHR(xhr)\n    .logout()\n    .then(() => {\n      dispatch(actions.logout.success())\n    })\n\nfunction useLogout() {\n  const dispatch = useThunkDispatch()\n  return useCallback(() => dispatch(logoutAction()), [dispatch])\n}\n\nfunction Logout({ navigate, location }: RouteComponentProps) {\n  // get the `from` query parameter from the logout props\n  // and redirect back to `from` if present\n  const query = searchToQuery(location && location.search)\n  const from = query[\"from\"]\n  const logout = useLogout()\n  useEffect(() => {\n    logout().then(() => {\n      navigate && navigate(from || \"/\")\n    })\n  }, [])\n  return <div>Logging out</div>\n}\nexport default Logout\n","import React from \"react\"\nimport axios, {\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosInstance,\n  AxiosError,\n} from \"axios\"\nimport { compose } from \"redux\"\nimport { withContext, queryToSearch } from \"./utils\"\nimport config from \"./config\"\n\nexport function getAuthorizationToken() {\n  return localStorage.getItem(\"access_token\")\n}\n\nexport function storeAuthorizationToken(token: string) {\n  localStorage.setItem(\"access_token\", token)\n}\n\n/**\n * Request interceptor for Authorization Header\n *\n * This interceptor is responsible for attaching the `Authorization` header for authenticated user to be\n * validated for auth restricted apis\n *\n * NOTE: Authorization header causes the pre-flight (OPTIONS) request\n * NOTE: We can also set this in the query params in the token key by which we can avoid the\n * pre-flight request, but this will make a REALLY LOOOONG URL\n */\nfunction authorizationHeaderInterceptor(\n  config: AxiosRequestConfig\n): AxiosRequestConfig {\n  config.headers[\"Authorization\"] = `Bearer ${getAuthorizationToken()}`\n  return config\n}\n\n/**\n * Request interceptor for update the content type to x-www-form-urlencoded\n *\n * This interceptor will change the request content type to `x-ww-form-urlencoded` which is not the default in axios.\n * Axios's default is `application/json` which causes pre-flight request for CORS\n */\nfunction contentTypeXWWWFormUrlencodedInterceptor(\n  config: AxiosRequestConfig\n): AxiosRequestConfig {\n  const data = config.data\n  const params = config.params\n  const existingContentType = config.headers[\"Content-Type\"]\n  if (existingContentType !== \"multipart/form-data\") {\n    config.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\"\n  }\n  // if it is already FormData, nothing is required\n  if (data instanceof FormData) {\n    return config\n  }\n  // else stringify the data and update it\n  config.data = queryToSearch(data, { addQueryPrefix: false })\n  config.url = config.url + queryToSearch(params)\n  config.params = undefined\n  return config\n}\n\n/**\n * Intercept the request to change the method type (put, patch, delete) to supported method type\n *\n * DELETE, PUT, PATCH methods are not support in the XHR requests, but our backend endpoints accept these method types.\n * Larave/Lumen request interceptors will resolve a request type via `_method` property in the request data,\n * i.e. delete, put and patch requests, we will send as a post request with `_method = delete | put | patch` key in the\n * request data\n */\nfunction methodTypeInterceptor(config: AxiosRequestConfig) {\n  const method = (config.method || \"\").toUpperCase()\n  const data = config.data || {}\n  switch (method) {\n    case \"DELETE\":\n    case \"PATCH\":\n    case \"PUT\":\n      if (data instanceof FormData) {\n        data.append(\"_method\", method)\n      } else {\n        data[\"_method\"] = method\n      }\n      config.method = \"POST\"\n  }\n  config.data = data\n  return config\n}\n\n/**\n * Intercept the authentication success request to get the token\n *\n * Check for access_token in the response and save it to local storage so that any after coming requests\n * can use the token to validate the authenticated user\n */\nfunction accessTokenInterceptor(response: AxiosResponse): AxiosResponse {\n  const { data } = response\n  if (data.access_token) {\n    storeAuthorizationToken(data.access_token)\n  }\n  return response\n}\n\n/**\n * Transform the error message\n *\n * Default error reponse is a long chain for accessing the error response data\n */\nfunction errorTransformInterceptor(error: AxiosError): any {\n  const e = error.response && error.response.data\n  if (!e) {\n    return Promise.reject(error)\n  }\n  if (e.errors) {\n    const formikErrors = Object.keys(e.errors).reduce(\n      (errors: { [key: string]: string }, name: string) => {\n        errors[name] = e.errors[name].join(\", \")\n        return errors\n      },\n      {}\n    )\n    e.formikErrors = formikErrors\n  }\n  return Promise.reject(e)\n}\n\n/**\n * Handle the maintaince error response\n */\nfunction maintainceErrorInterceptor(error: AxiosError): any {\n  const response = error.response\n  if (response) {\n    const e = response.data && response.data\n    if (e.status_code === 503) {\n      if (response.headers && response.headers[\"retry-after\"]) {\n        const retryAfter = response.headers[\"retry-after\"]\n        setTimeout(() => {\n          window.location = window.location\n        }, parseInt(retryAfter) * 1000)\n      }\n      alert(e.message)\n    }\n  }\n  return error\n}\n\n/**\n * Handle the maintaince error response\n */\nfunction rateLimitErrorInterceptor(error: AxiosError): any {\n  const response = error.response\n  if (response) {\n    const e = response.data && response.data\n    if (e.status_code === 429) {\n      if (response.headers && response.headers[\"retry-after\"]) {\n        const retryAfter = response.headers[\"retry-after\"]\n        setTimeout(() => {\n          window.location = window.location\n        }, parseInt(retryAfter) * 1000)\n      }\n      alert(e.message)\n    }\n  }\n  return error\n}\n\n/**\n * Base url for requests\n *\n * This is simply a helper for requests so that we don't have to use the env all over the places.\n * If in any case, we need to disabled this behaviour, we can write the\n * full uri (https://apis.tourepedia.com/login) instead of path (/login)\n */\naxios.defaults.baseURL = config.apiBaseUrl\n\n// inject the interceptors for request and response\naxios.interceptors.request.use(\n  compose(\n    authorizationHeaderInterceptor,\n    contentTypeXWWWFormUrlencodedInterceptor,\n    methodTypeInterceptor\n  )\n)\naxios.interceptors.response.use(\n  compose(accessTokenInterceptor),\n  compose(\n    errorTransformInterceptor,\n    maintainceErrorInterceptor,\n    rateLimitErrorInterceptor\n  )\n)\n\n/**\n * Context for XHR\n *\n * Usage: Wrap a component with withXHR (dont forget to extends the XHRProps in the swapped components)\n */\nexport const XHRContext = React.createContext<AxiosInstance>(axios)\nexport const withXHR = withContext<AxiosInstance, \"xhr\">(XHRContext, \"xhr\")\nexport type XHRProps = { xhr: AxiosInstance }\n\nexport function useXHR() {\n  return React.useContext(XHRContext)\n}\n\n/**\n * XHR Get Link\n */\nexport function XHRLink({\n  href = \"\",\n  query,\n  ...props\n}: React.HTMLProps<HTMLAnchorElement> & {\n  query?: { [key: string]: any }\n}) {\n  return (\n    <a\n      href={`${axios.defaults.baseURL}${href}${queryToSearch({\n        ...(query || {}),\n        token: getAuthorizationToken(),\n      })}`}\n      {...props}\n    />\n  )\n}\n\nexport default axios\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport { Formik, Form } from \"formik\"\nimport * as Validator from \"yup\"\n\nimport { RedirectIfAuthenticated } from \"./User\"\nimport { searchToQuery } from \"./../utils\"\nimport { InputField } from \"./../Shared/InputField\"\nimport { withXHR, XHRProps } from \"../xhr\"\nimport config from \"../config\"\n\n// schemas\nexport interface ITenantSignupCredentials {\n  name: string\n  email: string\n  password: string\n  password_confirmation: string\n  invite_token: string\n}\nexport interface IAuthToken {\n  access_token: string\n  expires_in: number\n}\nexport const tenantSignupCredentialsSchema = Validator.object().shape({\n  name: Validator.string()\n    .required(\"Name field is required\")\n    .max(191, \"Max 191 Characters allowed\"),\n  email: Validator.string()\n    .email(\"Please provide a valid email address\")\n    .required(\"Name field is required\"),\n  password: Validator.string().required(\"Password field is required\"),\n  password_confirmation: Validator.string().required(\n    \"Password Confirmation field is required\"\n  ),\n})\nconst initialValues: ITenantSignupCredentials = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  password_confirmation: \"\",\n  invite_token: \"\",\n}\n\n// actions\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async signup(data: ITenantSignupCredentials): Promise<any> {\n      return xhr\n        .patch(\"/invited-users\", data)\n        .then(({ data }: { data: any }) => data)\n    },\n  }\n}\n\ninterface InviteSignupProps extends RouteComponentProps, XHRProps {}\n\nconst TenantSignup = withXHR(function TenantSignup({\n  location,\n  xhr,\n  navigate,\n}: InviteSignupProps) {\n  const query = searchToQuery(location && location.search)\n  const invite_token = query[\"ref\"] || \"\"\n  const email = query[\"email\"] || \"\"\n  const name = query[\"name\"] || \"\"\n  initialValues.invite_token = invite_token\n  initialValues.email = email\n  initialValues.name = name\n  return (\n    <RedirectIfAuthenticated>\n      <Helmet>\n        <title>Invited on TAD</title>\n      </Helmet>\n      <div>\n        <div className=\"text-center\">\n          <Link to=\"/\">\n            <img\n              src={config.publicUrl + \"/logo.png\"}\n              className=\"inline-block mt-4 w-20 rounded-full shadow\"\n            />\n          </Link>\n        </div>\n        <h1 className=\"text-center my-4\">Complete Signup for TAD</h1>\n        <div className=\"max-w-sm mx-auto\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={tenantSignupCredentialsSchema}\n            onSubmit={(values, actions) => {\n              actions.setStatus()\n              XHR(xhr)\n                .signup(values)\n                .then(data => {\n                  alert(\n                    data.message ||\n                      \"Registered Successfully. You can now login.\"\n                  )\n                  navigate && navigate(`../login?email=${values.email}`)\n                })\n                .catch(error => {\n                  actions.setStatus(error.message)\n                  if (error.formikErrors) {\n                    actions.setErrors(error.formikErrors)\n                  }\n                  actions.setSubmitting(false)\n                })\n            }}\n            render={({ isSubmitting, status, values }) => (\n              <Form noValidate>\n                <fieldset>\n                  {status ? (\n                    <p className=\"text-red-700\" role=\"alert\">\n                      {status}\n                    </p>\n                  ) : null}\n                  <InputField\n                    label=\"Name\"\n                    name=\"name\"\n                    autoFocus\n                    placeholder=\"John Ana\"\n                    autoComplete=\"full-name\"\n                    required\n                  />\n                  <InputField\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"username@domain.com\"\n                    autoComplete=\"username email\"\n                    readOnly\n                    required\n                  />\n                  <InputField\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                  />\n                  <InputField\n                    label=\"Retype Password\"\n                    type=\"password\"\n                    name=\"password_confirmation\"\n                    autoComplete=\"new-password\"\n                    required\n                  />\n                  <input\n                    hidden\n                    type=\"hidden\"\n                    name=\"invite_token\"\n                    value={values.invite_token}\n                  />\n                  <footer>\n                    <Button\n                      primary\n                      tabIndex={3}\n                      type=\"submit\"\n                      className=\"w-full\"\n                      disabled={isSubmitting}\n                    >\n                      Complete Signup\n                    </Button>\n                  </footer>\n                </fieldset>\n              </Form>\n            )}\n          />\n        </div>\n      </div>\n    </RedirectIfAuthenticated>\n  )\n})\n\nexport default TenantSignup\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport { Formik, Form } from \"formik\"\nimport * as Validator from \"yup\"\n\nimport { RedirectIfAuthenticated } from \"./User\"\nimport { searchToQuery } from \"./../utils\"\nimport { InputField } from \"./../Shared/InputField\"\nimport { withXHR, XHRProps } from \"../xhr\"\nimport config from \"../config\"\n\n// schemas\nexport interface ITenantSignupCredentials {\n  company_name: string\n  name: string\n  email: string\n  password: string\n  password_confirmation: string\n  invite_token: string\n  address_email: string\n  email_verified_url: string\n}\nexport interface IAuthToken {\n  access_token: string\n  expires_in: number\n}\nexport const tenantSignupCredentialsSchema = Validator.object().shape({\n  company_name: Validator.string()\n    .required(\" field is required\")\n    .max(191, \"Max 191 Characters allowed\"),\n  name: Validator.string()\n    .required(\"Name field is required\")\n    .max(191, \"Max 191 Characters allowed\"),\n  email: Validator.string()\n    .email(\"Please provide a valid email address\")\n    .required(\"Email address is required\")\n    .max(191, \"Max 191 Characters allowed\"),\n  password: Validator.string().required(\"Password field is required\"),\n  password_confirmation: Validator.string().required(\n    \"Password Confirmation field is required\"\n  ),\n})\nconst initialValues: ITenantSignupCredentials = {\n  company_name: \"\",\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  password_confirmation: \"\",\n  invite_token: \"\",\n  address_email: \"\",\n  email_verified_url: \"\",\n}\n\n// actions\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async signup(data: ITenantSignupCredentials): Promise<any> {\n      return xhr\n        .post(\"/tenants/signup\", data)\n        .then(({ data }: { data: any }) => data)\n    },\n  }\n}\n\ninterface InviteSignupProps extends RouteComponentProps, XHRProps {}\n\nconst TenantSignup = withXHR(function TenantSignup({\n  location,\n  xhr,\n  navigate,\n}: InviteSignupProps) {\n  const query = searchToQuery(location && location.search)\n  const invite_token = query[\"ref\"] || \"\"\n  const email = query[\"email\"] || \"\"\n  const name = query[\"name\"] || \"\"\n  const tenantName = query[\"tenant-name\"] || \"\"\n  initialValues.company_name = tenantName\n  initialValues.invite_token = invite_token\n  initialValues.name = name\n  initialValues.email = email\n  initialValues.address_email = email\n  initialValues.email_verified_url = location\n    ? `${location.origin}/email-verified`\n    : \"\"\n  return (\n    <RedirectIfAuthenticated>\n      <Helmet>\n        <title>Invited on TAD</title>\n      </Helmet>\n      <div>\n        <h1 className=\"flex justify-center items-center mt-4\">\n          <Link to=\"/\">\n            <img\n              src={config.publicUrl + \"/logo.png\"}\n              className=\"inline-blockw-20 w-8 rounded-full shadow\"\n            />\n          </Link>\n          <div className=\"px-4 text-gray-400\">+</div>\n          <div>{tenantName}</div>\n        </h1>\n        <p className=\"text-center max-w-sm mx-auto text-sm text-gray-700\">\n          Please provide following details to complete your registraion for\n          Tourepedia Admin Dashboard\n        </p>\n        <div className=\"max-w-sm mx-auto\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={(values, actions) => {\n              actions.setStatus()\n              XHR(xhr)\n                .signup(values)\n                .then(data => {\n                  alert(\n                    data.message ||\n                      \"Registered Successfully. You can now login.\"\n                  )\n                  navigate && navigate(`../login?email=${values.email}`)\n                })\n                .catch(error => {\n                  actions.setStatus(error.message)\n                  if (error.formikErrors) {\n                    actions.setErrors(error.formikErrors)\n                  }\n                  actions.setSubmitting(false)\n                })\n            }}\n            validationSchema={tenantSignupCredentialsSchema}\n            render={({ isSubmitting, status, values }) => (\n              <Form noValidate>\n                <fieldset>\n                  {status ? (\n                    <p className=\"text-red-700\" role=\"alert\">\n                      {status}\n                    </p>\n                  ) : null}\n                  <InputField\n                    label=\"Company Name\"\n                    name=\"company_name\"\n                    placeholder=\"Tourepedia Holidays\"\n                    required\n                  />\n                  <InputField\n                    label=\"Your Name\"\n                    name=\"name\"\n                    placeholder=\"John Ana\"\n                    autoComplete=\"full-name\"\n                    required\n                  />\n                  <InputField\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"username@domain.com\"\n                    autoComplete=\"username email\"\n                    required\n                  />\n                  <InputField\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                  />\n                  <InputField\n                    label=\"Retype Password\"\n                    type=\"password\"\n                    name=\"password_confirmation\"\n                    autoComplete=\"new-password\"\n                    required\n                  />\n                  <input\n                    hidden\n                    type=\"hidden\"\n                    name=\"invite_token\"\n                    value={values.invite_token}\n                  />\n                  <input\n                    hidden\n                    type=\"hidden\"\n                    name=\"address_email\"\n                    value={values.address_email}\n                  />\n                  <footer>\n                    <Button\n                      primary\n                      tabIndex={3}\n                      type=\"submit\"\n                      className=\"w-full\"\n                      disabled={isSubmitting}\n                    >\n                      Complete Registration\n                    </Button>\n                  </footer>\n                </fieldset>\n              </Form>\n            )}\n          />\n        </div>\n      </div>\n    </RedirectIfAuthenticated>\n  )\n})\n\nexport default TenantSignup\n","import { useAuthUser } from \".\"\nimport { useMemo } from \"react\"\n\nexport const PERMISSIONS = {\n  MANAGE_ROLES: \"manage_roles\",\n  MANAGE_TENANTS: \"manage_tenants\",\n  MANAGE_TRIP_OWNERS: \"manage_trip_owners\",\n  MANAGE_TRIP_PLAN_REQUESTS: \"manage_trip_plan_requests\",\n  MANAGE_USERS: \"manage_users\",\n  VIEW_TRIP_PLAN_REQUESTS: \"view_trip_plan_requests\",\n}\n\nexport function useCheckPermissions() {\n  const { user } = useAuthUser()\n  const permissionsByName = useMemo<{ [key: string]: string }>(() => {\n    if (!user) return {}\n    const { permissions } = user\n    return permissions.reduce(\n      (byName: { [key: string]: string }, permission) => {\n        byName[permission] = permission\n        return byName\n      },\n      {}\n    )\n  }, [user])\n  return {\n    /**\n     * Check if the user has all the required permissions\n     */\n    hasPermission(...permissions: Array<string>): Boolean {\n      if (typeof permissions === \"string\") {\n        permissions = [permissions]\n      }\n      return permissions.every(permission => permissionsByName[permission])\n    },\n    /**\n     * Check if the user has any of the checked permissions\n     */\n    hasAnyPermission(...permissions: Array<string>): Boolean {\n      return permissions.some(permission => permissionsByName[permission])\n    },\n  }\n}\n","import React from \"react\"\nimport { Link, Match } from \"@reach/router\"\nimport classNames from \"classnames\"\n\nexport function NavLink({\n  to,\n  children,\n  className = \"\",\n}: {\n  to: string\n  children: React.ReactNode\n  className?: string\n}) {\n  return (\n    <Match path={to}>\n      {({ match }) => (\n        <li className={classNames(className, match ? \"active\" : undefined)}>\n          <Link to={to}>{children}</Link>\n        </li>\n      )}\n    </Match>\n  )\n}\n\nexport default NavLink\n","import React, { useState, useEffect } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { store as tripStore } from \"./../Trips\"\nimport { Table } from \"@tourepedia/ui\"\nimport { Icons } from \"@tourepedia/ui\"\n\ntype IConvertedTripAnalytics = tripStore.ITrip[]\ntype IDuePayments = {\n  due_amount: number\n  due_date: string\n  is_credit: boolean\n}[]\ntype ITransactions = { amount: number; date: string; is_credited: boolean }[]\n\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async getConvertedTripAnalytics(): Promise<IConvertedTripAnalytics> {\n      return xhr.get(\"/converted-trips\").then(resp => resp.data.data)\n    },\n    async getDuePayments(): Promise<IDuePayments> {\n      return xhr.get(\"/instalments\").then(resp => resp.data.data)\n    },\n    async getTransactions(): Promise<{\n      data: ITransactions\n      meta: { debited: number; credited: number }\n    }> {\n      return xhr.get(\"/payment-transactions\").then(resp => resp.data)\n    },\n  }\n}\n\nfunction ConvertedTrips({ xhr }: XHRProps) {\n  const [trips, setConvertedTripAnalytics] = useState<IConvertedTripAnalytics>(\n    []\n  )\n  useEffect(() => {\n    XHR(xhr)\n      .getConvertedTripAnalytics()\n      .then(setConvertedTripAnalytics)\n  }, [])\n  return (\n    <section>\n      <h2>Converted trips over time</h2>\n      <Table\n        responsive\n        bordered\n        striped\n        headers={[\"ID\", \"Dates\", \"Stages\", \"Destinations\", \"Traveler\", \"Pax\"]}\n        rows={trips.map(\n          ({\n            id,\n            trip_source,\n            trip_id,\n            start_date,\n            end_date,\n            locations,\n            no_of_adults,\n            children,\n            contact,\n            latest_stage,\n          }) => [\n            <Link to={\"/trips/\" + id.toString()}>\n              {trip_source.short_name}-{trip_id || id}\n            </Link>,\n            `${moment\n              .utc(start_date)\n              .local()\n              .format(\"DD/MM/YYYY\")} to ${moment\n              .utc(end_date)\n              .local()\n              .format(\"DD/MM/YYYY\")}`,\n            latest_stage ? latest_stage.name : \"Initiated\",\n            locations.map(l => l.short_name).join(\" • \"),\n            contact ? (\n              <div>\n                {contact.name}\n                <br />\n                <a href={`tel:${contact.phone_number}`} className=\"btn--icon\">\n                  <Icons.PhoneIcon\n                    title={`Call to ${contact.name} on ${contact.phone_number}`}\n                  />\n                </a>\n                <a href={`mailto:${contact.email}`} className=\"btn--icon\">\n                  <Icons.MailIcon\n                    title={`Send Email to ${contact.name} at ${contact.email}`}\n                  />\n                </a>\n              </div>\n            ) : null,\n            `${no_of_adults} Adults${children ? \" with \" + children : \"\"}`,\n          ]\n        )}\n      />\n    </section>\n  )\n}\n\nfunction DuePayments({ xhr }: XHRProps) {\n  const [duePayments, setDuePayments] = useState<IDuePayments>([])\n  useEffect(() => {\n    XHR(xhr)\n      .getDuePayments()\n      .then(setDuePayments)\n  }, [])\n  return (\n    <section>\n      <h2>Due payments</h2>\n      <Table bordered responsive>\n        <thead>\n          <tr>\n            <th>Due Date</th>\n            {duePayments.map((a, i) => (\n              <th key={i}>\n                {moment\n                  .utc(a.due_date)\n                  .local()\n                  .format(\"DD/MM/YYYY\")}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th>Amount</th>\n            {duePayments.map((a, i) => (\n              <td key={i}>\n                {a.is_credit ? \"+\" : \"-\"}\n                {a.due_amount}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </Table>\n    </section>\n  )\n}\n\nfunction Transactions({ xhr }: XHRProps) {\n  const [transactions, setTransactions] = useState<{\n    data: ITransactions\n    debited: number\n    credited: number\n  }>({ data: [], debited: 0, credited: 0 })\n  useEffect(() => {\n    XHR(xhr)\n      .getTransactions()\n      .then(({ data, meta }) => setTransactions({ data, ...meta }))\n  }, [])\n  return (\n    <section>\n      <h2>Transactions</h2>\n      <div>\n        Credited: {transactions.credited} • Debited: {transactions.debited}\n      </div>\n      <Table responsive bordered>\n        <thead>\n          <tr>\n            <th>Date</th>\n            {transactions.data.map((a, i) => (\n              <th key={i}>\n                {moment\n                  .utc(a.date)\n                  .local()\n                  .format(\"DD/MM/YYYY\")}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th>Amount</th>\n            {transactions.data.map((a, i) => (\n              <td key={i}>\n                {a.is_credited ? \"+\" : \"-\"}\n                {a.amount}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </Table>\n    </section>\n  )\n}\n\ninterface DashboardProps extends RouteComponentProps, XHRProps {}\n\nfunction Dashboard({ xhr }: DashboardProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Helmet>\n        <title>Dashboard</title>\n      </Helmet>\n      <ConvertedTrips xhr={xhr} />\n      <DuePayments xhr={xhr} />\n      <Transactions xhr={xhr} />\n    </RedirectUnlessAuthenticated>\n  )\n}\n\nexport default withXHR<DashboardProps>(Dashboard)\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\n\nexport default function NotFound(props: RouteComponentProps) {\n  return (\n    <div>\n      <h2>Not Found</h2>\n      <Link to=\"/\">Visit Dashboard</Link>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport { Formik, FormikProps, FormikActions, Form } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\n\nimport { RedirectUnlessAuthenticated, useAuthUser } from \"./../Auth\"\nimport Helmet from \"react-helmet-async\"\nimport { InputField } from \"../Shared/InputField\"\nimport { withXHR, XHRProps } from \"../xhr\"\n\n// schemas\nexport interface IChangePasswordCredentials {\n  current: string\n  password: string\n  password_confirmation: string\n}\nexport const changePasswordSchema = Validator.object().shape({\n  current: Validator.string().required(\"Current password field is required\"),\n  password: Validator.string().required(\"Password field is required\"),\n  password_confirmation: Validator.string().required(\n    \"Password confirmation field is required\"\n  ),\n})\n\n// actions\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async changePassword(data: IChangePasswordCredentials): Promise<any> {\n      return xhr.patch(\"/passwords\", data)\n    },\n  }\n}\n\nconst changePasswordInitialValues: IChangePasswordCredentials = {\n  current: \"\",\n  password: \"\",\n  password_confirmation: \"\",\n}\n\ninterface ChangePasswordProps extends XHRProps, RouteComponentProps {}\n\nfunction ChangePassword({ xhr, navigate }: ChangePasswordProps) {\n  const { user } = useAuthUser()\n  return (\n    <RedirectUnlessAuthenticated>\n      <Helmet>\n        <title>Change Password</title>\n      </Helmet>\n      <Formik\n        initialValues={changePasswordInitialValues}\n        validationSchema={changePasswordSchema}\n        onSubmit={(\n          values: IChangePasswordCredentials,\n          actions: FormikActions<IChangePasswordCredentials>\n        ) => {\n          actions.setStatus()\n          XHR(xhr)\n            .changePassword(values)\n            .then(() => {\n              alert(\"Password updated successfully\")\n              navigate && navigate(\"/\")\n            })\n            .catch(error => {\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setStatus(error.message)\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({ isSubmitting }: FormikProps<IChangePasswordCredentials>) => (\n          <Form noValidate>\n            <fieldset>\n              <legend>Change Password</legend>\n              {user ? (\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={user.email}\n                  hidden\n                  readOnly\n                  autoComplete=\"username\"\n                />\n              ) : null}\n              <InputField\n                label=\"Current Password\"\n                name=\"current\"\n                type=\"password\"\n                required\n                id=\"current\"\n                autoComplete=\"current-password\"\n              />\n              <InputField\n                name=\"password\"\n                label=\"New Password\"\n                type=\"password\"\n                required\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n              <InputField\n                label=\"Confirm new password\"\n                name=\"password_confirmation\"\n                type=\"password\"\n                required\n                id=\"password_confirmation\"\n                autoComplete=\"new-password\"\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Update\n                </Button>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </RedirectUnlessAuthenticated>\n  )\n}\nexport default withXHR(ChangePassword)\n","import React from \"react\"\nimport { Omit } from \"utility-types\"\nimport classNames from \"classnames\"\n\nimport \"./layout.css\"\n\nexport function Container({\n  fluid,\n  className,\n  as: Component = \"div\",\n  ...props\n}: Omit<React.HTMLProps<HTMLDivElement>, \"as\"> & {\n  fluid?: boolean\n  as?: React.ReactType\n}) {\n  return (\n    <Component\n      className={`container${fluid ? \"-fluid\" : \"\"} ${\n        className ? className : \"\"\n      }`}\n      {...props}\n    />\n  )\n}\n\ninterface GridProps {\n  as?: React.ReactType\n  noGutters?: boolean\n}\n\nexport function Grid({\n  className,\n  noGutters,\n  as: Component = \"div\",\n  ...props\n}: Omit<React.HTMLProps<HTMLDivElement>, \"as\"> & GridProps) {\n  return (\n    <Component\n      className={`row ${noGutters ? \"no-gutters\" : \"\"} ${\n        className ? className : \"\"\n      }`}\n      {...props}\n    />\n  )\n}\n\ntype NumberAttr = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\ntype ColSize = true | \"auto\" | NumberAttr\ntype ColBase = { span?: ColSize; offset?: NumberAttr; order?: NumberAttr }\ntype ColSpec = ColSize | ColBase\n\nexport interface ColProps {\n  xs?: ColSpec\n  sm?: ColSpec\n  md?: ColSpec\n  lg?: ColSpec\n  xl?: ColSpec\n}\n\nexport function Col({\n  className,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  as: Component = \"div\",\n  ...props\n}: Omit<React.HTMLProps<HTMLDivElement>, \"as\"> &\n  ColProps & {\n    as?: React.ReactType\n  }) {\n  const prefix = \"col\"\n  const classes: Array<string> = []\n  const spans: Array<string> = []\n  const deviceSize = [\n    [\"xs\", xs],\n    [\"sm\", sm],\n    [\"md\", md],\n    [\"lg\", lg],\n    [\"xl\", xl],\n  ]\n  deviceSize.forEach(([breakPoint, value]) => {\n    let span, offset, order\n    if (value !== null && typeof value === \"object\") {\n      span = value.span\n      offset = value.offset\n      order = value.order\n    } else {\n      span = value\n    }\n    let infix = breakPoint !== \"xs\" ? `-${breakPoint}` : \"\"\n    if (span != null)\n      spans.push(\n        span === true ? `${prefix}${infix}` : `${prefix}${infix}-${span}`\n      )\n\n    if (order != null) classes.push(`order${infix}-${order}`)\n    if (offset != null) classes.push(`offset${infix}-${offset}`)\n  })\n  if (!spans.length) {\n    spans.push(\"col\") // plain 'col'\n  }\n  return (\n    <Component\n      className={classNames(className, ...classes, ...spans)}\n      {...props}\n    />\n  )\n}\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport ChangePassword from \"./ChangePassword\"\nimport { Grid, Col, Container } from \"../Shared/Layout\"\n\ninterface SettingsProps extends RouteComponentProps {}\n\nfunction Settings(_: SettingsProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Helmet>\n        <title>Settings</title>\n      </Helmet>\n      <h2>Settings</h2>\n      <Container fluid>\n        <Grid>\n          <Col as=\"fieldset\" sm={2}>\n            <ul className=\"list\">\n              <li>\n                <Link to=\"change-password\">Change Password</Link>\n              </li>\n            </ul>\n          </Col>\n          <Col className=\"col-sm\">\n            <Router>\n              <ChangePassword path=\"change-password\" />\n              <ChangePassword path=\"/\" />\n            </Router>\n          </Col>\n        </Grid>\n      </Container>\n    </RedirectUnlessAuthenticated>\n  )\n}\n\nexport default Settings\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { Formik, FormikProps, Form, FormikActions } from \"formik\"\nimport * as Validator from \"yup\"\n\nimport { RedirectIfAuthenticated } from \"./Auth\"\nimport { searchToQuery } from \"./utils\"\nimport { InputField } from \"./Shared/InputField\"\nimport { withXHR, XHRProps } from \"./xhr\"\n\n// schemas\nexport interface IForgotPasswordCredentials {\n  email: string\n  reset_password_link: string\n}\nexport const forgotPasswordSchema = Validator.object().shape({\n  email: Validator.string()\n    .email(\"Invalid email address\")\n    .required(\"Email field is required\"),\n})\n\n// actions\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async forgotPassword(data: IForgotPasswordCredentials): Promise<any> {\n      return xhr.post(\"/passwords/reset\", data)\n    },\n  }\n}\ninterface ForgotPasswordProps extends XHRProps, RouteComponentProps {}\nfunction ForgotPassword({ xhr, navigate, location }: ForgotPasswordProps) {\n  const query = searchToQuery(location && location.search)\n  const email = query[\"email\"] || \"\"\n  return (\n    <RedirectIfAuthenticated>\n      <Helmet>\n        <title>Forgot Password</title>\n      </Helmet>\n      <div className=\"text-center mt-16\">\n        <h1>Forgot Your Password?</h1>\n        <p>\n          No problem. Just enter your email address and we will send\n          instructions to reset your password. <br />\n          Or{\" \"}\n          <Link to=\"/login\" className=\"text-blue-600 hover:text-blue-800\">\n            Login\n          </Link>{\" \"}\n          if you remember your password!\n        </p>\n      </div>\n      <div className=\"max-w-sm mx-auto\">\n        <Formik\n          initialValues={{\n            email,\n            reset_password_link: `${location &&\n              location.origin}/reset-password`,\n          }}\n          validationSchema={forgotPasswordSchema}\n          onSubmit={(\n            values: IForgotPasswordCredentials,\n            actions: FormikActions<IForgotPasswordCredentials>\n          ) => {\n            actions.setStatus()\n            XHR(xhr)\n              .forgotPassword(values)\n              .then(() => {\n                alert(\n                  `Please check your inbox for password reset instructions.`\n                )\n                actions.setSubmitting(false)\n                navigate && navigate(\"/login\")\n              })\n              .catch(error => {\n                actions.setStatus(error.message)\n                actions.setSubmitting(false)\n              })\n          }}\n          render={({\n            status,\n            isSubmitting,\n            values,\n          }: FormikProps<IForgotPasswordCredentials>) => (\n            <Form noValidate>\n              <fieldset>\n                {status ? (\n                  <p role=\"alert\" className=\"text-red-700\">\n                    {status}\n                  </p>\n                ) : null}\n                <InputField\n                  name=\"email\"\n                  label=\"Email\"\n                  placeholder=\"username@domain.com\"\n                  autoComplete=\"username email\"\n                  required\n                  autoFocus\n                  type=\"email\"\n                  id=\"email\"\n                  tabIndex={1}\n                />\n                <input\n                  type=\"hidden\"\n                  name=\"reset_password_link\"\n                  hidden\n                  value={values.reset_password_link}\n                />\n                <footer>\n                  <Button\n                    primary\n                    tabIndex={2}\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    Get Instructions\n                  </Button>\n                </footer>\n              </fieldset>\n            </Form>\n          )}\n        />\n      </div>\n    </RedirectIfAuthenticated>\n  )\n}\nexport default withXHR(ForgotPassword)\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport {\n  Formik,\n  FormikProps,\n  FormikActions,\n  Form,\n  Field,\n  FieldProps,\n} from \"formik\"\nimport * as Validator from \"yup\"\n\nimport { searchToQuery } from \"./utils\"\nimport { InputField } from \"./Shared/InputField\"\nimport { withXHR, XHRProps } from \"./xhr\"\n\n// schemas\nexport interface IResetPasswordCredentials {\n  email: string\n  token: string\n  password: string\n  password_confirmation: string\n}\nexport const resetPasswordSchema = Validator.object().shape({\n  email: Validator.string()\n    .required(\"Email field is required\")\n    .email(\"Invalid email address\"),\n  token: Validator.string().required(\n    \"Missing token to reset values. Please check for valid url from sent email\"\n  ),\n  password: Validator.string().required(\"Password field is required\"),\n  password_confirmation: Validator.string().required(\n    \"Password confirmation field is required\"\n  ),\n})\n\n// actions\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async resetPassword(data: IResetPasswordCredentials): Promise<any> {\n      return xhr.delete(\"/passwords/reset\", { data })\n    },\n  }\n}\n\ninterface IResetPasswordProps extends XHRProps, RouteComponentProps {}\nfunction ResetPassword({ navigate, location, xhr }: IResetPasswordProps) {\n  const query = searchToQuery(location && location.search)\n  const email = query[\"email\"]\n  const token = query[\"token\"]\n  if (!(email && token)) {\n    navigate && navigate(\"/\")\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>Reset Password</title>\n      </Helmet>\n      <div className=\"text-center mt-16\">\n        <h1>Reset Password</h1>\n        <p>\n          Just enter your new password to reset the password for your email\n          address ({email})\n        </p>\n      </div>\n      <div className=\"max-w-sm mx-auto\">\n        <Formik\n          initialValues={{\n            email,\n            token,\n            password: \"\",\n            password_confirmation: \"\",\n          }}\n          validationSchema={resetPasswordSchema}\n          onSubmit={(\n            values: IResetPasswordCredentials,\n            actions: FormikActions<IResetPasswordCredentials>\n          ) => {\n            actions.setStatus()\n            XHR(xhr)\n              .resetPassword(values)\n              .then(() => {\n                alert(\n                  \"Your passwords updated successfully. You can now log in with the new password\"\n                )\n                navigate && navigate(\"/login\")\n              })\n              .catch(error => {\n                if (error.formikErrors) {\n                  actions.setErrors(error.formikErrors)\n                }\n                actions.setStatus(error.message)\n                actions.setSubmitting(false)\n              })\n          }}\n          render={({\n            isSubmitting,\n            status,\n          }: FormikProps<IResetPasswordCredentials>) => (\n            <Form noValidate>\n              <fieldset>\n                {status ? (\n                  <p className=\"text-red-700\" role=\"alert\">\n                    {status}\n                  </p>\n                ) : null}\n                <Field\n                  name=\"email\"\n                  render={({\n                    field: { value, name },\n                  }: FieldProps<IResetPasswordCredentials>) => (\n                    <input type=\"hidden\" hidden name={name} value={value} />\n                  )}\n                />\n                <Field\n                  name=\"token\"\n                  render={({\n                    field: { value, name },\n                  }: FieldProps<IResetPasswordCredentials>) => (\n                    <input type=\"hidden\" value={value} name={name} />\n                  )}\n                />\n                <InputField\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoFocus\n                  autoComplete=\"new-password\"\n                  required\n                />\n                <InputField\n                  label=\"Confirm Password\"\n                  name=\"password_confirmation\"\n                  type=\"password\"\n                  id=\"password_confirmation\"\n                  autoComplete=\"new-password\"\n                  required\n                />\n                <footer>\n                  <Button primary type=\"submit\" disabled={isSubmitting}>\n                    Reset Password\n                  </Button>\n                </footer>\n              </fieldset>\n            </Form>\n          )}\n        />\n        <div className=\"text-center\">\n          Get instructions{\" \"}\n          <Link\n            to={`/forgot-password?email=${email}`}\n            className=\"text-blue-600 hover:text-blue-800\"\n          >\n            again\n          </Link>{\" \"}\n          <br />\n          OR\n          <br />\n          <Link to=\"/login\" className=\"text-blue-600 hover:text-blue-800\">\n            Login\n          </Link>{\" \"}\n          if you remember your password!\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default withXHR(ResetPassword)\n","import { getType, createAsyncAction, ActionType } from \"typesafe-actions\"\n\nexport interface IBaseItem {\n  id: number\n}\n\nexport interface IMeta {\n  total: number\n  from: number\n  to: number\n  current_page: number\n  last_page: number\n  path?: string\n}\n\nexport interface IPaginate {\n  total: number\n  from: number\n  to: number\n  currentPage: number\n  lastPage: number\n  isFetching: boolean\n}\n\nexport interface ILinks {\n  first?: string\n  last?: string\n  prev?: string\n  next?: string\n}\n\nexport interface IBaseState<Item extends IBaseItem> {\n  readonly items: number[]\n  readonly byId: { [id: string]: Item }\n  readonly meta: IMeta\n  readonly links: ILinks\n}\n\nexport function init<Item extends IBaseItem>(items?: Item[]): IBaseState<Item> {\n  const state: IBaseState<Item> = {\n    items: [],\n    byId: {},\n    meta: {\n      from: 0,\n      to: 0,\n      total: 0,\n      current_page: 1,\n      last_page: 1,\n    },\n    links: {},\n  }\n  return model<Item>(state).insert(items)\n}\n\nexport function model<Item extends IBaseItem>(prevState?: IBaseState<Item>) {\n  const state = prevState || init<Item>()\n  return {\n    insert(\n      items?: Item[],\n      meta?: IMeta,\n      atStart: boolean = false\n    ): IBaseState<Item> {\n      if (!items) return state\n      return items.reduce((state: IBaseState<Item>, item) => {\n        let { byId, items, meta: stateMeta } = state\n        if (!byId[item.id]) {\n          if (atStart) {\n            items = [item.id].concat(items)\n          } else {\n            items = items.concat(item.id)\n          }\n        }\n        byId[item.id] = item\n        return {\n          ...state,\n          byId: { ...byId },\n          items: [...items],\n          meta: { ...stateMeta, ...(meta || {}) },\n        }\n      }, state)\n    },\n    get(): Item[] {\n      return state.items.map(id => state.byId[id])\n    },\n    getItem(id?: string | number) {\n      if (!id) return\n      return state.byId[id]\n    },\n    getMeta(): IMeta {\n      return state.meta\n    },\n    get total(): number {\n      return this.getMeta().total || 0\n    },\n    get currentPage(): number {\n      return this.getMeta().current_page || 1\n    },\n    get lastPage(): number {\n      return this.getMeta().last_page || 1\n    },\n    get from(): number {\n      return this.getMeta().from || 0\n    },\n    get to(): number {\n      return this.getMeta().to || 0\n    },\n    get meta() {\n      const total = this.total\n      const lastPage = this.lastPage\n      const currentPage = this.currentPage\n      const from = this.from\n      const to = this.to\n      return { total, lastPage, currentPage, from, to }\n    },\n  }\n}\n\nexport interface IModelState<IItem extends IBaseItem> {\n  readonly state: IBaseState<IItem>\n  readonly isFetching: boolean\n}\n\nexport function createReducer<\n  IItem extends IBaseItem,\n  IState extends IModelState<IItem>\n>(\n  INITIAL_STATE: IState,\n  actions: {\n    list: ReturnType<ReturnType<typeof createAsyncAction>>\n    item: ReturnType<ReturnType<typeof createAsyncAction>>\n  },\n  reducer?: (state: IState, action: ActionType<any>) => IState\n) {\n  return (state: IState = INITIAL_STATE, action: ActionType<any>): IState => {\n    if (actions.list) {\n      switch (action.type) {\n        case getType(actions.list.request):\n          return { ...state, isFetching: true }\n        case getType(actions.list.success):\n          return {\n            ...state,\n            state: model(init<IItem>()).insert(\n              action.payload.data,\n              action.payload.meta\n            ),\n            isFetching: false,\n          }\n        case getType(actions.list.failure):\n          return { ...state, isFetching: false }\n      }\n    }\n    if (actions.item) {\n      switch (action.type) {\n        case getType(actions.item.request):\n          return { ...state, isFetching: true }\n        case getType(actions.item.success):\n          return {\n            ...state,\n            state: model(state.state).insert([action.payload]),\n            isFetching: false,\n          }\n        case getType(actions.item.failure):\n          return { ...state, isFetching: false }\n      }\n    }\n    if (reducer) {\n      return reducer(state, action)\n    }\n    return state\n  }\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\n\nimport {\n  IBaseItem,\n  IBaseState,\n  model,\n  init,\n  IModelState,\n  createReducer,\n  IMeta,\n} from \"./../model\"\nimport { IRole } from \"./../Roles/store\"\n\nexport const key = \"USER_LIST_STATE\"\n\nexport interface IUser extends IBaseItem {\n  id: number\n  name: string\n  email: string\n  email_verified_at?: string\n  created_at: string\n  updated_at: string\n  roles: IRole[]\n}\n\nexport interface IUsers extends IBaseState<IUser> {}\n\nexport interface IState extends IModelState<IUser> {\n  readonly isFetching: boolean\n}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<IUser>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@USERS/LIST_FETCH_REQUEST\",\n    \"@USERS/LIST_FETCH_SUCCESS\",\n    \"@USERS/LIST_FETCH_FAILED\"\n  )<undefined, { data: IUser[]; meta: IMeta }, Error>(),\n  item: createAsyncAction(\n    \"@USERS/ITEM_FETCH_REQUEST\",\n    \"@USERS/ITEM_FETCH_SUCCESS\",\n    \"@USERS/ITEM_FETCH_FAILED\"\n  )<undefined, IUser, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<IUser, IState>(\n  INITIAL_STATE,\n  actions as any\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model<IUser>(myState.state),\n    get state(): IState {\n      return state[key]\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React from \"react\"\n\nimport \"./spinner.css\"\nimport { Icons } from \"@tourepedia/ui\"\n\nexport function Spinner() {\n  return (\n    <span className=\"spin\">\n      <Icons.SpinnerIcon />\n    </span>\n  )\n}\n\nexport default Spinner\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link, Redirect } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\n\nimport { ThunkAction } from \"./../types\"\nimport { IUser, actions, IStateWithKey, selectors } from \"./store\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\nimport Spinner from \"../Shared/Spinner\"\n\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async getUser(id: string): Promise<IUser> {\n      return xhr.get(`/users/${id}`).then(({ data }) => data.data)\n    },\n  }\n}\n\nexport const getUserAction = (\n  id: string\n): ThunkAction<Promise<IUser>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.item.request())\n  return XHR(xhr)\n    .getUser(id)\n    .then(user => {\n      dispatch(actions.item.success(user))\n      return user\n    })\n    .catch(error => {\n      dispatch(actions.item.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useUserState(userId?: string | number) {\n  interface StateProps {\n    isFetching: boolean\n    user?: IUser\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const usersSelector = selectors(state)\n    return {\n      isFetching: usersSelector.isFetching,\n      user: usersSelector.getItem(userId),\n    }\n  })\n}\n\nexport function useUserFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((userId: string) => dispatch(getUserAction(userId)), [\n    dispatch,\n  ])\n}\n\nexport function useUser(userId?: string, shouldFetch: boolean = false) {\n  const state = useUserState(userId)\n  const fetchUser = useUserFetch()\n  useEffect(() => {\n    if (shouldFetch) {\n      userId && fetchUser(userId)\n    }\n  }, [shouldFetch, userId, fetchUser])\n  return {\n    ...state,\n    fetchUser,\n  }\n}\n\nexport default function User({\n  navigate,\n  userId,\n}: RouteComponentProps<{ userId: string }>) {\n  const { user, isFetching } = useUser(userId, true)\n  if (!userId) {\n    navigate && navigate(\"/users\")\n    return null\n  }\n  return (\n    <Fragment>\n      <Helmet>\n        <title>{user ? user.name : \"\"} | User</title>\n      </Helmet>\n      <Link to=\"..\">Back to list</Link>\n      {isFetching ? (\n        <div className=\"text-center\">\n          <Spinner />\n        </div>\n      ) : user ? (\n        <div>\n          <h3>\n            {user.name}{\" \"}\n            <Link to=\"edit\" title=\"Edit Name\">\n              &#9998;\n            </Link>\n          </h3>\n          <p>\n            Roles:{\" \"}\n            {(user.roles || []).map((r, i, arr) => (\n              <span key={r.id}>\n                {r.name}\n                {i !== arr.length - 1 ? \" • \" : \"\"}\n              </span>\n            ))}\n            <Link to=\"edit-roles\" title=\"Edit Roles\">\n              &#9998;\n            </Link>\n          </p>\n          Email Verified on:{\" \"}\n          {user.email_verified_at\n            ? moment\n                .utc(user.email_verified_at)\n                .local()\n                .format(\"Do MMM, YYYY \\\\at hh:mm A\")\n            : \"Not verified yet\"}\n          <br />\n          Invited on:{\" \"}\n          {moment\n            .utc(user.created_at)\n            .local()\n            .format(\"Do MMM, YYYY \\\\at hh:mm A\")}\n        </div>\n      ) : (\n        <Redirect noThrow to=\"/users\" />\n      )}\n    </Fragment>\n  )\n}\n","import React, { Fragment } from \"react\"\nimport Spinner from \"./Spinner\"\n\nexport interface ListProps {\n  isFetching: boolean\n  total: number\n  items?: any[]\n  render?: (items?: any[]) => React.ReactNode\n  children?: React.ReactNode\n}\nexport function List({\n  isFetching,\n  total,\n  items,\n  render,\n  children,\n}: ListProps) {\n  return (\n    <Fragment>\n      {isFetching ? (\n        <div className=\"text-center\">\n          <Spinner />\n        </div>\n      ) : total === 0 ? (\n        <div className=\"text-center\">No item in the list</div>\n      ) : children ? (\n        children\n      ) : render ? (\n        render(items)\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default List\n","import React, { useState } from \"react\"\nimport { Formik, Form } from \"formik\"\nimport { InputField } from \"./InputField\"\nimport { InputGroup, Icons, Button } from \"@tourepedia/ui\"\n\nexport interface SearchProps {\n  initialParams?: {\n    q: string\n  }\n  onSearch: (params: any) => void\n  placeholder?: string\n}\n\nexport function useSearch<T extends {} = {}>(initialValues: T = {} as any) {\n  return useState<T>(initialValues)\n}\n\nconst defaultInitialParams = {\n  q: \"\",\n}\n\nexport function Search({\n  initialParams = defaultInitialParams,\n  onSearch,\n  placeholder = \"Search...\",\n}: SearchProps) {\n  return (\n    <Formik\n      initialValues={initialParams}\n      onSubmit={values => onSearch(values)}\n      render={() => (\n        <Form noValidate style={{ marginBottom: \"1em\" }}>\n          <InputGroup style={{ minWidth: \"280px\" }}>\n            <InputField\n              name=\"q\"\n              noGroup\n              placeholder={placeholder}\n              type=\"search\"\n            />\n            <Button type=\"submit\">\n              <Icons.SearchIcon />\n            </Button>\n          </InputGroup>\n        </Form>\n      )}\n    />\n  )\n}\n\nexport default Search\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { ThunkAction } from \"./../types\"\nimport { IUser, actions, IStateWithKey, selectors } from \"./store\"\nimport { List } from \"./../Shared/List\"\nimport { Search, useSearch } from \"./../Shared/Search\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getUsers(params?: any): Promise<{ data: IUser[]; meta: any }> {\n      return xhr.get(\"/users\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getUsersAction = (\n  params?: any\n): ThunkAction<Promise<IUser[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getUsers(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useUsersState() {\n  interface StateProps extends IPaginate {\n    users: IUser[]\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const usersSelector = selectors(state)\n    return {\n      ...usersSelector.meta,\n      isFetching: usersSelector.isFetching,\n      users: usersSelector.get(),\n    }\n  })\n}\n\nfunction useUsersFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getUsersAction(params)), [\n    dispatch,\n  ])\n}\n\nfunction useUsers() {\n  return {\n    ...useUsersState(),\n    fetchUsers: useUsersFetch(),\n  }\n}\n\nexport default function Users({  }: RouteComponentProps) {\n  const [params, setParams] = useSearch()\n  const {\n    fetchUsers: getUsers,\n    users,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useUsers()\n  useEffect(() => {\n    getUsers({ page: currentPage })\n  }, [getUsers])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Users</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getUsers({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            isFetching={isFetching}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            onChange={page => getUsers({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <List isFetching={isFetching} total={total}>\n        <Table\n          striped\n          bordered\n          responsive\n          headers={[\"Name\", \"Email\", \"Roles\", \"Email Verified At\"]}\n          rows={users.map(r => [\n            <Link to={r.id.toString()}>{r.name}</Link>,\n            <span>{r.email}</span>,\n            <span>{r.roles.map(r => r.name).join(\" • \")}</span>,\n            <span>\n              {r.email_verified_at\n                ? moment\n                    .utc(r.email_verified_at)\n                    .local()\n                    .format(\"Do MMM, YYYY \\\\at hh:mm A\")\n                : \"Not Verified Yet\"}\n            </span>,\n          ])}\n        />\n      </List>\n    </Fragment>\n  )\n}\n\ninterface SelectUsersProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectUsers = withXHR<SelectUsersProps>(function SelectUsers({\n  xhr,\n  ...otherProps\n}: SelectUsersProps) {\n  return (\n    <Async\n      multiple\n      {...otherProps}\n      fetch={q =>\n        XHR(xhr)\n          .getUsers({ q })\n          .then(resp => resp.data)\n      }\n    />\n  )\n})\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, FormikProps, FormikActions, Form } from \"formik\"\nimport * as Validator from \"yup\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { InputField } from \"./../Shared/InputField\"\nimport { withXHR, XHRProps } from \"./../xhr\"\n\nexport interface NewUserCredentials {\n  name: string\n  email: string\n  invited_signup_link: string\n}\nconst newUserSchema = Validator.object().shape({\n  name: Validator.string()\n    .required(\"Name is required\")\n    .min(4, \"Minimum 4 characters required\")\n    .max(199, \"Maximum 199 characters allowed\"),\n  email: Validator.string()\n    .email(\"Email must be a valid email address\")\n    .required(\"Email field is required\"),\n})\nconst initialValues: NewUserCredentials = {\n  name: \"\",\n  email: \"\",\n  invited_signup_link: \"\",\n}\n\ninterface NewUserProps extends RouteComponentProps, XHRProps {}\n\nexport function NewUser({ xhr, navigate, location }: NewUserProps) {\n  initialValues.invited_signup_link = location\n    ? `${location.origin}/invited-signup`\n    : \"\"\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={newUserSchema}\n        onSubmit={(\n          values: NewUserCredentials,\n          actions: FormikActions<NewUserCredentials>\n        ) => {\n          actions.setStatus()\n          xhr\n            .post(\"/invited-users\", values)\n            .then(({ data }) => {\n              const { data: user } = data\n              navigate && navigate(`../${user.id}`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({\n          isSubmitting,\n          status,\n          values,\n        }: FormikProps<NewUserCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Invite New User</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                required\n                placeholder=\"John Tourepedia\"\n                autoComplete=\"name\"\n              />\n              <InputField\n                label=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"username\"\n                placeholder=\"username@tourepedia.com\"\n                required\n              />\n              <input\n                hidden\n                type=\"hidden\"\n                name=\"invited_signup_link\"\n                value={values.invited_signup_link}\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default withXHR<NewUserProps>(NewUser)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { Formik, FormikProps, FormikActions, Form } from \"formik\"\nimport * as Validator from \"yup\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { InputField } from \"./../Shared/InputField\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { useUser } from \"./Item\"\nimport Spinner from \"../Shared/Spinner\"\n\nconst newUserSchema = Validator.object().shape({\n  name: Validator.string()\n    .required(\"Name is required\")\n    .min(4, \"Minimum 4 characters required\")\n    .max(199, \"Maximum 199 characters allowed\"),\n})\n\ninterface EditUserProps\n  extends RouteComponentProps<{ userId: string }>,\n    XHRProps {}\n\nexport function EditUser({ xhr, navigate, userId }: EditUserProps) {\n  const { user, isFetching } = useUser(userId, true)\n  if (!userId) {\n    navigate && navigate(\"/users\")\n    return null\n  }\n  if (isFetching)\n    return (\n      <div className=\"text-center\">\n        <Spinner />\n      </div>\n    )\n  if (!user) {\n    navigate && navigate(\"/users\")\n    return null\n  }\n  const { name } = user\n  const initialValues = {\n    name: name,\n  }\n  type UserCredentials = typeof initialValues\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Edit User</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={newUserSchema}\n        onSubmit={(\n          values: UserCredentials,\n          actions: FormikActions<UserCredentials>\n        ) => {\n          actions.setStatus()\n          xhr\n            .patch(`/users/${userId}`, values)\n            .then(({ data }) => {\n              const { data: user } = data\n              navigate && navigate(`../../${user.id}`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<UserCredentials>) => (\n          <Form noValidate>\n            <fieldset>\n              <legend>Edit User Details</legend>\n              {status ? <div>{status}</div> : null}\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                placeholder=\"Manager\"\n                required\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<EditUserProps>(EditUser)\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\n\nimport {\n  IBaseItem,\n  IBaseState,\n  model,\n  init,\n  IModelState,\n  IMeta,\n  createReducer,\n} from \"./../model\"\n\nexport const key = \"ROLE_LIST_STATE\"\n\nexport interface IPermission extends IBaseItem {\n  id: number\n  name: string\n}\n\nexport interface IRole extends IBaseItem {\n  id: number\n  name: string\n  internal_name: string\n  created_at: string\n  updated_at: string\n  permissions?: IPermission[]\n}\n\nexport interface IRoles extends IBaseState<IRole> {}\n\nexport interface IState extends IModelState<IRole> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<IRole>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@ROLES/LIST_FETCH_REQUEST\",\n    \"@ROLES/LIST_FETCH_SUCCESS\",\n    \"@ROLES/LIST_FETCH_FAILED\"\n  )<undefined, { data: IRole[]; meta: IMeta }, Error>(),\n  item: createAsyncAction(\n    \"@ROLES/ITEM_FETCH_REQUEST\",\n    \"@ROLES/ITEM_FETCH_SUCCESS\",\n    \"@ROLES/ITEM_FETCH_FAILED\"\n  )<undefined, IRole, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link, Redirect } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\n\nimport { ThunkAction } from \"./../types\"\nimport { IRole, actions, IStateWithKey, selectors } from \"./store\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\nimport Spinner from \"../Shared/Spinner\"\n\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async getRole(id: string): Promise<IRole> {\n      return xhr.get(`/roles/${id}`).then(({ data }) => data.data)\n    },\n  }\n}\n\nexport const getRoleAction = (\n  id: string\n): ThunkAction<Promise<IRole>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.item.request())\n  return XHR(xhr)\n    .getRole(id)\n    .then(role => {\n      dispatch(actions.item.success(role))\n      return role\n    })\n    .catch(error => {\n      dispatch(actions.item.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useRoleState(roleId?: number | string) {\n  interface StateProps {\n    isFetching: boolean\n    role?: IRole\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const rolesSelector = selectors(state)\n    return {\n      isFetching: rolesSelector.isFetching,\n      role: rolesSelector.getItem(roleId),\n    }\n  })\n}\nexport function useRoleFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((roleId: string) => dispatch(getRoleAction(roleId)), [\n    dispatch,\n  ])\n}\n\nexport function useRole(roleId?: string, shouldFetch: boolean = false) {\n  const roleState = useRoleState(roleId)\n  const fetchRole = useRoleFetch()\n  useEffect(() => {\n    if (shouldFetch) {\n      roleId && fetchRole(roleId)\n    }\n  }, [shouldFetch, roleId])\n  return {\n    ...roleState,\n    fetchRole,\n  }\n}\n\nexport default function Role({\n  roleId,\n  navigate,\n}: RouteComponentProps<{ roleId: string }>) {\n  const { role, isFetching } = useRole(roleId, true)\n  if (!roleId) {\n    navigate && navigate(\"/roles\")\n    return null\n  }\n  return (\n    <Fragment>\n      <Helmet>\n        <title>{role ? role.name : \"\"} Role</title>\n      </Helmet>\n      <Link to=\"..\">Back to list</Link>\n      {isFetching ? (\n        <div className=\"text-center\">\n          <Spinner />\n        </div>\n      ) : role ? (\n        <div>\n          <h3>\n            {role.name}{\" \"}\n            <Link to=\"edit\" title=\"Edit Role\">\n              &#9998;\n            </Link>\n          </h3>\n          Created at:{\" \"}\n          {moment\n            .utc(role.created_at)\n            .local()\n            .format(\"Do MMM YYYY \\\\at hh:mm A\")}\n          <br />\n          <p>\n            <b>Permissions</b>:{\" \"}\n            {(role.permissions || []).map((p, i, arr) => (\n              <span key={p.id}>\n                {p.name}\n                {i !== arr.length - 1 ? \" • \" : \"\"}\n              </span>\n            ))}{\" \"}\n            <Link to=\"edit-permissions\" title=\"Edit Permissions\">\n              &#9998;\n            </Link>\n          </p>\n        </div>\n      ) : (\n        <Redirect noThrow to=\"/users\" />\n      )}\n    </Fragment>\n  )\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { ThunkAction } from \"./../types\"\nimport { IRole, IPermission, actions, IStateWithKey, selectors } from \"./store\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getRoles(params?: any): Promise<{ data: IRole[]; meta: any }> {\n      return xhr.get(\"/roles\", { params }).then(resp => resp.data)\n    },\n    async getPermissions(params?: any): Promise<IPermission[]> {\n      return xhr.get(\"/permissions\", { params }).then(({ data }) => data.data)\n    },\n  }\n}\n\nexport const getRolesAction = (\n  params?: any\n): ThunkAction<Promise<IRole[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getRoles(params)\n    .then(roles => {\n      dispatch(actions.list.success(roles))\n      return roles.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useRolesState() {\n  interface StateProps extends IPaginate {\n    roles: IRole[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const rolesSelector = selectors(state)\n    return {\n      ...rolesSelector.meta,\n      isFetching: rolesSelector.isFetching,\n      roles: rolesSelector.get(),\n    }\n  })\n}\nfunction useRolesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getRolesAction(params)), [\n    dispatch,\n  ])\n}\nfunction useRoles() {\n  return {\n    ...useRolesState(),\n    fetchRoles: useRolesFetch(),\n  }\n}\nexport default function Roles({  }: RouteComponentProps) {\n  const {\n    roles,\n    total,\n    from,\n    to,\n    isFetching,\n    currentPage,\n    lastPage,\n    fetchRoles: getRoles,\n  } = useRoles()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getRoles({ page: currentPage })\n  }, [getRoles])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Roles</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getRoles({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getRoles({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          headers={[\"Name\", \"Permissions\"]}\n          striped\n          bordered\n          rows={roles.map(r => [\n            <Link to={r.id.toString()}>{r.name}</Link>,\n            (r.permissions || []).map(p => p.name).join(\" • \"),\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectRolesProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectRoles = withXHR<SelectRolesProps>(function SelectRoles({\n  xhr,\n  ...otherProps\n}: SelectRolesProps) {\n  return (\n    <Async\n      multiple\n      fetch={q =>\n        XHR(xhr)\n          .getRoles({ q })\n          .then(resp => resp.data)\n      }\n      {...otherProps}\n    />\n  )\n})\n\ninterface SelectPermissionsProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectPermissions = withXHR<SelectPermissionsProps>(\n  function SelectPermissions({ xhr, ...otherProps }: SelectPermissionsProps) {\n    return (\n      <Async\n        multiple\n        fetch={q => XHR(xhr).getPermissions({ q })}\n        {...otherProps}\n      />\n    )\n  }\n)\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, FormikProps, FormikActions, Form } from \"formik\"\nimport * as Validator from \"yup\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\n\nexport interface NewRoleCredentials {\n  name: string\n}\nconst newRoleSchema = Validator.object().shape({\n  name: Validator.string()\n    .required(\"Name is required\")\n    .min(4, \"Minimum 4 characters required\")\n    .max(199, \"Maximum 199 characters allowed\"),\n})\nconst initialValues = {\n  name: \"\",\n}\n\ninterface NewRoleProps extends RouteComponentProps, XHRProps {}\n\nexport function NewRole({ xhr, navigate }: NewRoleProps) {\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={newRoleSchema}\n        onSubmit={(\n          values: NewRoleCredentials,\n          actions: FormikActions<NewRoleCredentials>\n        ) => {\n          actions.setStatus()\n          return xhr\n            .post(\"/roles\", values)\n            .then(({ data }) => {\n              const { data: role } = data\n              navigate && navigate(`../${role.id}`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<NewRoleCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add New Role</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                required\n                placeholder=\"Manager\"\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default withXHR<NewRoleProps>(NewRole)\n","import React, { Fragment, useEffect } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, FormikProps, FormikActions, Form } from \"formik\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\nimport { useRole } from \"./Item\"\nimport Spinner from \"../Shared/Spinner\"\n\nconst newRoleSchema = Validator.object().shape({\n  name: Validator.string()\n    .required(\"Name is required\")\n    .min(4, \"Minimum 4 characters required\")\n    .max(199, \"Maximum 199 characters allowed\"),\n})\n\ninterface EditRoleProps\n  extends RouteComponentProps<{ roleId: string }>,\n    XHRProps {}\n\nexport function EditRole({ xhr, navigate, roleId }: EditRoleProps) {\n  const { role, isFetching } = useRole(roleId, true)\n  if (!roleId) {\n    navigate && navigate(\"/roles\")\n    return null\n  }\n  if (isFetching)\n    return (\n      <div className=\"text-center\">\n        <Spinner />\n      </div>\n    )\n  if (!role) return null\n  const { id, name } = role\n  const initialValues = {\n    name,\n  }\n  type RoleCredentials = typeof initialValues\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Editing {name} Role</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={newRoleSchema}\n        onSubmit={(\n          values: RoleCredentials,\n          actions: FormikActions<RoleCredentials>\n        ) => {\n          actions.setStatus()\n          xhr\n            .put(`/roles/${id}`, values)\n            .then(({ data }) => {\n              const { data: role } = data\n              navigate && navigate(`../../${role.id}`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<RoleCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Edit Role</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                placeholder=\"Manager\"\n                required\n              />\n              <Button type=\"submit\" disabled={isSubmitting}>\n                Save\n              </Button>\n            </fieldset>\n            <Link to=\"..\">Cancel</Link>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<EditRoleProps>(EditRole)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { Formik, FormikProps, FormikActions, Form } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { useRole } from \"./Item\"\nimport { SelectPermissions } from \"./List\"\nimport { FormikFormGroup } from \"../Shared/InputField\"\nimport Spinner from \"../Shared/Spinner\"\n\ninterface EditPermissionsProps\n  extends RouteComponentProps<{ roleId: string }>,\n    XHRProps {}\n\nexport function EditPermissions({\n  xhr,\n  navigate,\n  roleId,\n}: EditPermissionsProps) {\n  const { role, isFetching } = useRole(roleId, true)\n  if (!roleId) {\n    navigate && navigate(\"/roles\")\n    return null\n  }\n  if (isFetching)\n    return (\n      <div className=\"text-center\">\n        <Spinner />\n      </div>\n    )\n  if (!role) {\n    navigate && navigate(\"/roles\")\n    return null\n  }\n  const { name, permissions = [] } = role\n  const initialValues = {\n    permissions,\n  }\n  type EditPermissionsCredentials = typeof initialValues\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Edit {name}'s permissions</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(\n          values: EditPermissionsCredentials,\n          actions: FormikActions<EditPermissionsCredentials>\n        ) => {\n          actions.setStatus()\n          xhr\n            .post(`/roles/${roleId}/permissions`, {\n              permissions: values.permissions.map(({ name }) => ({\n                name,\n              })),\n            })\n            .then(_ => {\n              navigate && navigate(`../../${role.id}`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({\n          isSubmitting,\n          status,\n          values,\n          setFieldValue,\n        }: FormikProps<EditPermissionsCredentials>) => (\n          <Form noValidate>\n            <fieldset>\n              <legend>Editing {name}'s permissions</legend>\n              {status ? <div>{status}</div> : null}\n              <FormikFormGroup\n                name=\"permissions\"\n                render={({ field }) => (\n                  <SelectPermissions\n                    {...field}\n                    label=\"Select permission(s)\"\n                    onChange={(value, name) => setFieldValue(name, value)}\n                  />\n                )}\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR(EditPermissions)\n","import React from \"react\"\nimport { RouteComponentProps, Router, Link } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport Item from \"./Item\"\nimport List from \"./List\"\nimport NewItem from \"./New\"\nimport Edit from \"./Edit\"\nimport EditPermissions from \"./EditPermissions\"\n\nexport default function RolesModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"btn float-right\">\n        New Role\n      </Link>\n      <h2>Roles</h2>\n      <hr />\n      <Router>\n        <Item path=\":roleId\" />\n        <Edit path=\":roleId/edit\" />\n        <EditPermissions path=\":roleId/edit-permissions\" />\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { Formik, FormikProps, FormikActions, Form } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { useUser } from \"./Item\"\nimport { SelectRoles } from \"./../Roles\"\nimport { FormikFormGroup } from \"../Shared/InputField\"\nimport Spinner from \"../Shared/Spinner\"\n\ninterface EditRolesProps\n  extends RouteComponentProps<{ userId: string }>,\n    XHRProps {}\n\nexport function EditRoles({ xhr, navigate, userId }: EditRolesProps) {\n  const { user, isFetching } = useUser(userId, true)\n  if (!userId) {\n    navigate && navigate(\"/users\")\n    return null\n  }\n  if (isFetching)\n    return (\n      <div className=\"text-center\">\n        <Spinner />\n      </div>\n    )\n  if (!user) {\n    navigate && navigate(\"/users\")\n    return null\n  }\n  const { name, roles = [] } = user\n  const initialValues = {\n    roles: roles,\n  }\n  type EditRolesCredentials = typeof initialValues\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Edit {name}'s Roles</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(\n          values: EditRolesCredentials,\n          actions: FormikActions<EditRolesCredentials>\n        ) => {\n          actions.setStatus()\n          xhr\n            .post(`/users/${userId}/roles`, {\n              roles: values.roles.map(({ internal_name }) => ({\n                name: internal_name,\n              })),\n            })\n            .then(_ => {\n              navigate && navigate(`../../${user.id}`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({\n          isSubmitting,\n          status,\n          values,\n          setFieldValue,\n        }: FormikProps<EditRolesCredentials>) => (\n          <Form noValidate>\n            <fieldset>\n              <legend>Editing {name}'s roles</legend>\n              {status ? <div>{status}</div> : null}\n              <FormikFormGroup\n                name=\"roles\"\n                render={({ field }) => (\n                  <SelectRoles\n                    {...field}\n                    label=\"Select Role(s)\"\n                    onChange={(roles, name) => setFieldValue(name, roles)}\n                  />\n                )}\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<EditRolesProps>(EditRoles)\n","import React from \"react\"\nimport { RouteComponentProps, Router, Link } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport Item from \"./Item\"\nimport List from \"./List\"\nimport NewItem from \"./New\"\nimport EditItem from \"./Edit\"\nimport EditRoles from \"./EditRoles\"\n\nexport default function UsersModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"btn float-right\">\n        New User\n      </Link>\n      <h2>Users</h2>\n      <hr />\n      <Router>\n        <Item path=\":userId\" />\n        <EditItem path=\":userId/edit\" />\n        <EditRoles path=\":userId/edit-roles\" />\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\n\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  createReducer,\n  IModelState,\n  IMeta,\n} from \"./../model\"\nimport { store as mealPlanStore } from \"./../MealPlans\"\nimport { store as roomTypeStore } from \"./../RoomTypes\"\nimport { store as locationStore } from \"./../Locations\"\nimport { store as contactStore } from \"./../Contacts\"\nimport { store as hotelPaymentPreferenceStore } from \"./../HotelPaymentPreferences\"\n\nexport const key = \"HOTELS_STATE\"\n\nexport interface IPrice {\n  id: number\n  hotel_id: number\n  base_price: number\n  persons: number\n  adult_with_extra_bed_price: number\n  child_with_extra_bed_price: number\n  child_without_extra_bed_price: number\n  start_date: string\n  end_date: string\n  meal_plan_id: number\n  room_type_id: number\n  meal_plan: mealPlanStore.IMealPlan\n  room_type: roomTypeStore.IRoomType\n}\n\nexport interface IHotelRoomType extends roomTypeStore.IRoomType {\n  allowed_extra_beds: number\n}\nexport interface IHotelMealPlan extends mealPlanStore.IMealPlan {}\n\nexport interface IHotelLocation extends locationStore.ILocation {}\n\nexport interface IHotel extends IBaseItem {\n  id: number\n  name: string\n  stars: number\n  extra_bed_child_age_start: number\n  extra_bed_child_age_end: number\n  meal_plans: IHotelMealPlan[]\n  room_types: IHotelRoomType[]\n  location: IHotelLocation\n  prices?: IPrice[]\n  contacts?: contactStore.IContact[]\n  payment_preference?: hotelPaymentPreferenceStore.IHotelPaymentPreference\n}\n\nexport interface IHotels extends IBaseState<IHotel> {}\nexport interface IPrices extends IBaseState<IPrice> {}\n\nexport interface IState extends IModelState<IHotel> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@HOTELS/LIST_FETCH_REQUEST\",\n    \"@HOTELS/LIST_FETCH_SUCCESS\",\n    \"@HOTELS/LIST_FETCH_FAILED\"\n  )<undefined, { data: IHotel[]; meta: IMeta }, Error>(),\n  item: createAsyncAction(\n    \"@HOTELS/ITEM_FETCH_REQUEST\",\n    \"@HOTELS/ITEM_FETCH_SUCCESS\",\n    \"@HOTELS/ITEM_FETCH_FAILED\"\n  )<undefined, IHotel, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<IHotel>(),\n}\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model<IHotel>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { IHotel, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport { List as Listable } from \"./../Shared/List\"\nimport { Search, useSearch } from \"./../Shared/Search\"\nimport Helmet from \"react-helmet-async\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"./../model\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getHotels(params?: any): Promise<{ data: IHotel[]; meta: any }> {\n      return xhr.get(\"/hotels\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getHotelsAction = (\n  params?: any\n): ThunkAction<Promise<IHotel[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getHotels(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useHotelsState() {\n  interface StateProps extends IPaginate {\n    hotels: IHotel[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const hotelsSelector = selectors(state)\n    return {\n      ...hotelsSelector.meta,\n      isFetching: hotelsSelector.isFetching,\n      hotels: hotelsSelector.get(),\n    }\n  })\n}\nfunction useHotelsFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getHotelsAction(params)), [\n    dispatch,\n  ])\n}\n\nexport function useHotels() {\n  return {\n    ...useHotelsState(),\n    fetchHotels: useHotelsFetch(),\n  }\n}\n\nexport default function List({  }: RouteComponentProps) {\n  const {\n    hotels,\n    total,\n    from,\n    to,\n    lastPage,\n    currentPage,\n    isFetching,\n    fetchHotels: getHotels,\n  } = useHotels()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getHotels({ page: currentPage })\n  }, [getHotels])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Hotels List</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getHotels({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            isFetching={isFetching}\n            currentPage={currentPage}\n            from={from}\n            to={to}\n            lastPage={lastPage}\n            onChange={page => getHotels({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable isFetching={isFetching} total={total}>\n        <Table\n          responsive\n          striped\n          bordered\n          headers={[\"Name\", \"Meal Plans\", \"Room Type\", \"Child extra bed age\"]}\n          rows={hotels.map(hotel => [\n            <Fragment>\n              <h4 className=\"text-base\">\n                <Link to={hotel.id.toString()}>{hotel.name}</Link>\n              </h4>\n              {hotel.location.short_name} • {hotel.stars} stars\n            </Fragment>,\n            hotel.meal_plans.map(mealPlan => mealPlan.name).join(\" • \"),\n            hotel.room_types.map(roomType => roomType.name).join(\" • \"),\n            <Fragment>\n              {hotel.extra_bed_child_age_start}-{hotel.extra_bed_child_age_end}\n              yo\n            </Fragment>,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectLocationsProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectHotels = withXHR<SelectLocationsProps>(\n  function SelectHotels({ xhr, ...otherProps }: SelectLocationsProps) {\n    return (\n      <Async\n        multiple\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getHotels({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import React from \"react\"\nimport { Formik, Form } from \"formik\"\nimport {\n  InputField,\n  // FormikFormGroup\n} from \"../Shared/InputField\"\nimport { Button } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\nimport {\n  store as locationStore,\n  // SelectCountries\n} from \"../Locations\"\n\nconst addContactValidationSchema = Validator.object()\n  .shape({\n    name: Validator.string().required(\"Contact name is required\"),\n    email: Validator.string().email(\"Email should be a valid email address\"),\n    phone_number: Validator.number()\n      .positive(\"Phone number should be a positive integer\")\n      .typeError(\"Invalid number\"),\n  })\n  .required(\"Contact data is required\")\n\ninterface AddContactSchema {\n  name: string\n  email?: string\n  phone_number?: number\n  country?: locationStore.ICountry\n}\n\nconst initialValues: AddContactSchema = {\n  name: \"\",\n  email: \"\",\n}\n\ninterface AddContactFormProps {\n  onCreate: (data: AddContactSchema) => Promise<any>\n  onCancel: () => void\n}\n\nexport function AddContactForm({ onCreate, onCancel }: AddContactFormProps) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={addContactValidationSchema}\n      onSubmit={(values, actions) => {\n        actions.setStatus()\n        onCreate(values)\n          .then(() => {\n            actions.setSubmitting(false)\n            onCancel()\n          })\n          .catch(error => {\n            actions.setStatus(error.message)\n            if (error.formikErrors) {\n              actions.setErrors(error.formikErrors)\n            }\n            actions.setSubmitting(false)\n          })\n      }}\n      render={({ setFieldValue, isSubmitting }) => (\n        <Form noValidate>\n          <InputField\n            name=\"name\"\n            label=\"Name\"\n            required\n            placeholder=\"Johhny Dep\"\n          />\n          <InputField\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            placeholder=\"user@domain.com\"\n          />\n          {\n            // <FormikFormGroup\n            //   name=\"phone_number_dial_code\"\n            //   render={({ field }) => (\n            //     <SelectCountries\n            //       {...field}\n            //       multiple={false}\n            //       label=\"Country Code\"\n            //       onChange={(value, name) => setFieldValue(name, value)}\n            //     />\n            //   )}\n            // />\n          }\n          <InputField\n            name=\"phone_number\"\n            label=\"Phone Number\"\n            type=\"number\"\n            placeholder=\"9911929399\"\n          />\n          <hr />\n          <footer>\n            <Button disabled={isSubmitting} primary type=\"submit\">\n              Save\n            </Button>{\" \"}\n            <Button onClick={onCancel}>Cancel</Button>\n          </footer>\n        </Form>\n      )}\n    />\n  )\n}\n\nexport default AddContactForm\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IMeta,\n  IModelState,\n  createReducer,\n} from \"./../model\"\nimport { store as mealPlanStore } from \"./../MealPlans\"\nimport { store as roomTypeStore } from \"./../RoomTypes\"\nimport { store as hotelStore } from \"./../Hotels\"\n\nexport const key = \"HOTEL_PRICES_STATE\"\n\nexport interface IHotelPrice extends IBaseItem {\n  id: number\n  hotel_id: number\n  base_price: number\n  persons: number\n  adult_with_extra_bed_price: number\n  child_with_extra_bed_price: number\n  child_without_extra_bed_price: number\n  start_date: string\n  end_date: string\n  meal_plan_id: number\n  room_type_id: number\n  hotel: hotelStore.IHotel\n  meal_plan: mealPlanStore.IMealPlan\n  room_type: roomTypeStore.IRoomType\n}\n\nexport interface IHotelPrices extends IBaseState<IHotelPrice> {}\n\nexport interface IState extends IModelState<IHotelPrice> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<IHotelPrice>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@HOTEL_PRICES/LIST_FETCH_REQUEST\",\n    \"@HOTEL_PRICES/LIST_FETCH_SUCCESS\",\n    \"@HOTEL_PRICES/LIST_FETCH_FAILED\"\n  )<undefined, { data: IHotelPrice[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<IHotelPrice, IState>(\n  INITIAL_STATE,\n  actions as any\n)\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model<IHotelPrice>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport moment from \"moment\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { ThunkAction } from \"./../types\"\nimport { IHotelPrice, selectors, actions, IStateWithKey } from \"./store\"\nimport List from \"../Shared/List\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useThunkDispatch, numberToLocalString } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getPrices(params?: any): Promise<{ data: IHotelPrice[]; meta: any }> {\n      return xhr.get(`/hotel-prices`, { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getPricesAction = (\n  params?: any\n): ThunkAction<Promise<IHotelPrice[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getPrices(params)\n    .then(prices => {\n      dispatch(actions.list.success(prices))\n      return prices.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useHotelPrices() {\n  interface StateProps extends IPaginate {\n    prices: IHotelPrice[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const pricesSelector = selectors(state)\n    return {\n      ...pricesSelector.meta,\n      isFetching: pricesSelector.isFetching,\n      prices: pricesSelector.get(),\n    }\n  })\n}\n\ninterface PricesProps\n  extends RouteComponentProps<{\n    hotelId?: string | number\n  }> {}\n\nexport default function Prices({ hotelId }: PricesProps) {\n  const [params, setParams] = useSearch()\n  const dispatch = useThunkDispatch()\n  const getPrices = useCallback(\n    (params?: any) =>\n      dispatch(\n        getPricesAction({\n          ...params,\n          ...(hotelId ? { hotels: [hotelId] } : {}),\n        })\n      ),\n    [dispatch, hotelId]\n  )\n  useEffect(() => {\n    getPrices({ page: currentPage })\n  }, [getPrices])\n  const {\n    prices,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useHotelPrices()\n  return (\n    <Fragment>\n      <Grid>\n        <Col>\n          <Search\n            initialParams={params}\n            onSearch={params => {\n              setParams(params)\n              getPrices({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getPrices({ page })}\n          />\n        </Col>\n      </Grid>\n      <List isFetching={isFetching} total={total}>\n        <Table\n          responsive\n          bordered\n          striped\n          headers={[\"Start Date\", \"End Date\"]\n            .concat(!hotelId ? [\"Hotel\"] : [])\n            .concat([\n              \"Meal Plan\",\n              \"Room Type\",\n              \"Base Price\",\n              \"Persons\",\n              \"A.W.E.B.\",\n              \"C.W.E.B.\",\n              \"C.Wo.E.B\",\n            ])}\n          alignCols={{\n            5: \"right\",\n            6: \"right\",\n            7: \"right\",\n            8: \"right\",\n            9: \"right\",\n          }}\n          rows={prices.map(\n            ({\n              base_price,\n              persons,\n              start_date,\n              end_date,\n              hotel,\n              adult_with_extra_bed_price,\n              child_with_extra_bed_price,\n              child_without_extra_bed_price,\n              meal_plan,\n              room_type,\n            }) =>\n              ([\n                moment\n                  .utc(start_date)\n                  .local()\n                  .format(\"DD/MM/YYYY\"),\n                moment\n                  .utc(end_date)\n                  .local()\n                  .format(\"DD/MM/YYYY\"),\n              ] as any)\n                .concat(\n                  !hotelId\n                    ? [\n                        <span>\n                          {hotel.name}{\" \"}\n                          <small>\n                            ({hotel.location.short_name} - {hotel.stars} Star)\n                          </small>\n                        </span>,\n                      ]\n                    : []\n                )\n                .concat([\n                  meal_plan.name,\n                  room_type.name,\n                  numberToLocalString(base_price),\n                  persons.toString(),\n                  numberToLocalString(adult_with_extra_bed_price),\n                  numberToLocalString(child_with_extra_bed_price),\n                  numberToLocalString(child_without_extra_bed_price),\n                ])\n          )}\n        />\n      </List>\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Form, Formik } from \"formik\"\nimport { InputField } from \"../Shared/InputField\"\nimport { Button } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\n\nconst initialValues = {\n  timezone_offset: new Date().getTimezoneOffset(),\n  file: \"\",\n  file_name: \"\",\n}\n\nconst validationSchema = Validator.object().shape({\n  timezone_offset: Validator.string().required(),\n  file: Validator.mixed().required(\"File field is required\"),\n  file_name: Validator.string().required(\"File field is required\"),\n})\n\ninterface UploadPricesProps extends RouteComponentProps, XHRProps {}\n\nconst UploadPrices = withXHR(function UploadPrices({\n  xhr,\n  navigate,\n}: UploadPricesProps) {\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) => {\n          const data = new FormData()\n          data.set(\"timezone_offset\", values.timezone_offset.toString())\n          data.set(\"file\", values.file)\n          xhr\n            .post(\"/hotel-prices\", data, {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            })\n            .then(resp => {\n              navigate && navigate(\"..\")\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n            .then(() => {\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({ setFieldValue, isSubmitting, status }) => (\n          <Form noValidate encType=\"multipart/form-data\">\n            <fieldset>\n              <legend>Upload file to add hotel prices</legend>\n              {status ? <p className=\"text-red-700\">{status}</p> : null}\n              <InputField\n                label=\"Select a csv file\"\n                name=\"file_name\"\n                type=\"file\"\n                accept=\".csv\"\n                onChange={({ currentTarget }) => {\n                  setFieldValue(\n                    \"file\",\n                    currentTarget.files ? currentTarget.files[0] : \"\"\n                  )\n                  setFieldValue(currentTarget.name, currentTarget.value)\n                }}\n              />\n              <footer>\n                <Button type=\"submit\" disabled={isSubmitting} primary>\n                  Upload\n                </Button>\n                <Link className=\"btn\" to=\"..\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </div>\n  )\n})\n\nexport default UploadPrices\n","import { createAsyncAction, getType, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IModelState,\n  IMeta,\n  createReducer,\n} from \"./../model\"\n\nexport const key = \"MEAL_PLANS_STATE\"\n\nexport interface IMealPlan extends IBaseItem {\n  id: number\n  name: string\n  description: string\n}\n\nexport interface IMealPlans extends IBaseState<IMealPlan> {}\n\nexport interface IState extends IModelState<IMealPlan> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<IMealPlan>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@MEAL_PLANS/LIST_FETCH_REQUEST\",\n    \"@MEAL_PLANS/LIST_FETCH_SUCCESS\",\n    \"@MEAL_PLANS/LIST_FETCH_FAILED\"\n  )<undefined, { data: IMealPlan[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<IMealPlan, IState>(\n  INITIAL_STATE,\n  actions as any\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model<IMealPlan>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { IMealPlan, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getMealPlans(\n      params?: any\n    ): Promise<{ data: IMealPlan[]; meta: any }> {\n      return xhr.get(\"/meal-plans\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getMealPlansAction = (\n  params?: any\n): ThunkAction<Promise<IMealPlan[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getMealPlans(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useMealPlansState() {\n  interface StateProps extends IPaginate {\n    mealPlans: IMealPlan[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const mealPlansSelector = selectors(state)\n    return {\n      ...mealPlansSelector.meta,\n      isFetching: mealPlansSelector.isFetching,\n      mealPlans: mealPlansSelector.get(),\n    }\n  })\n}\n\nfunction useMealPlansFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getMealPlansAction(params)), [\n    dispatch,\n  ])\n}\n\nexport function useMealPlans() {\n  return {\n    ...useMealPlansState(),\n    fetchMealPlans: useMealPlansFetch(),\n  }\n}\n\nexport default function List({  }: RouteComponentProps) {\n  const {\n    mealPlans,\n    total,\n    from,\n    to,\n    isFetching,\n    currentPage,\n    lastPage,\n    fetchMealPlans: getMealPlans,\n  } = useMealPlans()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getMealPlans({ page: currentPage })\n  }, [getMealPlans])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Meal Plans</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getMealPlans({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getMealPlans({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          striped\n          bordered\n          headers={[\"Name\", \"Description\"]}\n          rows={mealPlans.map(mealPlan => [\n            mealPlan.name,\n            mealPlan.description,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectMealPlanProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectMealPlans = withXHR<SelectMealPlanProps>(\n  function SelectMealPlans({ xhr, ...otherProps }: SelectMealPlanProps) {\n    return (\n      <Async\n        multiple\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getMealPlans({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, Form, FormikProps, FormikActions } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\n\nconst validationSchema = Validator.object().shape({\n  name: Validator.string().required(\"Name field is required\"),\n  description: Validator.string().required(\"Description field is required\"),\n})\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n}\ntype NewItemCredentials = typeof initialValues\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\n\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Meal Plan</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          return xhr\n            .post(\"/meal-plans\", values)\n            .then(({ data }) => {\n              navigate && navigate(`..`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setSubmitting(false)\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<NewItemCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add New Meal Plan</legend>\n              <InputField label=\"Name\" name=\"name\" placeholder=\"MAP\" required />\n              <InputField\n                label=\"Description\"\n                name=\"description\"\n                placeholder=\"Modified American Plan (Two meals: Breakfast and one of Lunch or Dinner)\"\n                required\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\n\nexport default function MealPlansModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"float-right btn\">\n        New Meal Plan\n      </Link>\n      <h2>Meal Plans</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IModelState,\n  IMeta,\n  createReducer,\n} from \"./../model\"\n\nexport const key = \"ROOM_TYPES_STATE\"\n\nexport interface IRoomType extends IBaseItem {\n  id: number\n  name: string\n  description: string\n}\n\nexport interface IRoomTypes extends IBaseState<IRoomType> {}\n\nexport interface IState extends IModelState<IRoomType> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<IRoomType>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@ROOM_TYPES/LIST_FETCH_REQUEST\",\n    \"@ROOM_TYPES/LIST_FETCH_SUCCESS\",\n    \"@ROOM_TYPES/LIST_FETCH_FAILED\"\n  )<undefined, { data: IRoomType[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { IRoomType, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getRoomTypes(\n      params?: any\n    ): Promise<{ data: IRoomType[]; meta: any }> {\n      return xhr.get(\"/room-types\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getRoomTypesActions = (\n  params?: any\n): ThunkAction<Promise<IRoomType[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getRoomTypes(params)\n    .then(data => {\n      dispatch(actions.list.success(data))\n      return data.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useRoomTypesState() {\n  interface StateProps extends IPaginate {\n    roomTypes: IRoomType[]\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const roomTypesSelector = selectors(state)\n    return {\n      ...roomTypesSelector.meta,\n      isFetching: roomTypesSelector.isFetching,\n      roomTypes: roomTypesSelector.get(),\n    }\n  })\n}\n\nexport function useRoomTypesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getRoomTypesActions(params)), [\n    dispatch,\n  ])\n}\n\nfunction useRoomTypes() {\n  const state = useRoomTypesState()\n  const fetchRoomTypes = useRoomTypesFetch()\n  return {\n    ...state,\n    fetchRoomTypes,\n  }\n}\n\nexport default function List(_: RouteComponentProps) {\n  const [params, setParams] = useSearch()\n  const {\n    fetchRoomTypes,\n    roomTypes,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useRoomTypes()\n  useEffect(() => {\n    fetchRoomTypes({ page: currentPage })\n  }, [fetchRoomTypes])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Room Types</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              fetchRoomTypes({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            isFetching={isFetching}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            onChange={page => fetchRoomTypes({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          bordered\n          striped\n          headers={[\"Name\", \"Description\"]}\n          rows={roomTypes.map(roomType => [\n            roomType.name,\n            roomType.description,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectRoomTypesProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectRoomTypes = withXHR<SelectRoomTypesProps>(\n  function SelectRoomTypes({ xhr, ...otherProps }: SelectRoomTypesProps) {\n    return (\n      <Async\n        multiple\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getRoomTypes({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, Form, FormikProps, FormikActions } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\n\nconst validationSchema = Validator.object().shape({\n  name: Validator.string().required(\"Name field is required\"),\n  description: Validator.string().required(\"Description field is required\"),\n})\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n}\ntype NewItemCredentials = typeof initialValues\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\n\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Room Type</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          return xhr\n            .post(\"/room-types\", values)\n            .then(({ data }) => {\n              navigate && navigate(`..`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setSubmitting(false)\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<NewItemCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add New Room Type</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                placeholder=\"Delux\"\n                required\n              />\n              <InputField\n                label=\"Description\"\n                name=\"description\"\n                placeholder=\"Luxury room\"\n                required\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\n\nexport default function RoomTypesModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"btn float-right\">\n        New Room Type\n      </Link>\n      <h2>Room Types</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React from \"react\"\nimport { InputField, InputFieldProps } from \"./InputField\"\n\n// dateformat is yyyy-mm-dd\nexport default function DatePicker(props: InputFieldProps) {\n  return <InputField type=\"date\" placeholder=\"dd/mm/yyyy\" {...props} />\n}\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { Formik, FormikActions, FormikProps, Form, FieldArray } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\nimport moment from \"moment\"\n\nimport { InputField, FormikFormGroup } from \"./../Shared/InputField\"\nimport { store as hotelStore, SelectHotels } from \"./../Hotels\"\nimport { SelectMealPlans } from \"./../MealPlans\"\nimport { SelectRoomTypes } from \"./../RoomTypes\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport DatePicker from \"../Shared/DatePicker\"\n\ntype IHotel = hotelStore.IHotel\ntype IHotelMealPlan = hotelStore.IHotelMealPlan\ntype IHotelRoomType = hotelStore.IHotelRoomType\n\ntype NewPriceCredentials = {\n  prices: {\n    start_date: string\n    end_date: string\n    base_price: number\n    adult_with_extra_bed_price: number\n    child_with_extra_bed_price: number\n    child_without_extra_bed_price: number\n    hotel?: IHotel\n    meal_plan?: IHotelMealPlan\n    room_type?: IHotelRoomType\n    persons: number\n  }[]\n}\nconst initialValues: NewPriceCredentials = {\n  prices: [\n    {\n      start_date: \"\",\n      end_date: \"\",\n      base_price: 0,\n      persons: 2,\n      adult_with_extra_bed_price: 0,\n      child_with_extra_bed_price: 0,\n      child_without_extra_bed_price: 0,\n      hotel: undefined,\n      meal_plan: undefined,\n      room_type: undefined,\n    },\n  ],\n}\n\nconst validationSchema = Validator.object().shape({\n  prices: Validator.array().of(\n    Validator.object().shape({\n      hotel: Validator.object().required(\"Hotel is required\"),\n      start_date: Validator.string().required(\"Start date field is required\"),\n      end_date: Validator.string().required(\"End date field is required\"),\n      base_price: Validator.number()\n        .required(\"Base price field is required\")\n        .positive(\"Price should be positive\"),\n      persons: Validator.number()\n        .required(\"Persons field is required\")\n        .integer()\n        .positive(\"Persons should be positive number\"),\n      adult_with_extra_bed_price: Validator.number()\n        .required(\"Price for adult with extra bed is required\")\n        .min(0, \"Price should not be negative\"),\n      child_with_extra_bed_price: Validator.number()\n        .required(\"Price for child with extra bed is required\")\n        .min(0, \"Price should not be negative\"),\n      child_without_extra_bed_price: Validator.number()\n        .nullable(true)\n        .min(0, \"Price should not be negative\")\n        .required(\"Price for child without extra bed is required\"),\n      meal_plan: Validator.object().required(\"Meal plan should be selected\"),\n      room_type: Validator.object().required(\"Room type should be selected\"),\n    })\n  ),\n})\n\ninterface AddPricesProps extends RouteComponentProps, XHRProps {}\nfunction AddPrices({ xhr, navigate }: AddPricesProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Add Prices</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (\n          values: NewPriceCredentials,\n          actions: FormikActions<NewPriceCredentials>\n        ) => {\n          actions.setStatus()\n          return xhr\n            .post(`/hotel-prices`, {\n              prices: values.prices.reduce(\n                (\n                  carry,\n                  {\n                    meal_plan: mealPlan,\n                    room_type: roomType,\n                    hotel,\n                    start_date,\n                    end_date,\n                    ...otherValues\n                  }\n                ) => {\n                  const prices: any = []\n                  prices.push({\n                    ...otherValues,\n                    start_date: moment(start_date)\n                      .hours(0)\n                      .minutes(0)\n                      .seconds(0)\n                      .utc()\n                      .format(\"YYYY-MM-DD HH:mm:ss\"),\n                    end_date: moment(end_date)\n                      .hours(23)\n                      .minutes(59)\n                      .seconds(59)\n                      .utc()\n                      .format(\"YYYY-MM-DD HH:mm:ss\"),\n                    hotel_id: hotel && hotel.id,\n                    meal_plan_id: mealPlan && mealPlan.id,\n                    room_type_id: roomType && roomType.id,\n                  })\n                  return carry.concat(prices)\n                },\n                []\n              ),\n            })\n            .then(() => {\n              navigate && navigate(\"..\")\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({\n          isSubmitting,\n          setFieldValue,\n          values,\n        }: FormikProps<NewPriceCredentials>) => (\n          <Form noValidate>\n            <fieldset style={{ minInlineSize: \"auto\" }}>\n              <legend>Add Hotel Price</legend>\n              <FieldArray\n                name=\"prices\"\n                render={({ name, remove, push }) => (\n                  <ol className=\"list\">\n                    {values.prices.map((price, index) => (\n                      <li key={index}>\n                        <Grid>\n                          <Col>\n                            <DatePicker\n                              label=\"Start Date\"\n                              name={`${name}.${index}.start_date`}\n                            />\n                          </Col>\n                          <Col>\n                            <DatePicker\n                              label=\"End Date\"\n                              name={`${name}.${index}.end_date`}\n                            />\n                          </Col>\n                          <Col>\n                            <FormikFormGroup\n                              name={`${name}.${index}.hotel`}\n                              render={({ field }) => (\n                                <SelectHotels\n                                  {...field}\n                                  multiple={false}\n                                  label=\"Hotel\"\n                                  onChange={(value, name) =>\n                                    setFieldValue(name, value)\n                                  }\n                                />\n                              )}\n                            />\n                          </Col>\n                          <Col>\n                            <FormikFormGroup\n                              name={`prices.${index}.meal_plan`}\n                              render={({ field }) => (\n                                <SelectMealPlans\n                                  label=\"Meal Plan\"\n                                  {...field}\n                                  searchable={false}\n                                  multiple={false}\n                                  options={\n                                    price.hotel && price.hotel.meal_plans\n                                  }\n                                  onChange={(value, name) =>\n                                    setFieldValue(name, value)\n                                  }\n                                />\n                              )}\n                            />\n                          </Col>\n                          <Col>\n                            <FormikFormGroup\n                              name={`prices.${index}.room_type`}\n                              render={({ field }) => (\n                                <SelectRoomTypes\n                                  {...field}\n                                  label=\"Room Type\"\n                                  searchable={false}\n                                  multiple={false}\n                                  options={\n                                    price.hotel && price.hotel.room_types\n                                  }\n                                  onChange={(value: IHotelRoomType, name) => {\n                                    setFieldValue(name, value)\n                                    if (!value || !value.allowed_extra_beds) {\n                                      setFieldValue(\n                                        `prices.${index}.adult_with_extra_bed_price`,\n                                        0\n                                      )\n                                      setFieldValue(\n                                        `prices.${index}.child_with_extra_bed_price`,\n                                        0\n                                      )\n                                    }\n                                  }}\n                                />\n                              )}\n                            />\n                          </Col>\n                        </Grid>\n                        <fieldset>\n                          <legend>Prices</legend>\n                          <Grid>\n                            <Col>\n                              <InputField\n                                label=\"Number of persons\"\n                                name={`${name}.${index}.persons`}\n                                type=\"number\"\n                              />\n                            </Col>\n                            <Col>\n                              <InputField\n                                label=\"Base Price\"\n                                name={`${name}.${index}.base_price`}\n                                type=\"number\"\n                              />\n                            </Col>\n                            <Col>\n                              <InputField\n                                label=\"Adult with extra bed price\"\n                                name={`${name}.${index}.adult_with_extra_bed_price`}\n                                type=\"number\"\n                                title={\n                                  !price.room_type\n                                    ? \"Please select a room type\"\n                                    : !price.room_type.allowed_extra_beds\n                                    ? \"No extra bed allowed\"\n                                    : undefined\n                                }\n                                disabled={\n                                  !price.room_type ||\n                                  !price.room_type.allowed_extra_beds\n                                }\n                              />\n                            </Col>\n                            <Col>\n                              <InputField\n                                label=\"Child with extra bed price\"\n                                name={`${name}.${index}.child_with_extra_bed_price`}\n                                type=\"number\"\n                                title={\n                                  !price.room_type\n                                    ? \"Please select a room type\"\n                                    : !price.room_type.allowed_extra_beds\n                                    ? \"No extra bed allowed\"\n                                    : undefined\n                                }\n                                disabled={\n                                  !price.room_type ||\n                                  !price.room_type.allowed_extra_beds\n                                }\n                              />\n                            </Col>\n                            <Col>\n                              <InputField\n                                label=\"Child without extra bed price\"\n                                name={`${name}.${index}.child_without_extra_bed_price`}\n                                type=\"number\"\n                              />\n                            </Col>\n                          </Grid>\n                        </fieldset>\n                        <hr />\n                        <div className=\"button-group form-group\">\n                          <Button\n                            className=\"btn--secondary\"\n                            onClick={_ => push(price)}\n                          >\n                            + Duplicate\n                          </Button>\n                          {values.prices.length > 1 ? (\n                            <Button\n                              className=\"btn--secondary\"\n                              onClick={_ => remove(index)}\n                            >\n                              &times; Remove\n                            </Button>\n                          ) : null}\n                        </div>\n                      </li>\n                    ))}\n                    <div className=\"form-group\">\n                      <hr />\n                      <Button onClick={_ => push(initialValues.prices[0])}>\n                        + Add More\n                      </Button>\n                    </div>\n                  </ol>\n                )}\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR(AddPrices)\n","import React, { useState, useMemo, useCallback, useRef } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  FieldArray,\n  FieldProps,\n  Field,\n} from \"formik\"\nimport { Button, Icons, Select, useDidMount, Badge } from \"@tourepedia/ui\"\nimport moment from \"moment\"\nimport * as Validator from \"yup\"\nimport { AxiosInstance } from \"axios\"\n\nimport {\n  InputField,\n  FormikFormGroup,\n  FormGroup,\n  OnFormChange,\n} from \"./../Shared/InputField\"\n\nimport { SelectHotels, store as hotelStore } from \"./../Hotels\"\nimport { SelectMealPlans } from \"./../MealPlans\"\nimport { SelectRoomTypes } from \"./../RoomTypes\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport DatePicker from \"../Shared/DatePicker\"\nimport { EmptyNumberValidator, numberToLocalString } from \"../utils\"\nimport Spinner from \"../Shared/Spinner\"\n\ntype IHotel = hotelStore.IHotel\ntype IHotelMealPlan = hotelStore.IHotelMealPlan\ntype IHotelRoomType = hotelStore.IHotelRoomType\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getPrice(hotels: any) {\n      return xhr.get(\"/prices\", { params: { hotels } }).then(resp => resp.data)\n    },\n  }\n}\n\nexport interface CalculatePriceParams {\n  hotels: {\n    start_date: string\n    no_of_nights: number\n    hotel?: IHotel\n    meal_plan?: IHotelMealPlan\n    rooms_detail: {\n      room_type?: IHotelRoomType\n      adults_with_extra_bed: number\n      children_with_extra_bed: number\n      children_without_extra_bed: number\n      no_of_rooms: number\n    }\n    calculated_price?: number\n    given_price?: number\n    edited_given_price?: boolean\n    no_price_for_dates?: Array<string>\n    comments?: string\n    price_calculation_string?: Array<{\n      date: string\n      price: number\n      how: string\n    }>\n  }[]\n}\n\nexport const validationSchema = Validator.object().shape({\n  hotels: Validator.array().of(\n    Validator.object().shape({\n      start_date: Validator.string().required(\"Start Date field is required.\"),\n      no_of_nights: EmptyNumberValidator()\n        .required(\"Number of nights field is required\")\n        .integer(\"Number of nights should be an integer\")\n        .positive(\"Number of nights should be a positive number\"),\n      hotel: Validator.object().required(\"Hotel field is required\"),\n      meal_plan: Validator.object().required(\"Meal Plan field is required\"),\n      rooms_detail: Validator.object().shape({\n        room_type: Validator.object().required(\"Room type field is required\"),\n        adults_with_extra_bed: EmptyNumberValidator()\n          .integer(\"Adult with extra bed should be an interger\")\n          .required(\"Adult with extra bed is required\"),\n        children_with_extra_bed: EmptyNumberValidator()\n          .integer(\"Child with extra bed should be an integer\")\n          .required(\"Child with extra bed is required\"),\n        children_without_extra_bed: EmptyNumberValidator()\n          .integer(\"Child without extra bed should be an integer\")\n          .required(\"Child without extra bed is required\"),\n        no_of_rooms: EmptyNumberValidator()\n          .positive(\"Number of rooms should be a positive number\")\n          .integer(\"Number of room should be an integer\")\n          .required(\"Number of rooms is required\"),\n      }),\n    })\n  ),\n})\n\nexport const INITIAL_VALUES: CalculatePriceParams = {\n  hotels: [\n    {\n      start_date: \"\",\n      no_of_nights: 1,\n      hotel: undefined,\n      meal_plan: undefined,\n      rooms_detail: {\n        room_type: undefined,\n        adults_with_extra_bed: 0,\n        children_with_extra_bed: 0,\n        children_without_extra_bed: 0,\n        no_of_rooms: 1,\n      },\n      calculated_price: undefined,\n      given_price: 0,\n      edited_given_price: false,\n      comments: \"\",\n    },\n  ],\n}\n\ninterface CalculatePriceFormProps extends XHRProps {\n  initialValues?: CalculatePriceParams\n  onChange?: (price: number, hotels: any) => void\n  bookingFrom?: string\n  bookingTo?: string\n  shouldEmptyInitialValues?: boolean\n}\nexport const CalculatePriceForm = withXHR(function CalculatePriceForm({\n  initialValues: initialValuesProp,\n  shouldEmptyInitialValues = false,\n  xhr,\n  onChange,\n  bookingFrom,\n  bookingTo,\n}: CalculatePriceFormProps) {\n  const initialValues =\n    initialValuesProp ||\n    (shouldEmptyInitialValues ? { hotels: [] } : INITIAL_VALUES)\n  const notifyOnChange = useCallback(\n    (flattenValues: CalculatePriceParams) => {\n      onChange &&\n        onChange(\n          flattenValues.hotels.reduce(\n            (price: number, hotel) =>\n              price +\n              parseFloat(\n                (hotel.given_price ? hotel.given_price : 0).toString()\n              ),\n            0\n          ),\n          flattenValues.hotels.map(\n            ({\n              start_date,\n              no_of_nights,\n              rooms_detail,\n              hotel,\n              meal_plan,\n              ...otherData\n            }) => {\n              const room = rooms_detail || { room_type: undefined }\n              const { room_type, ...otherRoomDetails } = room\n              return {\n                ...otherData,\n                checkin: moment(start_date)\n                  .hours(0)\n                  .minutes(0)\n                  .seconds(0)\n                  .utc()\n                  .format(\"YYYY-MM-DD HH:mm:ss\"),\n                checkout: moment(start_date)\n                  .add(no_of_nights - 1, \"days\")\n                  .hours(23)\n                  .minutes(59)\n                  .seconds(59)\n                  .utc()\n                  .format(\"YYYY-MM-DD HH:mm:ss\"),\n                hotel_id: hotel && hotel.id,\n                meal_plan_id: meal_plan && meal_plan.id,\n                ...otherRoomDetails,\n                room_type_id: room_type && room_type.id,\n              }\n            }\n          )\n        )\n    },\n    [onChange]\n  )\n  useDidMount(() => {\n    notifyOnChange(initialValues)\n  })\n  const bookingDates: Array<{ id: number; name: string }> = useMemo(() => {\n    const dates = []\n    const days = moment(bookingTo).diff(moment(bookingFrom), \"days\")\n    for (let i = 0; i <= days; i++) {\n      dates.push({\n        id: i,\n        name: moment(bookingFrom)\n          .add(i, \"day\")\n          .format(\"YYYY-MM-DD\"),\n      })\n    }\n    return dates\n  }, [bookingFrom, bookingTo])\n  const onSubmit = useCallback(\n    async (\n      values: CalculatePriceParams,\n      actions: FormikActions<CalculatePriceParams>\n    ) => {\n      actions.setStatus()\n      const hotels: any[] = []\n      // flatten values so that we can show the prices for each row\n      const flattenValues: CalculatePriceParams = {\n        hotels: [],\n      }\n      values.hotels.forEach(values => {\n        const {\n          start_date,\n          no_of_nights,\n          hotel,\n          meal_plan,\n          rooms_detail,\n        } = values\n        if (hotel && start_date && no_of_nights && meal_plan && rooms_detail) {\n          if (rooms_detail.room_type) {\n            const {\n              room_type,\n              adults_with_extra_bed,\n              children_with_extra_bed,\n              children_without_extra_bed,\n              no_of_rooms,\n            } = rooms_detail\n            flattenValues.hotels.push({\n              ...values,\n              start_date: moment(start_date).format(\"YYYY-MM-DD\"),\n              no_of_nights,\n            })\n            hotels.push({\n              checkin: moment(start_date)\n                .hours(0)\n                .minutes(0)\n                .seconds(0)\n                .utc()\n                .format(\"YYYY-MM-DD HH:mm:ss\"),\n              checkout: moment(start_date)\n                .add(no_of_nights - 1, \"days\")\n                .hours(23)\n                .minutes(59)\n                .seconds(59)\n                .utc()\n                .format(\"YYYY-MM-DD HH:mm:ss\"),\n              hotel_id: hotel.id,\n              meal_plan_id: meal_plan.id,\n              room_type_id: room_type.id,\n              adults_with_extra_bed,\n              children_with_extra_bed,\n              children_without_extra_bed,\n              no_of_rooms,\n            })\n          }\n        }\n      })\n      return XHR(xhr)\n        .getPrice(hotels)\n        .then(data => {\n          flattenValues.hotels = flattenValues.hotels.map((hotel, i) => ({\n            ...hotel,\n            calculated_price: data.hotels[i].price,\n            price_calculation_string: data.hotels[i].price_calculation_string,\n            given_price: hotel.edited_given_price\n              ? hotel.given_price\n              : data.hotels[i].price,\n            no_price_for_dates: data.hotels[i].no_price_for_dates,\n          }))\n          actions.setValues(flattenValues)\n          notifyOnChange(flattenValues)\n        })\n        .catch(error => {\n          actions.setStatus(error.message)\n          if (error.formikErrors) {\n            actions.setErrors(error.formikErrors)\n          }\n        })\n    },\n    [xhr, notifyOnChange]\n  )\n  // this will help us identify if we should fetch the price for onChange or not\n  // we need this because, changing the given price also triggers the fetch prices\n  // and which onResolve, changes the given price back to calculated price\n  const shouldFetchPricesOnChange = useRef(true)\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(value, actions) =>\n        onSubmit(value, actions).then(() => {\n          actions.setSubmitting(false)\n        })\n      }\n      render={({\n        isSubmitting,\n        values,\n        setFieldValue,\n      }: FormikProps<CalculatePriceParams>) => {\n        return (\n          <Form noValidate>\n            <FieldArray\n              name=\"hotels\"\n              render={({ name, push, remove }) => (\n                <div>\n                  {values.hotels.map((hotel, index) => (\n                    <div key={index} className=\"border-gray-300 border-b-4\">\n                      <Grid>\n                        <Col md={7} className=\"py-3\">\n                          <Grid>\n                            <Col md={12}>\n                              <Grid>\n                                <Col>\n                                  {bookingFrom && bookingTo ? (\n                                    <FormikFormGroup\n                                      name={`${name}.${index}.start_date`}\n                                      render={({\n                                        field,\n                                      }: FieldProps<CalculatePriceParams>) => (\n                                        <Select\n                                          {...field}\n                                          label=\"Checkin Date\"\n                                          options={bookingDates}\n                                          searchable={false}\n                                          placeholder=\"Select a date...\"\n                                          required\n                                          onQuery={() => {}}\n                                          value={bookingDates.find(\n                                            d => d.name === hotel.start_date\n                                          )}\n                                          onChange={(startDate, name) => {\n                                            setFieldValue(name, startDate.name)\n                                          }}\n                                        />\n                                      )}\n                                    />\n                                  ) : (\n                                    <DatePicker\n                                      label=\"Checkin Date\"\n                                      name={`${name}.${index}.start_date`}\n                                      required\n                                    />\n                                  )}\n                                </Col>\n                                <Col>\n                                  <InputField\n                                    label=\"Stay Nights\"\n                                    name={`${name}.${index}.no_of_nights`}\n                                    type=\"number\"\n                                    min={1}\n                                    max={1000}\n                                  />\n                                </Col>\n                                <Col>\n                                  <FormikFormGroup\n                                    name={`${name}.${index}.hotel`}\n                                    render={({\n                                      field,\n                                    }: FieldProps<CalculatePriceParams>) => (\n                                      <SelectHotels\n                                        {...field}\n                                        label=\"Hotel\"\n                                        multiple={false}\n                                        onChange={(value, name) =>\n                                          setFieldValue(name, value)\n                                        }\n                                      />\n                                    )}\n                                  />\n                                </Col>\n                                <Col>\n                                  <FormikFormGroup\n                                    name={`${name}.${index}.meal_plan`}\n                                    render={({\n                                      field,\n                                    }: FieldProps<CalculatePriceParams>) => (\n                                      <SelectMealPlans\n                                        {...field}\n                                        label=\"Meal Plan\"\n                                        multiple={false}\n                                        searchable={false}\n                                        options={\n                                          hotel.hotel\n                                            ? hotel.hotel.meal_plans\n                                            : []\n                                        }\n                                        onChange={(value, name) =>\n                                          setFieldValue(name, value)\n                                        }\n                                      />\n                                    )}\n                                  />\n                                </Col>\n                              </Grid>\n                            </Col>\n                            <Col md={12}>\n                              <div>\n                                <Field\n                                  name={`${name}.${index}.rooms_detail`}\n                                  render={({\n                                    field: { name, value: roomDetail },\n                                  }: FieldProps<CalculatePriceParams>) => (\n                                    <Grid key={index}>\n                                      <Col>\n                                        <FormikFormGroup\n                                          name={`${name}.room_type`}\n                                          render={({ field }) => (\n                                            <SelectRoomTypes\n                                              {...field}\n                                              label=\"Room Type\"\n                                              options={\n                                                hotel.hotel\n                                                  ? hotel.hotel.room_types\n                                                  : []\n                                              }\n                                              searchable={false}\n                                              multiple={false}\n                                              onChange={(\n                                                value: IHotelRoomType,\n                                                n\n                                              ) => {\n                                                setFieldValue(n, value)\n                                                if (\n                                                  !value ||\n                                                  !value.allowed_extra_beds\n                                                ) {\n                                                  setFieldValue(\n                                                    `${name}.adults_with_extra_bed`,\n                                                    0\n                                                  )\n                                                  setFieldValue(\n                                                    `${name}.children_with_extra_bed`,\n                                                    0\n                                                  )\n                                                }\n                                              }}\n                                            />\n                                          )}\n                                        />\n                                      </Col>\n                                      <Col>\n                                        <InputField\n                                          name={`${name}.no_of_rooms`}\n                                          label=\"No. of rooms\"\n                                          type=\"number\"\n                                          min={1}\n                                          max={1000}\n                                          onChange={e => {\n                                            const value = parseInt(\n                                              e.currentTarget.value,\n                                              10\n                                            )\n                                            const {\n                                              room_type,\n                                              adults_with_extra_bed,\n                                              children_with_extra_bed,\n                                            } = roomDetail\n                                            if (isNaN(value) || !room_type)\n                                              return\n                                            setFieldValue(\n                                              e.currentTarget.name,\n                                              value\n                                            )\n                                            const {\n                                              allowed_extra_beds,\n                                            } = room_type\n                                            // make sure that only valid extra beds are present\n                                            const validExtraBeds =\n                                              allowed_extra_beds * value\n                                            if (\n                                              adults_with_extra_bed +\n                                                children_with_extra_bed >\n                                              validExtraBeds\n                                            ) {\n                                              // we need to remove the extra beds\n                                              // first give adults with extra beds\n                                              setFieldValue(\n                                                `${name}.adults_with_extra_bed`,\n                                                Math.min(\n                                                  validExtraBeds,\n                                                  adults_with_extra_bed\n                                                )\n                                              )\n                                              // now give remaining extra beds to children\n                                              setFieldValue(\n                                                `${name}.children_with_extra_bed`,\n                                                Math.min(\n                                                  validExtraBeds -\n                                                    Math.min(\n                                                      validExtraBeds,\n                                                      adults_with_extra_bed\n                                                    ),\n                                                  children_with_extra_bed\n                                                )\n                                              )\n                                            }\n                                          }}\n                                        />\n                                      </Col>\n                                      <Col>\n                                        <InputField\n                                          name={`${name}.adults_with_extra_bed`}\n                                          label=\"AWEB\"\n                                          type=\"number\"\n                                          min={0}\n                                          max={100}\n                                          disabled={\n                                            !roomDetail.room_type ||\n                                            !roomDetail.room_type\n                                              .allowed_extra_beds\n                                          }\n                                          onChange={e => {\n                                            const { name } = e.currentTarget\n                                            const value = parseInt(\n                                              e.currentTarget.value,\n                                              10\n                                            )\n                                            const {\n                                              room_type,\n                                              no_of_rooms,\n                                              children_with_extra_bed,\n                                            } = roomDetail\n                                            if (isNaN(value) || !room_type) {\n                                              return\n                                            }\n                                            const {\n                                              allowed_extra_beds,\n                                            } = room_type\n                                            setFieldValue(\n                                              name,\n                                              Math.min(\n                                                allowed_extra_beds *\n                                                  no_of_rooms -\n                                                  children_with_extra_bed,\n                                                value\n                                              )\n                                            )\n                                          }}\n                                        />\n                                      </Col>\n                                      <Col>\n                                        <InputField\n                                          name={`${name}.children_with_extra_bed`}\n                                          label=\"CWEB\"\n                                          type=\"number\"\n                                          min={0}\n                                          max={100}\n                                          disabled={\n                                            !roomDetail.room_type ||\n                                            !roomDetail.room_type\n                                              .allowed_extra_beds\n                                          }\n                                          onChange={e => {\n                                            const { name } = e.currentTarget\n                                            const value = parseInt(\n                                              e.currentTarget.value,\n                                              10\n                                            )\n                                            const {\n                                              room_type,\n                                              no_of_rooms,\n                                              adults_with_extra_bed,\n                                            } = roomDetail\n                                            if (isNaN(value) || !room_type) {\n                                              return\n                                            }\n                                            const {\n                                              allowed_extra_beds,\n                                            } = room_type\n                                            setFieldValue(\n                                              name,\n                                              Math.min(\n                                                allowed_extra_beds *\n                                                  no_of_rooms -\n                                                  adults_with_extra_bed,\n                                                value\n                                              )\n                                            )\n                                          }}\n                                        />\n                                      </Col>\n                                      <Col>\n                                        <InputField\n                                          name={`${name}.children_without_extra_bed`}\n                                          label=\"CWoEB\"\n                                          min={0}\n                                          max={100}\n                                          type=\"number\"\n                                        />\n                                      </Col>\n                                    </Grid>\n                                  )}\n                                />\n                              </div>\n                            </Col>\n                          </Grid>\n                        </Col>\n                        <Col md={4} className=\"md:border-l py-3\">\n                          <Grid>\n                            <Col>\n                              <FormGroup>\n                                <div className=\"mb-1 white-space-pre\">\n                                  Calculated Price\n                                </div>\n                                {isSubmitting ? (\n                                  <Spinner />\n                                ) : hotel.calculated_price !== undefined ? (\n                                  <Badge primary>\n                                    <Icons.RupeeIcon /> {hotel.calculated_price}\n                                  </Badge>\n                                ) : (\n                                  <Button type=\"submit\" disabled={isSubmitting}>\n                                    Get Price\n                                  </Button>\n                                )}\n                                {hotel.no_price_for_dates &&\n                                hotel.no_price_for_dates.length ? (\n                                  <p className=\"text-yellow-800\">\n                                    No prices available for{\" \"}\n                                    {hotel.no_price_for_dates\n                                      .map(date =>\n                                        moment\n                                          .utc(date)\n                                          .local()\n                                          .format(\"Do MMM\")\n                                      )\n                                      .join(\", \")}\n                                  </p>\n                                ) : null}\n                              </FormGroup>\n                            </Col>\n                            <Col>\n                              <InputField\n                                label=\"Given Price\"\n                                name={`${name}.${index}.given_price`}\n                                type=\"number\"\n                                value={hotel.given_price}\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  let value: number | undefined = parseInt(\n                                    e.target.value,\n                                    10\n                                  )\n                                  if (isNaN(value)) {\n                                    value = undefined\n                                  }\n                                  shouldFetchPricesOnChange.current = false\n                                  setFieldValue(\n                                    `${name}.${index}.edited_given_price`,\n                                    true\n                                  )\n                                  setFieldValue(e.target.name, value)\n                                }}\n                                min={0}\n                              />\n                            </Col>\n                            {hotel.price_calculation_string &&\n                            hotel.price_calculation_string.length ? (\n                              <Col sm={12} className=\"mb-2\">\n                                {hotel.price_calculation_string.map(\n                                  ({ date, price, how }, i) => (\n                                    <div key={i}>\n                                      <Badge>\n                                        <Icons.RupeeIcon /> {price}\n                                      </Badge>\n                                      <b>\n                                        {moment\n                                          .utc(date)\n                                          .local()\n                                          .format(\" DD/MM/YYYY \")}\n                                      </b>\n                                      ({how})\n                                    </div>\n                                  )\n                                )}\n                              </Col>\n                            ) : null}\n                            <Col sm={12}>\n                              <InputField\n                                label=\"Comments\"\n                                name={`${name}.${index}.comments`}\n                                maxLength={191}\n                                value={hotel.comments}\n                                placeholder=\"Regarding pricing difference or any other\"\n                                className=\"w-full\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  const value = e.target.value\n                                  shouldFetchPricesOnChange.current = false\n                                  setFieldValue(e.target.name, value)\n                                }}\n                              />\n                            </Col>\n                          </Grid>\n                        </Col>\n                        <Col md={1} className=\"text-right md:border-l py-3\">\n                          <Button\n                            className=\"btn--secondary w-full\"\n                            onClick={() => push(hotel)}\n                          >\n                            + Duplicate\n                          </Button>\n                          <br />\n                          <Button\n                            className=\"btn--secondary w-full\"\n                            onClick={() => remove(index)}\n                          >\n                            &times; Remove\n                          </Button>\n                        </Col>\n                      </Grid>\n                    </div>\n                  ))}\n                  <div className=\"pt-4\">\n                    <Button onClick={() => push(INITIAL_VALUES.hotels[0])}>\n                      + Add {values.hotels.length ? \"Another\" : \"\"} Hotel Query\n                    </Button>\n                  </div>\n                </div>\n              )}\n            />\n            <OnFormChange\n              onChange={(formik: FormikProps<CalculatePriceParams>) => {\n                notifyOnChange(formik.values)\n                if (!shouldFetchPricesOnChange.current) {\n                  shouldFetchPricesOnChange.current = true\n                  return\n                }\n                if (formik.isSubmitting) return\n                validationSchema\n                  .validate(formik.values)\n                  .then(async () => {\n                    if (formik.isSubmitting) return\n                    formik.setSubmitting(true)\n                    return onSubmit(formik.values, formik).then(() => {\n                      formik.setSubmitting(false)\n                    })\n                  })\n                  .catch(() => {})\n              }}\n            />\n          </Form>\n        )\n      }}\n    />\n  )\n})\n\nexport default function CalculatePrice(props: RouteComponentProps) {\n  const [price, setPrice] = useState<number>(0)\n  return (\n    <div>\n      <div className=\"flex align-items-center mb-8\">\n        <Link\n          to=\"..\"\n          className=\"mr-4 text-blue-600 hover:text-blue-800 text-lg px-2 border rounded-full\"\n        >\n          <Icons.ChevronDownIcon className=\"rotate-90\" />\n        </Link>\n        <h3 className=\"m-0\">Calculate Hotel Prices</h3>\n      </div>\n      <p>\n        Please enter the desired hotel configuration query and press get price\n        to get the prices.\n      </p>\n      <div className=\"bg-white px-4 pb-4 rounded shadow\">\n        <CalculatePriceForm onChange={price => setPrice(price)} />\n      </div>\n      <footer className=\"mt-4\">\n        <mark className=\"inilne-block text-xl font-bold rounded px-4 py-2\">\n          Total Price: {numberToLocalString(price)}\n        </mark>\n      </footer>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport UploadPrices from \"./UploadPrices\"\nimport NewItem from \"./NewItem\"\nimport CalculatePrice from \"./CalculatePrice\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\nexport default function HotelPricesModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Grid>\n        <Col>\n          <h2 className=\"white-space-pre\">Hotel Prices</h2>\n        </Col>\n        <Col className=\"text-right d-flex align-items-center justify-content-end\">\n          <div className=\"button-group\">\n            <Link to=\"upload-prices\" className=\"btn\">\n              Upload Prices\n            </Link>\n            <Link to=\"new\" className=\"btn\">\n              Add Prices\n            </Link>\n            <Link to=\"calculate-price\" className=\"btn\">\n              Calculate Price\n            </Link>\n          </div>\n        </Col>\n      </Grid>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <UploadPrices path=\"/upload-prices\" />\n        <CalculatePrice path=\"/calculate-price\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React from \"react\"\nimport { AsyncSelect } from \"@tourepedia/ui\"\nimport { withXHR, XHRProps } from \"./../xhr\"\n\ntype AsyncProps = React.ComponentProps<typeof AsyncSelect>\n\nexport const SelectHotelExtraServices = withXHR(\n  function SelectHotelExtraServices({\n    xhr,\n    ...otherProps\n  }: XHRProps & Omit<AsyncProps, \"fetch\">) {\n    return (\n      <AsyncSelect\n        {...otherProps}\n        fetch={q =>\n          xhr\n            .get(\"/hotel-extra-services\", { params: { q } })\n            .then(resp => resp.data.data)\n        }\n      />\n    )\n  }\n)\n\nexport const SelectTransportExtraServices = withXHR(\n  function SelectTransportExtraServices({\n    xhr,\n    ...otherProps\n  }: XHRProps & Omit<AsyncProps, \"fetch\">) {\n    return (\n      <AsyncSelect\n        {...otherProps}\n        fetch={q =>\n          xhr\n            .get(\"/transport-extra-services\", { params: { q } })\n            .then(resp => resp.data.data)\n        }\n      />\n    )\n  }\n)\n\nexport const SelectOtherExtraServices = withXHR(\n  function SelectOtherExtraServices({\n    xhr,\n    ...otherProps\n  }: XHRProps & Omit<AsyncProps, \"fetch\">) {\n    return (\n      <AsyncSelect\n        {...otherProps}\n        fetch={q =>\n          xhr\n            .get(\"/other-extra-services\", { params: { q } })\n            .then(resp => resp.data.data)\n        }\n      />\n    )\n  }\n)\n","import React, { useState, useMemo, useCallback, useRef } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  FieldArray,\n  FieldProps,\n} from \"formik\"\nimport { Button, Icons, Select, useDidMount, ButtonGroup } from \"@tourepedia/ui\"\nimport moment from \"moment\"\nimport * as Validator from \"yup\"\nimport { AxiosInstance } from \"axios\"\n\nimport {\n  InputField,\n  FormikFormGroup,\n  OnFormChange,\n} from \"./../Shared/InputField\"\n\nimport { SelectHotels, store as hotelStore } from \"./../Hotels\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport DatePicker from \"../Shared/DatePicker\"\nimport { EmptyNumberValidator } from \"../utils\"\nimport {\n  SelectHotelExtraServices,\n  store as extraServiceStore,\n} from \"./../ExtraServices\"\n\ntype IHotel = hotelStore.IHotel\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getPrice(hotel_extras: any) {\n      return Promise.resolve({ hotel_extras })\n      // return xhr\n      //   .get(\"/prices\", { params: { hotel_extras } })\n      //   .then(resp => resp.data)\n    },\n  }\n}\n\nexport interface ExtraServicesParams {\n  hotel_extras: {\n    service?: extraServiceStore.IExtraService\n    price?: number\n    date?: string\n    hotel?: IHotel\n    comments?: string\n  }[]\n}\n\nexport const validationSchema = Validator.object().shape({\n  hotel_extras: Validator.array().of(\n    Validator.object().shape({\n      service: Validator.object()\n        .typeError(\"Service field is required\")\n        .required(\"Service field is required\"),\n      date: Validator.string(),\n      hotel: Validator.object(),\n      price: EmptyNumberValidator().positive(\"Price should be positive\"),\n      comments: Validator.string(),\n    })\n  ),\n})\n\nexport const INITIAL_VALUES: ExtraServicesParams = {\n  hotel_extras: [\n    {\n      service: undefined,\n      date: \"\",\n      hotel: undefined,\n      price: undefined,\n      comments: \"\",\n    },\n  ],\n}\n\ninterface ExtraServicesFormProps extends XHRProps {\n  initialValues?: ExtraServicesParams\n  onChange?: (price: number, hotels: any) => void\n  bookingFrom?: string\n  bookingTo?: string\n  shouldEmptyInitialValues?: boolean\n}\nexport const ExtraServicesForm = withXHR(function ExtraServicesForm({\n  initialValues: initialValuesProp,\n  shouldEmptyInitialValues = true,\n  xhr,\n  onChange,\n  bookingFrom,\n  bookingTo,\n}: ExtraServicesFormProps) {\n  const initialValues =\n    initialValuesProp ||\n    (shouldEmptyInitialValues ? { hotel_extras: [] } : INITIAL_VALUES)\n  const notifyOnChange = useCallback(\n    (flattenValues: ExtraServicesParams) => {\n      onChange &&\n        onChange(\n          flattenValues.hotel_extras.reduce(\n            (price: number, hotel) =>\n              price + parseFloat((hotel.price ? hotel.price : 0).toString()),\n            0\n          ),\n          flattenValues.hotel_extras.map(\n            ({ service, date, hotel, price, ...otherData }) => {\n              return {\n                ...otherData,\n                service: service ? service.name : undefined,\n                date: date\n                  ? moment(date)\n                      .hours(0)\n                      .minutes(0)\n                      .seconds(0)\n                      .utc()\n                      .format(\"YYYY-MM-DD HH:mm:ss\")\n                  : \"\",\n                hotel_id: hotel && hotel.id,\n                price: price,\n              }\n            }\n          )\n        )\n    },\n    [onChange]\n  )\n  useDidMount(() => {\n    notifyOnChange(initialValues)\n  })\n  const bookingDates: Array<{ id: number; name: string }> = useMemo(() => {\n    const dates = []\n    const days = moment(bookingTo).diff(moment(bookingFrom), \"days\")\n    for (let i = 0; i <= days; i++) {\n      dates.push({\n        id: i,\n        name: moment(bookingFrom)\n          .add(i, \"day\")\n          .format(\"YYYY-MM-DD\"),\n      })\n    }\n    return dates\n  }, [bookingFrom, bookingTo])\n  const onSubmit = useCallback(\n    async (\n      values: ExtraServicesParams,\n      actions: FormikActions<ExtraServicesParams>\n    ) => {\n      actions.setStatus()\n      const hotel_extras: any[] = []\n      // flatten values so that we can show the prices for each row\n      const flattenValues: ExtraServicesParams = {\n        hotel_extras: [],\n      }\n      values.hotel_extras.forEach(values => {\n        const { date, service, hotel, ...otherData } = values\n        if (service) {\n          flattenValues.hotel_extras.push({\n            ...values,\n            date: date ? moment(date).format(\"YYYY-MM-DD\") : \"\",\n          })\n          hotel_extras.push({\n            ...otherData,\n            date: date\n              ? moment(date)\n                  .hours(0)\n                  .minutes(0)\n                  .seconds(0)\n                  .utc()\n                  .format(\"YYYY-MM-DD HH:mm:ss\")\n              : \"\",\n            hotel_id: hotel && hotel.id,\n            service: service && service.name,\n          })\n        }\n      })\n      return XHR(xhr)\n        .getPrice(hotel_extras)\n        .then(data => {\n          flattenValues.hotel_extras = flattenValues.hotel_extras.map(\n            (hotel, i) => ({\n              ...hotel,\n              price: data.hotel_extras[i].price,\n            })\n          )\n          actions.setValues(flattenValues)\n          notifyOnChange(flattenValues)\n        })\n        .catch(error => {\n          actions.setStatus(error.message)\n          if (error.formikErrors) {\n            actions.setErrors(error.formikErrors)\n          }\n        })\n    },\n    [xhr, notifyOnChange]\n  )\n  // this will help us identify if we should fetch the price for onChange or not\n  // we need this because, changing the given price also triggers the fetch prices\n  // and which onResolve, changes the given price back to calculated price\n  const shouldFetchPricesOnChange = useRef(true)\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(value, actions) =>\n        onSubmit(value, actions).then(() => {\n          actions.setSubmitting(false)\n        })\n      }\n      render={({ values, setFieldValue }: FormikProps<ExtraServicesParams>) => {\n        return (\n          <Form noValidate>\n            <FieldArray\n              name=\"hotel_extras\"\n              render={({ name, push, remove }) => (\n                <div>\n                  {values.hotel_extras.map((hotel_extra, index) => (\n                    <div key={index} className=\"border-gray-300 border-b-4\">\n                      <Grid>\n                        <Col>\n                          <FormikFormGroup\n                            name={`${name}.${index}.service`}\n                            render={({\n                              field,\n                            }: FieldProps<ExtraServicesParams>) => (\n                              <SelectHotelExtraServices\n                                {...field}\n                                label=\"Service\"\n                                placeholder=\"Select or add a service...\"\n                                required\n                                creatable\n                                fetchOnMount\n                                onChange={(value, name) => {\n                                  setFieldValue(name, value)\n                                }}\n                              />\n                            )}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Price\"\n                            name={`${name}.${index}.price`}\n                            type=\"number\"\n                            placeholder=\"3000\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          {bookingFrom && bookingTo ? (\n                            <FormikFormGroup\n                              name={`${name}.${index}.date`}\n                              render={({\n                                field,\n                              }: FieldProps<ExtraServicesParams>) => (\n                                <Select\n                                  {...field}\n                                  label=\"Date\"\n                                  options={bookingDates}\n                                  searchable={false}\n                                  placeholder=\"Select a date...\"\n                                  required\n                                  value={bookingDates.find(\n                                    d => d.name === hotel_extra.date\n                                  )}\n                                  onChange={(startDate, name) => {\n                                    setFieldValue(name, startDate.name)\n                                  }}\n                                />\n                              )}\n                            />\n                          ) : (\n                            <DatePicker\n                              label=\"Date\"\n                              name={`${name}.${index}.date`}\n                              required\n                            />\n                          )}\n                        </Col>\n                        <Col>\n                          <FormikFormGroup\n                            name={`${name}.${index}.hotel`}\n                            render={({\n                              field,\n                            }: FieldProps<ExtraServicesParams>) => (\n                              <SelectHotels\n                                {...field}\n                                label=\"Hotel\"\n                                multiple={false}\n                                onChange={(value, name) =>\n                                  setFieldValue(name, value)\n                                }\n                              />\n                            )}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            name={`${name}.${index}.comments`}\n                            label=\"Comments\"\n                            placeholder=\"Any comments regarding service\"\n                          />\n                        </Col>\n                        <Col className=\"pt-4 border-l text-right\">\n                          <ButtonGroup>\n                            <Button\n                              className=\"btn--secondary\"\n                              onClick={() => push(hotel_extra)}\n                            >\n                              + Duplicate\n                            </Button>\n                            <Button\n                              className=\"btn--secondary\"\n                              onClick={() => remove(index)}\n                            >\n                              &times; Remove\n                            </Button>\n                          </ButtonGroup>\n                        </Col>\n                      </Grid>\n                    </div>\n                  ))}\n                  <div className=\"mt-4\">\n                    <Button\n                      onClick={() => push(INITIAL_VALUES.hotel_extras[0])}\n                    >\n                      + Add {values.hotel_extras.length ? \"Another\" : \"\"} Hotel\n                      Extra Service\n                    </Button>\n                  </div>\n                </div>\n              )}\n            />\n            <OnFormChange\n              onChange={(formik: FormikProps<ExtraServicesParams>) => {\n                notifyOnChange(formik.values)\n                if (!shouldFetchPricesOnChange.current) {\n                  shouldFetchPricesOnChange.current = true\n                  return\n                }\n                if (formik.isSubmitting) return\n                validationSchema\n                  .validate(formik.values)\n                  .then(async () => {\n                    if (formik.isSubmitting) return\n                    formik.setSubmitting(true)\n                    return onSubmit(formik.values, formik).then(() => {\n                      formik.setSubmitting(false)\n                    })\n                  })\n                  .catch(() => {})\n              }}\n            />\n            <button type=\"submit\" className=\"invisible\">\n              Get Price\n            </button>\n          </Form>\n        )\n      }}\n    />\n  )\n})\n\nexport default function ExtraServices(props: RouteComponentProps) {\n  const [price, setPrice] = useState<number>(0)\n  return (\n    <div>\n      <div className=\"flex align-items-center mb-8\">\n        <Link\n          to=\"..\"\n          className=\"mr-4 text-blue-600 hover:text-blue-800 text-lg px-2 border rounded-full\"\n        >\n          <Icons.ChevronDownIcon className=\"rotate-90\" />\n        </Link>\n        <h3 className=\"m-0\">Calculate Hotel Extra Service Prices</h3>\n      </div>\n      <p>\n        Add any extra services for hotels e.g. special dinner, honeymoon cake\n        etc.\n      </p>\n      <ExtraServicesForm onChange={price => setPrice(price)} />\n      <footer className=\"mt-8 pb-8\">\n        <h4>\n          <mark>Total Cost Price: {price}</mark>\n        </h4>\n      </footer>\n    </div>\n  )\n}\n","import React, { useEffect, useCallback } from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\nimport { useSelector } from \"react-redux\"\nimport { AxiosInstance } from \"axios\"\n\nimport { IHotel, IStateWithKey, selectors, actions } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { Dialog, useDialog } from \"@tourepedia/dialog\"\nimport { Button } from \"@tourepedia/ui\"\nimport { AddContactForm } from \"../Contacts\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { useThunkDispatch } from \"../utils\"\nimport Spinner from \"../Shared/Spinner\"\nimport { HotelPricesList } from \"../HotelPrices\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getHotel(id: string): Promise<IHotel> {\n      return xhr.get(`/hotels/${id}`).then(resp => resp.data.data)\n    },\n    async createContact(\n      id: string | number,\n      contactData: any\n    ): Promise<IHotel> {\n      return xhr\n        .post(`/hotel-contacts`, {\n          hotel_id: id,\n          ...contactData,\n        })\n        .then(resp => resp.data.data)\n    },\n  }\n}\n\nexport const getHotelAction = (\n  id: string\n): ThunkAction<Promise<IHotel>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.item.request())\n  return XHR(xhr)\n    .getHotel(id)\n    .then(hotel => {\n      dispatch(actions.item.success(hotel))\n      return hotel\n    })\n    .catch(error => {\n      dispatch(actions.item.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useHotelState(hotelId?: number | string) {\n  interface StateProps {\n    isFetching: boolean\n    hotel?: IHotel\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const hotelSelector = selectors(state)\n    return {\n      isFetching: hotelSelector.isFetching,\n      hotel: hotelSelector.getItem(hotelId),\n    }\n  })\n}\n\nfunction useHotelFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((hotelId: string) => dispatch(getHotelAction(hotelId)), [\n    dispatch,\n  ])\n}\n\nexport function useHotel(hotelId?: string, shouldFetch: boolean = false) {\n  const state = useHotelState(hotelId)\n  const fetchHotel = useHotelFetch()\n  useEffect(() => {\n    if (shouldFetch) {\n      hotelId && fetchHotel(hotelId)\n    }\n  }, [fetchHotel, hotelId, shouldFetch])\n  return {\n    ...state,\n    fetchHotel,\n  }\n}\n\nexport function Item({\n  hotelId,\n  navigate,\n  xhr,\n}: XHRProps & RouteComponentProps<{ hotelId: string }>) {\n  const [isVisibleAddContact, showAddContact, hideAddContact] = useDialog()\n  const { hotel, isFetching, fetchHotel: getHotel } = useHotel(hotelId, true)\n  if (!hotelId) {\n    navigate && navigate(\"/hotels\")\n    return null\n  }\n  if (isFetching)\n    return (\n      <div className=\"text-center\">\n        <Spinner />\n      </div>\n    )\n  if (!hotel) return null\n  const {\n    name,\n    stars,\n    extra_bed_child_age_start,\n    extra_bed_child_age_end,\n    meal_plans,\n    room_types,\n    location,\n    contacts,\n    payment_preference,\n  } = hotel\n  return (\n    <div>\n      <Link to=\"..\">Back</Link>\n      <Grid>\n        <Col>\n          <h3>\n            {name} • {location.short_name} • {stars} Star\n          </h3>\n          <dl>\n            <dt>Meal Plans:</dt>\n            <dd>{meal_plans.map(mealPlan => mealPlan.name).join(\" • \")}</dd>\n            <dt>Room Types:</dt>\n            <dd>\n              {room_types\n                .map(\n                  roomType =>\n                    `${roomType.name}(${roomType.allowed_extra_beds} AEBs)`\n                )\n                .join(\" • \")}\n            </dd>\n            <dt>Payment Preference</dt>\n            <dd>{payment_preference ? payment_preference.name : \"NOT SET\"}</dd>\n            <dt>Extra bed child ages:</dt>\n            <dd>\n              From {extra_bed_child_age_start} to {extra_bed_child_age_end}{\" \"}\n              years\n            </dd>\n          </dl>\n        </Col>\n        <Col sm={\"auto\"} xs={12}>\n          <fieldset>\n            <legend>Contacts</legend>\n            <ul>\n              {(contacts || []).map(contact => (\n                <li key={contact.id}>\n                  {contact.name} {contact.phone_number}&lt;{contact.email}\n                  &gt;\n                </li>\n              ))}\n            </ul>\n            <Dialog\n              open={isVisibleAddContact}\n              onClose={hideAddContact}\n              closeButton\n            >\n              <Dialog.Header>\n                <Dialog.Title>Add Contact</Dialog.Title>\n              </Dialog.Header>\n              <Dialog.Body>\n                <AddContactForm\n                  onCancel={hideAddContact}\n                  onCreate={async ({ name, email, phone_number, country }) => {\n                    return XHR(xhr)\n                      .createContact(hotelId, {\n                        name,\n                        email,\n                        phone_number,\n                        country_id: country ? country.id : undefined,\n                      })\n                      .then(hotel => {\n                        getHotel(hotelId)\n                        return hotel\n                      })\n                  }}\n                />\n              </Dialog.Body>\n            </Dialog>\n            <Button onClick={showAddContact} data-testid=\"add_contact\">\n              Add Contact\n            </Button>\n          </fieldset>\n        </Col>\n      </Grid>\n      <div className=\"mt-4\">\n        <Link\n          to={`/hotel-prices/new?id=${hotel.id}`}\n          className=\"btn float-right\"\n        >\n          Add Prices\n        </Link>\n        <h3>Prices</h3>\n        <Router>\n          <HotelPricesList hotelId={hotel.id} path=\"/\" />\n        </Router>\n      </div>\n    </div>\n  )\n}\n\nexport default withXHR(Item)\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IMeta,\n  IModelState,\n  createReducer,\n} from \"./../model\"\n\nexport const key = \"LOCATIONS_STATE\"\n\nexport interface ICountry {\n  id: number\n  name: string\n  short_name: string\n  dial_code: string\n  flag: string\n}\n\nexport interface ICountryState {\n  id: number\n  name: string\n  country_id: number\n}\n\nexport interface ICity {\n  id: number\n  name: string\n  state_id: number\n}\n\nexport interface ILocation extends IBaseItem {\n  id: number\n  name: string\n  short_name: string\n  city_id: number\n  state_id: number\n  country_id: number\n  city?: ICity\n  state?: ICountryState\n  country?: ICountry\n  latitude: string\n  longitude: string\n}\n\nexport interface ILocations extends IBaseState<ILocation> {}\n\nexport interface IState extends IModelState<ILocation> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ILocation>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@LOCATIONS/LIST_FETCH_REQUEST\",\n    \"@LOCATIONS/LIST_FETCH_SUCCESS\",\n    \"@LOCATIONS/LIST_FETCH_FAILED\"\n  )<undefined, { data: ILocation[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport {\n  ILocation,\n  ICountry,\n  ICountryState,\n  ICity,\n  actions,\n  IStateWithKey,\n  selectors,\n} from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getLocations(\n      params?: any\n    ): Promise<{ data: ILocation[]; meta: any }> {\n      return xhr.get(\"/locations\", { params }).then(resp => resp.data)\n    },\n    async getCountries(params?: any): Promise<ICountry[]> {\n      return xhr\n        .get(\"/locations/countries\", { params })\n        .then(({ data }) => data.data)\n    },\n    async getStates(params?: any): Promise<ICountryState[]> {\n      return xhr\n        .get(\"/locations/states\", { params })\n        .then(({ data }) => data.data)\n    },\n    async getCities(params?: any): Promise<ICity[]> {\n      return xhr\n        .get(\"/locations/cities\", { params })\n        .then(({ data }) => data.data)\n    },\n  }\n}\n\nexport const getLocationsAction = (\n  params?: any\n): ThunkAction<Promise<ILocation[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getLocations(params)\n    .then(data => {\n      dispatch(actions.list.success(data))\n      return data.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useLocationsState() {\n  interface StateProps extends IPaginate {\n    locations: ILocation[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const locationsSelector = selectors(state)\n    return {\n      ...locationsSelector.meta,\n      isFetching: locationsSelector.isFetching,\n      locations: locationsSelector.get(),\n    }\n  })\n}\n\nfunction useLocationsFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getLocationsAction(params)), [\n    dispatch,\n  ])\n}\n\nfunction useLocations() {\n  return {\n    ...useLocationsState(),\n    fetchLocations: useLocationsFetch(),\n  }\n}\n\nexport default function List(_: RouteComponentProps) {\n  const {\n    locations,\n    total,\n    from,\n    to,\n    isFetching,\n    currentPage,\n    lastPage,\n    fetchLocations: getLocations,\n  } = useLocations()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getLocations({ page: currentPage })\n  }, [getLocations])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Locations</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getLocations({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getLocations({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          striped\n          bordered\n          headers={[\"Name\", \"Latitude\", \"Longitude\"]}\n          responsive\n          rows={locations.map(location => [\n            location.name,\n            location.latitude,\n            location.longitude,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectLocations = withXHR<SelectProps>(function SelectLocations({\n  xhr,\n  ...otherProps\n}: SelectProps) {\n  return (\n    <Async\n      multiple\n      {...otherProps}\n      fetch={q =>\n        XHR(xhr)\n          .getLocations({ q })\n          .then(resp => resp.data)\n      }\n    />\n  )\n})\n\nexport const SelectCountries = withXHR<SelectProps>(function SelectCountries({\n  xhr,\n  ...otherProps\n}: SelectProps) {\n  return (\n    <Async multiple {...otherProps} fetch={q => XHR(xhr).getCountries({ q })} />\n  )\n})\n\nexport const SelectStates = withXHR<SelectProps>(function SelectStates({\n  xhr,\n  ...otherProps\n}: SelectProps) {\n  return (\n    <Async multiple {...otherProps} fetch={q => XHR(xhr).getStates({ q })} />\n  )\n})\n\nexport const SelectCities = withXHR<SelectProps>(function SelectCities({\n  xhr,\n  ...otherProps\n}: SelectProps) {\n  return (\n    <Async multiple {...otherProps} fetch={q => XHR(xhr).getCities({ q })} />\n  )\n})\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport {\n  Formik,\n  Form,\n  FormikProps,\n  FormikActions,\n  Field,\n  FieldProps,\n} from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField, FormikFormGroup } from \"./../Shared/InputField\"\nimport { SelectCountries, SelectStates, SelectCities } from \"./List\"\nimport { ICountry, ICountryState, ICity } from \"./store\"\n\nconst validationSchema = Validator.object().shape({\n  country: Validator.object().required(\"Country field is required\"),\n  latitue: Validator.string(),\n  longitude: Validator.string(),\n})\n\ninterface NewItemCredentials {\n  country?: ICountry\n  state?: ICountryState\n  city?: ICity\n  latitude?: string\n  longitude?: string\n}\nconst initialValues: NewItemCredentials = {\n  city: undefined,\n  state: undefined,\n  country: undefined,\n  latitude: \"\",\n  longitude: \"\",\n}\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\n\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Location</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          const { country, state, city, latitude, longitude } = values\n          xhr\n            .post(\"/locations\", {\n              country: country ? country.id : undefined,\n              state: state ? state.name : undefined,\n              city: city ? city.name : undefined,\n              latitude,\n              longitude,\n            })\n            .then(() => {\n              navigate && navigate(`..`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setSubmitting(false)\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n        }}\n        render={({\n          isSubmitting,\n          status,\n          values,\n          setFieldValue,\n        }: FormikProps<NewItemCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add New Location</legend>\n              <FormikFormGroup\n                name=\"country\"\n                render={({ field }: FieldProps<NewItemCredentials>) => (\n                  <SelectCountries\n                    {...field}\n                    multiple={false}\n                    label=\"Country\"\n                    placeholder=\"Type to search.. (e.g. India)\"\n                    onChange={(value, name) => {\n                      setFieldValue(name, value)\n                    }}\n                  />\n                )}\n              />\n              <FormikFormGroup\n                name=\"state\"\n                render={({ field }: FieldProps<NewItemCredentials>) => (\n                  <SelectStates\n                    {...field}\n                    multiple={false}\n                    label=\"State\"\n                    onChange={(value, name) => setFieldValue(name, value)}\n                    placeholder=\"Type to search.. (e.g. Rajasthan)\"\n                    creatable\n                  />\n                )}\n              />\n              <FormikFormGroup\n                name=\"city\"\n                render={({ field }: FieldProps<NewItemCredentials>) => (\n                  <SelectCities\n                    {...field}\n                    multiple={false}\n                    label=\"City\"\n                    onChange={(value, name) => setFieldValue(name, value)}\n                    placeholder=\"Type to search.. (e.g. Jaipur)\"\n                    creatable\n                  />\n                )}\n              />\n              <InputField\n                name=\"latitude\"\n                label=\"Latitude\"\n                placeholder=\"27° 2' 9.6252'' N\"\n              />\n              <InputField\n                name=\"longitude\"\n                label=\"Longitude\"\n                placeholder=\"88° 15' 45.6192'' E\"\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\n\nexport default function LocationsModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"float-right btn\">\n        New Location\n      </Link>\n      <h2>Locations</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import { createAsyncAction, getType, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IModelState,\n  IMeta,\n  createReducer,\n} from \"./../model\"\n\nexport const key = \"HOTEL_PAYMENT_PREFERENCES_STATE\"\n\nexport interface IHotelPaymentPreferenceBreakdown {\n  id: number\n  reference_name: string\n  day_offset: number\n  amount_share: number\n  name: string\n}\n\nexport interface IHotelPaymentPreference extends IBaseItem {\n  id: number\n  name: string\n  breakdowns: IHotelPaymentPreferenceBreakdown[]\n}\n\nexport interface IHotelPaymentPreferences\n  extends IBaseState<IHotelPaymentPreference> {}\n\nexport interface IState extends IModelState<IHotelPaymentPreference> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<IHotelPaymentPreference>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@HOTEL_PAYMENT_PREFERENCES/LIST_FETCH_REQUEST\",\n    \"@HOTEL_PAYMENT_PREFERENCES/LIST_FETCH_SUCCESS\",\n    \"@HOTEL_PAYMENT_PREFERENCES/LIST_FETCH_FAILED\"\n  )<undefined, { data: IHotelPaymentPreference[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { useSelector } from \"react-redux\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport {\n  IHotelPaymentPreference,\n  actions,\n  IStateWithKey,\n  selectors,\n} from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"./../model\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getHotelPaymentPreferences(\n      params?: any\n    ): Promise<{ data: IHotelPaymentPreference[]; meta: any }> {\n      return xhr\n        .get(\"/hotel-payment-preferences\", { params })\n        .then(resp => resp.data)\n    },\n    async getHotelPaymentReferences(\n      params?: any\n    ): Promise<{ data: { id: number; name: string }[]; meta: any }> {\n      return xhr\n        .get(\"/hotel-payment-preferences/references\", { params })\n        .then(resp => resp.data)\n    },\n  }\n}\n\nexport const getHotelPaymentPreferencesAction = (\n  params?: any\n): ThunkAction<Promise<IHotelPaymentPreference[]>> => async (\n  dispatch,\n  _,\n  { xhr }\n) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getHotelPaymentPreferences(params)\n    .then(hotelPaymentPreferences => {\n      dispatch(actions.list.success(hotelPaymentPreferences))\n      return hotelPaymentPreferences.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useHotelPaymentPreferencesState() {\n  interface StateProps extends IPaginate {\n    hotelPaymentPreferences: IHotelPaymentPreference[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const hotelPaymentPreferencesSelector = selectors(state)\n    return {\n      ...hotelPaymentPreferencesSelector.meta,\n      isFetching: hotelPaymentPreferencesSelector.isFetching,\n      hotelPaymentPreferences: hotelPaymentPreferencesSelector.get(),\n    }\n  })\n}\n\nfunction useHotelPaymentPreferencesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback(\n    (params?: any) => dispatch(getHotelPaymentPreferencesAction(params)),\n    [dispatch]\n  )\n}\n\nfunction useHotelPaymentPreferences() {\n  return {\n    ...useHotelPaymentPreferencesState(),\n    fetchHotelPaymentPreferences: useHotelPaymentPreferencesFetch(),\n  }\n}\n\nexport default function List(_: RouteComponentProps) {\n  const [params, setParams] = useSearch()\n  const {\n    hotelPaymentPreferences,\n    fetchHotelPaymentPreferences: getHotelPaymentPreferences,\n    total,\n    from,\n    to,\n    isFetching,\n    currentPage,\n    lastPage,\n  } = useHotelPaymentPreferences()\n  useEffect(() => {\n    getHotelPaymentPreferences({ page: currentPage })\n  }, [getHotelPaymentPreferences])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Hotel Payment Preferences List</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getHotelPaymentPreferences({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getHotelPaymentPreferences({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          headers={[\"Description\"]}\n          bordered\n          striped\n          rows={hotelPaymentPreferences.map(hotelPaymentPreference => [\n            hotelPaymentPreference.name,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectHotelPaymentPreferencesProps\n  extends XHRProps,\n    Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectHotelPaymentPreferences = withXHR<\n  SelectHotelPaymentPreferencesProps\n>(function SelectHotelPaymentPreferences({\n  xhr,\n  ...otherProps\n}: SelectHotelPaymentPreferencesProps) {\n  return (\n    <Async\n      multiple\n      {...otherProps}\n      fetch={q =>\n        XHR(xhr)\n          .getHotelPaymentPreferences({ q })\n          .then(resp => resp.data)\n      }\n    />\n  )\n})\n\nexport const SelectHotelPaymentReferences = withXHR<\n  SelectHotelPaymentPreferencesProps\n>(function SelectHotelPaymentReferences({\n  xhr,\n  ...otherProps\n}: SelectHotelPaymentPreferencesProps) {\n  return (\n    <Async\n      multiple\n      {...otherProps}\n      fetch={q =>\n        XHR(xhr)\n          .getHotelPaymentReferences({ q })\n          .then(resp => resp.data)\n      }\n    />\n  )\n})\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, Form, FormikProps, FormikActions, FieldArray } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField, FormikFormGroup } from \"./../Shared/InputField\"\nimport { SelectHotelPaymentReferences } from \"./List\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\ninterface NewItemCredentials {\n  breakdowns: {\n    reference?: { id: number; name: string }\n    day_offset: number\n    amount_share: number\n  }[]\n}\nconst validationSchema = Validator.object().shape({\n  breakdowns: Validator.array()\n    .of(\n      Validator.object().shape({\n        reference: Validator.object().required(\"Reference field is required\"),\n        day_offset: Validator.number()\n          .integer()\n          .required(\"Day offset field is required\"),\n        amount_share: Validator.number()\n          .integer()\n          .positive(\"Amount share should be positive integer\")\n          .max(100, \"Amount share can not be greater then 100\")\n          .required(\"Amount share field is required\"),\n      })\n    )\n    .min(1, \"Atleast on breakdown is required.\"),\n})\nconst initialValues: NewItemCredentials = {\n  breakdowns: [\n    {\n      reference: undefined,\n      day_offset: 0,\n      amount_share: 100,\n    },\n  ],\n}\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\n\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Trip Stage</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          // check for sum\n          const totalAmountShare = values.breakdowns.reduce(\n            (total, { amount_share }) => total + amount_share,\n            0\n          )\n          if (totalAmountShare !== 100) {\n            actions.setStatus(\n              `Total amount share(${totalAmountShare}) should be 100%`\n            )\n            actions.setSubmitting(false)\n            return\n          }\n          return xhr\n            .post(\"/hotel-payment-preferences\", {\n              breakdowns: values.breakdowns.map(breakdown => ({\n                ...breakdown,\n                reference: breakdown.reference ? breakdown.reference.id : null,\n              })),\n            })\n            .then(({ data }) => {\n              navigate && navigate(`..`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setSubmitting(false)\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n        }}\n        render={({\n          isSubmitting,\n          status,\n          values,\n          setFieldValue,\n        }: FormikProps<NewItemCredentials>) => (\n          <Form noValidate>\n            <fieldset>\n              <legend>Add new Hotel Payment Preferences</legend>\n              <FieldArray\n                name=\"breakdowns\"\n                render={({ name, push, remove }) => (\n                  <ul className=\"list\">\n                    {values.breakdowns.map((_, index, breakdowns) => (\n                      <Grid as=\"li\" key={index}>\n                        <Col md={3}>\n                          <FormikFormGroup\n                            name={`${name}.${index}.reference`}\n                            render={({ field }) => (\n                              <SelectHotelPaymentReferences\n                                {...field}\n                                label=\"Reference Event\"\n                                required\n                                fetchOnMount\n                                multiple={false}\n                                onChange={(value, name) =>\n                                  setFieldValue(name, value)\n                                }\n                              />\n                            )}\n                          />\n                        </Col>\n                        <Col md={3}>\n                          <InputField\n                            label=\"Day offset from reference\"\n                            name={`${name}.${index}.day_offset`}\n                            required\n                            type=\"number\"\n                          />\n                        </Col>\n                        <Col md={3}>\n                          <InputField\n                            label={\n                              <span className=\"whitespace-pre\">\n                                Amount share from total amount\n                              </span>\n                            }\n                            name={`${name}.${index}.amount_share`}\n                            required\n                            type=\"number\"\n                            min={1}\n                            max={100}\n                          />\n                        </Col>\n                        <Col md={3} className=\"d-flex align-items-center\">\n                          {breakdowns.length > 1 ? (\n                            <Button\n                              className=\"btn--secondary\"\n                              onClick={() => remove(index)}\n                            >\n                              &times; Remove\n                            </Button>\n                          ) : null}\n                        </Col>\n                      </Grid>\n                    ))}\n                    <li key=\"add_more\">\n                      <Button\n                        onClick={() =>\n                          push({\n                            amount_share:\n                              100 - values.breakdowns[0].amount_share,\n                          })\n                        }\n                      >\n                        + Add More\n                      </Button>\n                    </li>\n                  </ul>\n                )}\n              />\n              {status ? <div className=\"text--error\">{status}</div> : null}\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\nexport default function TripStagesModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Grid>\n        <Col>\n          <h2 className=\"white-space-pre\">Hotel Payment Preferences</h2>\n        </Col>\n        <Col className=\"d-flex align-items-center justify-content-end\">\n          <Link to=\"new\" className=\"btn\">\n            New Hotel Payment Preference\n          </Link>\n        </Col>\n      </Grid>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  FieldArray,\n  FieldProps,\n} from \"formik\"\nimport * as Validator from \"yup\"\nimport Helmet from \"react-helmet-async\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { InputField, FormikFormGroup } from \"./../Shared/InputField\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { store as mealPlanStore, SelectMealPlans } from \"./../MealPlans\"\nimport { store as roomTypeStore, SelectRoomTypes } from \"./../RoomTypes\"\nimport { store as locationStore, SelectLocations } from \"./../Locations\"\nimport {\n  store as hotelPaymentPreferenceStore,\n  SelectHotelPaymentPreferences,\n} from \"../HotelPaymentPreferences\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\nconst validationSchema = Validator.object().shape({\n  name: Validator.string().required(\"Name field is required\"),\n  stars: Validator.number()\n    .positive(\"Star rating field should a positive integer.\")\n    .integer(\"Star rating field should be positive integer\")\n    .required(\"Stars rating field is required\"),\n  extra_bed_child_age_start: Validator.number()\n    .positive(\"Child start age should be a positive number\")\n    .integer(\"Child start age should be an integer\")\n    .required(\"Child start age is required\"),\n  extra_bed_child_age_end: Validator.number()\n    .positive(\"Child end age should be a positive number\")\n    .integer(\"Child end age should be an integer\")\n    .required(\"Child end age is required\"),\n  meal_plans: Validator.array().min(1, \"Please select atleast one meal plan\"),\n  room_types: Validator.array()\n    .of(\n      Validator.object().shape({\n        room_types: Validator.array()\n          .min(1, \"Please select atleast one room type\")\n          .required(\"Please select a room type\"),\n        allowed_extra_beds: Validator.number()\n          .typeError(\"Allowed extra bed must be a number\")\n          .integer(\"Allowed extra beds should be an integer\")\n          .min(0, \"Allowed extra beds should not be negative\")\n          .required(\"Allowed extra beds field is required\"),\n      })\n    )\n    .min(1, \"Please select atleast one room type\"),\n  location: Validator.object().required(\"Location field is required\"),\n})\ninterface NewItemCredentials {\n  name: string\n  stars: number\n  extra_bed_child_age_start: number\n  extra_bed_child_age_end: number\n  meal_plans: mealPlanStore.IMealPlan[]\n  room_types: {\n    room_types: roomTypeStore.IRoomType[]\n    allowed_extra_beds: number\n  }[]\n  location?: locationStore.ILocation\n  payment_preference?: hotelPaymentPreferenceStore.IHotelPaymentPreference\n}\nconst initialValues: NewItemCredentials = {\n  name: \"\",\n  stars: 1,\n  extra_bed_child_age_start: 6,\n  extra_bed_child_age_end: 12,\n  meal_plans: [],\n  room_types: [{ room_types: [], allowed_extra_beds: 1 }],\n  location: undefined,\n}\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Hotel</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          xhr\n            .post(\"/hotels\", {\n              ...values,\n              meal_plans: values.meal_plans.map(mealPlan => mealPlan.id),\n              room_types: values.room_types.reduce(\n                (\n                  rooms: Array<{\n                    room_type_id: number\n                    allowed_extra_beds: number\n                  }>,\n                  { room_types, allowed_extra_beds }\n                ) =>\n                  rooms.concat(\n                    room_types.map(room_type => ({\n                      room_type_id: room_type.id,\n                      allowed_extra_beds: allowed_extra_beds,\n                    }))\n                  ),\n                []\n              ),\n              location_id: values.location ? values.location.id : undefined,\n              payment_preference_id: values.payment_preference\n                ? values.payment_preference.id\n                : undefined,\n            })\n            .then(({ data }) => {\n              const { data: hotel } = data\n              navigate && navigate(`../${hotel.id}`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({\n          isSubmitting,\n          setFieldValue,\n          values,\n          status,\n        }: FormikProps<NewItemCredentials>) => {\n          return (\n            <Form noValidate>\n              {status ? <div>{status}</div> : null}\n              <fieldset>\n                <legend>Add Hotel</legend>\n                <Grid>\n                  <Col lg md={4} sm={6} xs={12}>\n                    <InputField\n                      label=\"Name\"\n                      name=\"name\"\n                      placeholder=\"Taj Hotel\"\n                      required\n                    />\n                  </Col>\n                  <Col lg md={4} sm={6} xs={12}>\n                    <FormikFormGroup\n                      name=\"location\"\n                      render={({ field }: FieldProps<NewItemCredentials>) => (\n                        <SelectLocations\n                          {...field}\n                          label=\"Location\"\n                          multiple={false}\n                          onChange={(value, name) => setFieldValue(name, value)}\n                        />\n                      )}\n                    />\n                  </Col>\n                  <Col lg md={4} sm={6}>\n                    <FormikFormGroup\n                      name=\"payment_preference\"\n                      render={({ field }: FieldProps<NewItemCredentials>) => (\n                        <SelectHotelPaymentPreferences\n                          {...field}\n                          label=\"Payment Preference\"\n                          multiple={false}\n                          onChange={(value, name) => setFieldValue(name, value)}\n                          fetchOnMount\n                        />\n                      )}\n                    />\n                  </Col>\n                  <Col lg md={4} sm={4} xs={8}>\n                    <FormikFormGroup\n                      name=\"meal_plans\"\n                      render={({ field }) => (\n                        <SelectMealPlans\n                          {...field}\n                          label=\"Meal Plan(s) served\"\n                          onChange={(values, name) =>\n                            setFieldValue(name, values)\n                          }\n                          fetchOnMount\n                        />\n                      )}\n                    />\n                  </Col>\n                  <Col lg={1} md={4} sm={2} xs={4}>\n                    <InputField\n                      label=\"Stars\"\n                      name=\"stars\"\n                      type=\"number\"\n                      required\n                      max={5}\n                      min={1}\n                    />\n                  </Col>\n                </Grid>\n                <FieldArray\n                  name=\"room_types\"\n                  render={({ name, push, remove }) => (\n                    <fieldset>\n                      <legend>Room Type(s) Available</legend>\n                      <ul className=\"list\">\n                        {values.room_types.map(\n                          (room_type, index, room_types) => (\n                            <li key={index}>\n                              <Grid>\n                                <Col xs=\"auto\">\n                                  <FormikFormGroup\n                                    name={`${name}.${index}.room_types`}\n                                    render={({ field }) => (\n                                      <SelectRoomTypes\n                                        {...field}\n                                        label=\"Room Types\"\n                                        fetchOnMount\n                                        onChange={(value, name) =>\n                                          setFieldValue(name, value)\n                                        }\n                                      />\n                                    )}\n                                  />\n                                </Col>\n                                <Col xs=\"auto\">\n                                  <InputField\n                                    label=\"Allowed extra bed(s)\"\n                                    type=\"number\"\n                                    name={`${name}.${index}.allowed_extra_beds`}\n                                    value={room_type.allowed_extra_beds}\n                                    min={0}\n                                  />\n                                </Col>\n                                <Col\n                                  xs=\"auto\"\n                                  className=\"d-flex align-items-center\"\n                                >\n                                  {room_types.length > 1 ? (\n                                    <Button\n                                      onClick={_ => remove(index)}\n                                      className=\"btn--secondary\"\n                                    >\n                                      &times; Remove\n                                    </Button>\n                                  ) : null}\n                                </Col>\n                              </Grid>\n                            </li>\n                          )\n                        )}\n                        <li>\n                          <Button onClick={_ => push(values.room_types[0])}>\n                            + Add More Room Types\n                          </Button>\n                        </li>\n                      </ul>\n                    </fieldset>\n                  )}\n                />\n                <Grid>\n                  <Col sm=\"auto\">\n                    <InputField\n                      label=\"Extra bed child start age\"\n                      name=\"extra_bed_child_age_start\"\n                      required\n                      type=\"number\"\n                      min={1}\n                    />\n                  </Col>\n                  <Col sm=\"auto\">\n                    <InputField\n                      label=\"Extra bed child end age\"\n                      name=\"extra_bed_child_age_end\"\n                      required\n                      type=\"number\"\n                      min={1}\n                    />\n                  </Col>\n                </Grid>\n                <footer>\n                  <Button primary type=\"submit\" disabled={isSubmitting}>\n                    Save\n                  </Button>\n                  <Link to=\"..\" className=\"btn\">\n                    Cancel\n                  </Link>\n                </footer>\n              </fieldset>\n            </Form>\n          )\n        }}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport Item from \"./Item\"\nimport NewItem from \"./NewItem\"\n\nexport default function HotelsModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <div className=\"float-right button-group\">\n        <Link to=\"/hotel-prices\" className=\"btn\">\n          Hotel Prices\n        </Link>\n        <Link to=\"/hotel-prices/upload-prices\" className=\"btn\">\n          Upload Prices\n        </Link>\n        <Link to=\"new\" className=\"btn\">\n          New Hotel\n        </Link>\n      </div>\n      <h2>Hotels</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"new\" />\n        <Item path=\":hotelId/*\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IMeta,\n  IModelState,\n  createReducer,\n} from \"./../model\"\nimport { store as transportServiceStore } from \"./../TransportServices\"\n\nexport const key = \"CAB_TYPES_STATE\"\n\nexport interface ICabType extends IBaseItem {\n  id: number\n  name: string\n  capacity: number\n}\n\nexport interface ICabPrice {\n  id: number\n  start_date: string\n  end_date: string\n  cab_type_id: number\n  cab_type: ICabType\n  transport_service_id: number\n  transport_service: transportServiceStore.ITransportService\n  price?: number\n  per_km_charges?: number\n  minimum_km_per_day?: number\n  toll_charges: number\n  parking_charges: number\n  night_charges: number\n}\n\nexport interface ICabTypes extends IBaseState<ICabType> {}\n\nexport interface IState extends IModelState<ICabType> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ICabType>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@CAB_TYPES/LIST_FETCH_REQUEST\",\n    \"@CAB_TYPES/LIST_FETCH_SUCCESS\",\n    \"@CAB_TYPES/LIST_FETCH_FAILED\"\n  )<undefined, { data: ICabType[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<ICabType, IState>(\n  INITIAL_STATE,\n  actions as any\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model<ICabType>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { useSelector } from \"react-redux\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { ICabType, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"./../model\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getCabTypes(params?: any): Promise<{ data: ICabType[]; meta: any }> {\n      return xhr.get(\"/cab-types\", { params }).then(({ data }) => data)\n    },\n  }\n}\n\nexport const getCabTypesAction = (\n  params?: any\n): ThunkAction<Promise<ICabType[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getCabTypes(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useCabTypesState() {\n  interface State extends IPaginate {\n    cabTypes: ICabType[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, State>(state => {\n    const cabTypesSelector = selectors(state)\n    return {\n      ...cabTypesSelector.meta,\n      isFetching: cabTypesSelector.isFetching,\n      cabTypes: cabTypesSelector.get(),\n    }\n  })\n}\n\nfunction useCabTypesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getCabTypesAction(params)), [\n    dispatch,\n  ])\n}\n\nexport function useCabTypes() {\n  return {\n    ...useCabTypesState(),\n    fetchCabTypes: useCabTypesFetch(),\n  }\n}\n\nexport default function List(_: RouteComponentProps) {\n  const {\n    cabTypes,\n    isFetching,\n    total,\n    currentPage,\n    lastPage,\n    from,\n    to,\n    fetchCabTypes: getCabTypes,\n  } = useCabTypes()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getCabTypes({ page: currentPage })\n  }, [getCabTypes])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Cab Types</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getCabTypes({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getCabTypes({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable isFetching={isFetching} total={total}>\n        <Table\n          headers={[\"Name\", \"Capacity\"]}\n          alignCols={{ 1: \"right\" }}\n          bordered\n          striped\n          rows={cabTypes.map(cabType => [cabType.name, cabType.capacity])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectCabTypeProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectCabTypes = withXHR<SelectCabTypeProps>(\n  function SelectCabTypes({ xhr, ...otherProps }: SelectCabTypeProps) {\n    return (\n      <Async\n        multiple\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getCabTypes({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, Form, FormikProps, FormikActions } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\n\nconst validationSchema = Validator.object().shape({\n  name: Validator.string().required(\"Name field is required\"),\n  capacity: Validator.number()\n    .positive(\"Capacity should be a positive integer\")\n    .integer(\"Capacity should be a positive integer\")\n    .required(\"Capacity field is required\"),\n})\nconst initialValues = {\n  name: \"\",\n  capacity: 4,\n}\ntype NewItemCredentials = typeof initialValues\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\n\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Cab Type</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          xhr\n            .post(\"/cab-types\", values)\n            .then(() => {\n              navigate && navigate(`..`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setSubmitting(false)\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<NewItemCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add Cab Type</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                placeholder=\"Medium\"\n                required\n              />\n              <InputField\n                label=\"Capacity\"\n                name=\"capacity\"\n                required\n                type=\"number\"\n                min={1}\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\n\nexport default function CabTypesModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"btn float-right\">\n        New Cab Type\n      </Link>\n      <h2>Cab Types</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\n\nimport { store as cabTypeStore } from \"./../CabTypes\"\nimport {\n  IBaseItem,\n  IBaseState,\n  IModelState,\n  model,\n  init,\n  createReducer,\n  IMeta,\n} from \"./../model\"\n\nexport const key = \"CAB_LIST_STATE\"\n\nexport interface ICab extends IBaseItem {\n  id: number\n  name: string\n  number_plate: string\n  created_at: string\n  updated_at: string\n  cab_type: cabTypeStore.ICabType\n}\n\nexport interface ICabs extends IBaseState<ICab> {}\n\nexport interface IState extends IModelState<ICab> {\n  readonly isFetching: boolean\n}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ICab>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@CABS/LIST_FETCH_REQUEST\",\n    \"@CABS/LIST_FETCH_SUCCESS\",\n    \"@CABS/LIST_FETCH_FAILED\"\n  )<undefined, { data: ICab[]; meta: IMeta }, Error>(),\n  item: createAsyncAction(\n    \"@CABS/ITEM_FETCH_REQUEST\",\n    \"@CABS/ITEM_FETCH_SUCCESS\",\n    \"@CABS/ITEM_FETCH_FAILED\"\n  )<undefined, ICab, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<ICab, IState>(\n  INITIAL_STATE,\n  actions as any\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState: IState = state[key]\n  return {\n    ...model<ICab>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link, Redirect } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport moment from \"moment\"\n\nimport { ThunkAction } from \"./../types\"\nimport { ICab, actions, IStateWithKey, selectors } from \"./store\"\nimport { useThunkDispatch } from \"../utils\"\n\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async getCab(id: string): Promise<ICab> {\n      return xhr.get(`/cabs/${id}`).then(({ data }) => data.data)\n    },\n  }\n}\n\nexport const getCabAction = (id: string): ThunkAction<Promise<ICab>> => async (\n  dispatch,\n  _,\n  { xhr }\n) => {\n  dispatch(actions.item.request())\n  return XHR(xhr)\n    .getCab(id)\n    .then(cab => {\n      dispatch(actions.item.success(cab))\n      return cab\n    })\n    .catch(error => {\n      dispatch(actions.item.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useCabState(cabId?: number | string) {\n  interface StateProps {\n    isFetching: boolean\n    cab?: ICab\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const cabsSelector = selectors(state)\n    return {\n      isFetching: cabsSelector.isFetching,\n      cab: cabsSelector.getItem(cabId),\n    }\n  })\n}\n\nexport function useCabFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((cabId: string) => dispatch(getCabAction(cabId)), [\n    dispatch,\n  ])\n}\n\nexport function useCab(cabId?: string, shouldFetch: boolean = false) {\n  const state = useCabState(cabId)\n  const fetchCab = useCabFetch()\n  useEffect(() => {\n    if (shouldFetch) {\n      cabId && fetchCab(cabId)\n    }\n  }, [cabId, shouldFetch, fetchCab])\n  return {\n    ...state,\n    fetchCab,\n  }\n}\n\nexport default function Cab({\n  cabId,\n  navigate,\n}: RouteComponentProps<{ cabId: string }>) {\n  const { cab, isFetching } = useCab(cabId, true)\n  if (!cabId) {\n    navigate && navigate(\"/cabs\")\n    return null\n  }\n  return (\n    <Fragment>\n      <Helmet>\n        <title>{cab ? cab.number_plate : \"\"} Cab</title>\n      </Helmet>\n      <Link to=\"..\">Back to list</Link>\n      {isFetching ? (\n        \"Loading...\"\n      ) : cab ? (\n        <div>\n          {cab.name} - {cab.cab_type.name} - {cab.number_plate}\n          <br />\n          Created at:{\" \"}\n          {moment\n            .utc(cab.created_at)\n            .local()\n            .toLocaleString()}\n          <br />\n        </div>\n      ) : (\n        <Redirect noThrow to=\"/cabs\" />\n      )}\n    </Fragment>\n  )\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Omit } from \"utility-types\"\n\nimport { ThunkAction, ThunkDispatch } from \"./../types\"\nimport { ICab, actions, IStateWithKey, selectors } from \"./store\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport { Search, useSearch } from \"./../Shared/Search\"\nimport { List } from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\nimport { IPaginate } from \"./../model\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getCabs(params?: any): Promise<{ data: ICab[]; meta: any }> {\n      return xhr.get(\"/cabs\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getCabsAction = (\n  params?: any\n): ThunkAction<Promise<ICab[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getCabs(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useCabsState() {\n  interface StateProps extends IPaginate {\n    cabs: ICab[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const cabsSelector = selectors(state)\n    return {\n      ...cabsSelector.meta,\n      isFetching: cabsSelector.isFetching,\n      cabs: cabsSelector.get(),\n    }\n  })\n}\n\nfunction useCabsFetch() {\n  const dispatch = useDispatch<ThunkDispatch>()\n  return useCallback((params?: any) => dispatch(getCabsAction(params)), [\n    dispatch,\n  ])\n}\n\nexport function useCabs() {\n  return {\n    ...useCabsState(),\n    fetchCabs: useCabsFetch(),\n  }\n}\n\nexport default function Cabs(_: RouteComponentProps) {\n  const {\n    cabs,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n    fetchCabs: getCabs,\n  } = useCabs()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getCabs({ page: currentPage })\n  }, [getCabs])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Cabs</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getCabs({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getCabs({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <List isFetching={isFetching} total={total}>\n        <Table\n          headers={[\"Name\", \"Number Plate\"]}\n          striped\n          bordered\n          rows={cabs.map(r => [\n            <Link to={r.id.toString()}>{r.name}</Link>,\n            r.number_plate,\n          ])}\n        />\n      </List>\n    </Fragment>\n  )\n}\n\ninterface SelectCabsProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {\n  value?: ICab[]\n  onChange: (cabs: ICab[]) => void\n}\n\nexport const SelectCabs = withXHR<SelectCabsProps>(function SelectCabs({\n  xhr,\n  ...otherProps\n}: SelectCabsProps) {\n  return (\n    <Async\n      multiple\n      fetch={q =>\n        XHR(xhr)\n          .getCabs({ q })\n          .then(resp => resp.data)\n      }\n      {...otherProps}\n    />\n  )\n})\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, FormikProps, FormikActions, Form, FieldProps } from \"formik\"\nimport * as Validator from \"yup\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField, FormikFormGroup } from \"./../Shared/InputField\"\nimport { SelectCabTypes, store as cabTypeStore } from \"./../CabTypes\"\n\nexport interface NewCabCredentials {\n  name: string\n  number_plate: string\n  cab_type?: cabTypeStore.ICabType\n}\nconst newCabSchema = Validator.object().shape({\n  name: Validator.string().required(\"Name for the cab is required.\"),\n  number_plate: Validator.string()\n    .required(\"Number Plate is required\")\n    .max(299, \"Maximum 299 characters allowed\"),\n  cab_type: Validator.object().required(\"Cab type is required\"),\n})\nconst initialValues = {\n  name: \"\",\n  number_plate: \"\",\n  cab_type: undefined,\n}\n\ninterface NewCabProps extends RouteComponentProps, XHRProps {}\n\nexport function NewCab({ xhr, navigate }: NewCabProps) {\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={newCabSchema}\n        onSubmit={(\n          values: NewCabCredentials,\n          actions: FormikActions<NewCabCredentials>\n        ) => {\n          const { number_plate, cab_type, name } = values\n          if (number_plate && cab_type && name) {\n            actions.setStatus()\n            return xhr\n              .post(\"/cabs\", {\n                name,\n                number_plate,\n                cab_type_id: cab_type.id,\n              })\n              .then(({ data }) => {\n                const cab = data.data\n                navigate && navigate(`../${cab.id}`)\n                actions.setSubmitting(false)\n              })\n              .catch(error => {\n                actions.setStatus(error.message)\n                if (error.formikErrors) {\n                  actions.setErrors(error.formikErrors)\n                }\n                actions.setSubmitting(false)\n              })\n          } else {\n            actions.setStatus(\"Please fill the required fields\")\n          }\n        }}\n        render={({\n          isSubmitting,\n          status,\n          setFieldValue,\n        }: FormikProps<NewCabCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add New Cab</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                required\n                placeholder=\"Suzuki Wagon R\"\n              />\n              <FormikFormGroup\n                name=\"cab_type\"\n                render={({ field }: FieldProps<NewCabCredentials>) => (\n                  <SelectCabTypes\n                    {...field}\n                    label=\"Cab Type\"\n                    multiple={false}\n                    placeholder=\"Type to search... (e.g. Wagon)\"\n                    onChange={(value, name) => setFieldValue(name, value)}\n                  />\n                )}\n              />\n              <InputField\n                label=\"Number Plate\"\n                name=\"number_plate\"\n                required\n                placeholder=\"RJ18 CC 7838\"\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default withXHR<NewCabProps>(NewCab)\n","import React from \"react\"\nimport { RouteComponentProps, Router, Link } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport Item from \"./Item\"\nimport List from \"./List\"\nimport NewItem from \"./New\"\n\nexport default function CabsModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"btn float-right\">\n        Add New Cab\n      </Link>\n      <h2>Cabs</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <Item path=\":cabId\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\n\nimport {\n  IBaseItem,\n  IBaseState,\n  model,\n  init,\n  IMeta,\n  IModelState,\n  createReducer,\n} from \"./../model\"\nimport { store as locationStore } from \"./../Locations\"\nimport { store as transportServiceStore } from \"./../TransportServices\"\nimport { store as transportLocationStore } from \"./../TransportLocations\"\nimport { store as tripSourceStore } from \"./../TripSources\"\nimport { store as hotelStore } from \"./../Hotels\"\nimport { store as cabTypeStore } from \"./../CabTypes\"\nimport { store as userStore } from \"./../Users\"\nimport { store as contactStore } from \"./../Contacts\"\nimport { store as tripStageStore } from \"./../TripStages\"\nimport { store as paymentStore } from \"./../Payments\"\nimport { store as hotelBookingStageStore } from \"./../HotelBookingStages\"\nimport { store as tagStore } from \"./../Tags\"\nimport { store as extraServiceStore } from \"./../ExtraServices\"\nimport { store as activityLogStore } from \"./../ActivityLogs\"\n\nexport const key = \"TRIP_LIST_STATE\"\n\nexport interface ITripLatestStage extends tripStageStore.ITripStage {\n  pivot: {\n    created_by: userStore.IUser\n    created_at: string\n  }\n}\n\nexport interface IQuoteHotelLatestBookingStage\n  extends hotelBookingStageStore.IHotelBookingStage {\n  pivot: {\n    created_by: userStore.IUser\n    created_at: string\n  }\n}\n\nexport interface IQuoteHotel {\n  id: number\n  quote_id: number\n  checkin: string\n  checkout: string\n  hotel_id: number\n  hotel: hotelStore.IHotel\n  meal_plan_id: number\n  meal_plan: hotelStore.IHotelMealPlan\n  room_type_id: number\n  room_type: hotelStore.IHotelRoomType\n  adults_with_extra_bed: number\n  children_with_extra_bed: number\n  children_without_extra_bed: number\n  no_of_rooms: number\n  calculated_price?: number\n  given_price: number\n  comments: string\n  booking_stages: hotelBookingStageStore.IHotelBookingStage[]\n  latest_booking_stage?: IQuoteHotelLatestBookingStage\n  booked_at?: string\n}\nexport interface IQuoteCab {\n  id: number\n  quote_id: number\n  from_date: string\n  to_date: string\n  cab_type_id: number\n  cab_type: cabTypeStore.ICabType\n  transport_service_id: number\n  transport_service: transportServiceStore.ITransportService\n  cab_locality?: transportLocationStore.ITransportLocation\n  no_of_cabs: number\n  calculated_price?: number\n  given_price: number\n  comments: string\n}\n\nexport interface IQuoteHotelExtras {\n  id: number\n  service: extraServiceStore.IExtraService\n  date?: string\n  calculated_price?: number\n  given_price?: number\n  hotel?: hotelStore.IHotel\n  comments: string\n}\n\nexport interface IQuoteTransportExtras {\n  id: number\n  service: extraServiceStore.IExtraService\n  date?: string\n  calculated_price?: number\n  given_price?: number\n  comments: string\n}\n\nexport interface IQuoteOtherExtras {\n  id: number\n  service: extraServiceStore.IExtraService\n  date?: string\n  calculated_price?: number\n  given_price?: number\n  comments: string\n}\n\nexport interface IQuote {\n  id: number\n  trip_id: number\n  total_price: number\n  given_price: number\n  comments: string\n  hotels: IQuoteHotel[]\n  cabs: IQuoteCab[]\n  hotel_extras: IQuoteHotelExtras[]\n  transport_extras: IQuoteTransportExtras[]\n  other_extras: IQuoteTransportExtras[]\n  created_by: userStore.IUser\n  updated_by: userStore.IUser\n  created_at: string\n}\n\nexport interface IGivenQuote {\n  id: number\n  quote_id: number\n  quote: IQuote\n  given_price: number\n  comments?: string\n  created_by: userStore.IUser\n  created_at: string\n  locations: Array<locationStore.ILocation>\n}\n\nexport interface ITrip extends IBaseItem {\n  id: number\n  start_date: string\n  end_date: string\n  locations: locationStore.ILocation[]\n  trip_source: tripSourceStore.ITripSource\n  trip_id: string\n  no_of_adults: number\n  children?: string\n  created_at: string\n  updated_at: string\n  quotes: IQuote[]\n  latest_given_quote?: IGivenQuote\n  given_quotes?: IGivenQuote[]\n  contacts: contactStore.IContact[]\n  contact: contactStore.IContact\n  stages: tripStageStore.ITripStage[]\n  latest_stage?: ITripLatestStage\n  converted_at?: string\n  customer_payments?: paymentStore.IPayment<ITrip>[]\n  hotel_payments?: paymentStore.IPayment<IQuoteHotel>[]\n  cab_payments?: paymentStore.IPayment<IQuoteCab>[]\n  tags?: Array<tagStore.ITag>\n  created_by: userStore.IUser\n  activity_logs?: Array<activityLogStore.IActivityLog>\n  sales_team?: Array<userStore.IUser>\n  operations_team?: Array<userStore.IUser>\n  total_quotes: number | null\n}\n\nexport interface ITrips extends IBaseState<ITrip> {}\n\nexport interface IState extends IModelState<ITrip> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ITrip>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@TRIPS/LIST_FETCH_REQUEST\",\n    \"@TRIPS/LIST_FETCH_SUCCESS\",\n    \"@TRIPS/LIST_FETCH_FAILED\"\n  )<undefined, { data: ITrip[]; meta: IMeta }, Error>(),\n  item: createAsyncAction(\n    \"@TRIPS/ITEM_FETCH_REQUEST\",\n    \"@TRIPS/ITEM_FETCH_SUCCESS\",\n    \"@TRIPS/ITEM_FETCH_FAILED\"\n  )<undefined, ITrip, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n\nexport function isTripConverted(trip: ITrip): boolean {\n  return !!trip.converted_at\n}\n","import { createAsyncAction, getType, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IModelState,\n  IMeta,\n  createReducer,\n} from \"./../model\"\n\nexport const key = \"TRIP_STAGES_STATE\"\n\nexport interface ITripStage extends IBaseItem {\n  id: number\n  name: string\n  description: string\n}\n\nexport interface ITripStages extends IBaseState<ITripStage> {}\n\nexport interface IState extends IModelState<ITripStage> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ITripStage>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@TRIP_STAGES/LIST_FETCH_REQUEST\",\n    \"@TRIP_STAGES/LIST_FETCH_SUCCESS\",\n    \"@TRIP_STAGES/LIST_FETCH_FAILED\"\n  )<undefined, { data: ITripStage[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { ITripStage, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTripStages(\n      params?: any\n    ): Promise<{ data: ITripStage[]; meta: any }> {\n      return xhr.get(\"/trip-stages\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getTripStagesAction = (\n  params?: any\n): ThunkAction<Promise<ITripStage[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getTripStages(params)\n    .then(tripStages => {\n      dispatch(actions.list.success(tripStages))\n      return tripStages.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useTripStagesState() {\n  interface StateProps extends IPaginate {\n    tripStages: ITripStage[]\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const tripStagesSelector = selectors(state)\n    return {\n      ...tripStagesSelector.meta,\n      isFetching: tripStagesSelector.isFetching,\n      tripStages: tripStagesSelector.get(),\n    }\n  })\n}\n\nfunction useTripStagesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getTripStagesAction(params)), [\n    dispatch,\n  ])\n}\n\nfunction useTripStages() {\n  return {\n    ...useTripStagesState(),\n    fetchTripStages: useTripStagesFetch(),\n  }\n}\n\nexport default function List({  }: RouteComponentProps) {\n  const [params, setParams] = useSearch()\n  const {\n    fetchTripStages: getTripStages,\n    tripStages,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useTripStages()\n  useEffect(() => {\n    getTripStages({ page: currentPage })\n  }, [getTripStages])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Trip Stages</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getTripStages({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getTripStages({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          striped\n          bordered\n          headers={[\"Name\", \"Description\"]}\n          rows={tripStages.map(tripStage => [\n            tripStage.name,\n            tripStage.description,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectTripStagesProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectTripStages = withXHR<SelectTripStagesProps>(\n  function SelectTripStages({ xhr, ...otherProps }: SelectTripStagesProps) {\n    return (\n      <Async\n        multiple\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getTripStages({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, Form, FormikProps, FormikActions } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\n\nconst validationSchema = Validator.object().shape({\n  name: Validator.string().required(\"Name field is required\"),\n  description: Validator.string().required(\"Description field is required\"),\n})\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n}\ntype NewItemCredentials = typeof initialValues\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\n\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Trip Stage</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          return xhr\n            .post(\"/trip-stages\", values)\n            .then(({ data }) => {\n              navigate && navigate(`..`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setSubmitting(false)\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<NewItemCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add new Trip Stage</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                placeholder=\"Converted\"\n                required\n              />\n              <InputField\n                label=\"Description\"\n                name=\"description\"\n                placeholder=\"Trip Converted\"\n                required\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\n\nexport default function TripStagesModule(props: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"float-right btn\">\n        New Trip Stage\n      </Link>\n      <h2>Trip Stages</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React from \"react\"\nimport { XHRProps, withXHR } from \"../xhr\"\nimport { AsyncProps } from \"@tourepedia/select\"\nimport { AsyncSelect } from \"@tourepedia/ui\"\nimport { AxiosInstance } from \"axios\"\nimport { ITag } from \"./store\"\n\nexport function XHR(xhr: AxiosInstance, type: string) {\n  return {\n    async getTags(params?: any): Promise<{ data: Array<ITag> }> {\n      return xhr.get(`/${type}-tags`, { params }).then(resp => resp.data)\n    },\n    async storeTags(\n      items: Array<number>,\n      tags: Array<string>\n    ): Promise<{ data: Array<any> }> {\n      return xhr.post(`/${type}-tags`, { items, tags }).then(resp => resp.data)\n    },\n  }\n}\n\ninterface SelectTagsProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {\n  type: \"trip\"\n}\n\nexport const SelectTags = withXHR(function SelectRoomTypes({\n  xhr,\n  type,\n  ...otherProps\n}: SelectTagsProps) {\n  return (\n    <AsyncSelect\n      multiple\n      creatable\n      {...otherProps}\n      fetch={q =>\n        XHR(xhr, type)\n          .getTags({ q })\n          .then(resp => resp.data)\n      }\n    />\n  )\n})\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\nimport Helmet from \"react-helmet-async\"\nimport { Table, Icons, Paginate, Button, Badge } from \"@tourepedia/ui\"\nimport pluralize from \"pluralize\"\n\nimport { ITrip, IStateWithKey, actions, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch, numberToLocalString, joinAttributes } from \"../utils\"\nimport { SelectTripStages, store as tripStageStore } from \"../TripStages\"\nimport { SelectTags, store as tagStore } from \"../Tags\"\nimport { Formik, Form } from \"formik\"\nimport { FormikFormGroup, OnFormChange, InputField } from \"../Shared/InputField\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTrips(params?: any): Promise<{ data: ITrip[]; meta: any }> {\n      return xhr.get(\"/trips\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getTripsAction = (\n  params?: any\n): ThunkAction<Promise<ITrip[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getTrips(params)\n    .then(trips => {\n      dispatch(actions.list.success(trips))\n      return trips.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useTripsState() {\n  interface StateProps extends IPaginate {\n    trips: ITrip[]\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const tripSelector = selectors(state)\n    return {\n      ...tripSelector.meta,\n      isFetching: tripSelector.isFetching,\n      trips: tripSelector.get(),\n    }\n  })\n}\n\nexport function useTripsFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((params?: any) => dispatch(getTripsAction(params)), [\n    dispatch,\n  ])\n}\n\nexport function useTrips() {\n  return {\n    ...useTripsState(),\n    fetchTrips: useTripsFetch(),\n  }\n}\n\ninterface IFilters {\n  q?: string\n  stages?: Array<tripStageStore.ITripStage>\n  tags?: Array<tagStore.ITag>\n  hotels_not_booked?: boolean\n}\n\nexport default function List({  }: RouteComponentProps) {\n  const [params, setParams] = useSearch<IFilters>()\n  const {\n    trips,\n    fetchTrips,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useTrips()\n  const getTrips = useCallback(\n    params => {\n      fetchTrips(params)\n    },\n    [fetchTrips]\n  )\n  useEffect(() => {\n    const {\n      stages = [],\n      tags = [],\n      hotels_not_booked = false,\n      ...otherParams\n    } = params\n    getTrips({\n      stages: stages.map(s => s.name),\n      tags: tags.map(t => t.name),\n      hotels_not_booked: Number(hotels_not_booked),\n      ...otherParams,\n      page: 1,\n    })\n  }, [params, getTrips])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>List of trips</title>\n      </Helmet>\n      <div>\n        <Link to=\"new\" className=\"float-right btn\">\n          Add New Trip\n        </Link>\n        <h2>List of Trips</h2>\n      </div>\n      <hr />\n      <Grid>\n        <Col>\n          <Search\n            placeholder=\"Search by id, destination...\"\n            onSearch={newParams => {\n              setParams({ ...params, ...newParams })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getTrips({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Grid>\n        <Col md=\"auto\">\n          <Filters\n            onChange={({\n              stages = [],\n              tags = [],\n              hotels_not_booked = false,\n              ...otherParams\n            }) => {\n              setParams({\n                ...params,\n                stages,\n                tags,\n                hotels_not_booked,\n                ...otherParams,\n              })\n            }}\n          />\n        </Col>\n        <Col>\n          <Listable total={total} isFetching={isFetching}>\n            <Table\n              striped\n              bordered\n              responsive\n              headers={[\"Destinations\", \"Dates\", \"Traveler\", \"Stage\", \"Owners\"]}\n              rows={trips.map(trip => {\n                const {\n                  id,\n                  trip_source,\n                  trip_id,\n                  locations,\n                  no_of_adults,\n                  children,\n                  contact,\n                  latest_stage,\n                  created_by,\n                  created_at,\n                  latest_given_quote,\n                  sales_team = [],\n                  operations_team = [],\n                  converted_at,\n                } = trip\n                const start_date = moment.utc(trip.start_date)\n                const end_date = moment.utc(trip.end_date)\n                const no_of_nights = end_date.diff(start_date, \"days\")\n                return [\n                  <div>\n                    <div>\n                      <Link to={id.toString()}>\n                        <span>\n                          {locations.map(l => l.short_name).join(\" • \")}\n                        </span>\n                        {latest_given_quote &&\n                        latest_given_quote.locations.length ? (\n                          <span className=\"text-gray-600\">\n                            <br />\n                            <small>\n                              (\n                              {latest_given_quote.locations\n                                .map(l => l.short_name)\n                                .join(\"-\")}\n                              )\n                            </small>\n                          </span>\n                        ) : null}\n                        <br />\n                        <span className=\"text-black\">\n                          {trip_id || id}-{trip_source.short_name}\n                        </span>\n                      </Link>\n                    </div>\n                  </div>,\n                  <div>\n                    <div>\n                      {joinAttributes(\n                        start_date.format(\"Do MMM, YYYY\"),\n                        pluralize(\"Night\", no_of_nights, true)\n                      )}\n                    </div>\n                    <small className=\"text-gray-600\">\n                      (\n                      {moment.utc().isBefore(start_date)\n                        ? `${moment\n                            .utc(start_date)\n                            .local()\n                            .diff(moment(), \"days\")} days remaining`\n                        : moment.utc().isAfter(end_date)\n                        ? `${moment.utc().diff(end_date, \"days\")} days ago`\n                        : \"On Trip\"}\n                      )\n                    </small>\n                  </div>,\n                  contact ? (\n                    <div>\n                      <div>\n                        {pluralize(\"Adult\", no_of_adults, true)}\n                        {children ? ` with ${children} children` : \"\"}\n                      </div>\n                      <div className=\"text-gray-600\">{contact.name}</div>\n                      <small>\n                        {joinAttributes(\n                          [\n                            contact.phone_number,\n                            <a\n                              href={`tel:${contact.phone_number}`}\n                              className=\"text-gray-600\"\n                            >\n                              {contact.phone_number}\n                            </a>,\n                          ],\n                          [\n                            contact.email,\n                            <a\n                              href={`mailto:${contact.email}`}\n                              className=\"text-gray-600\"\n                            >\n                              {contact.email}\n                            </a>,\n                          ]\n                        )}\n                      </small>\n                    </div>\n                  ) : null,\n                  <div>\n                    <div>{latest_stage ? latest_stage.name : \"Initiated\"}</div>\n                    <small>\n                      {latest_given_quote ? (\n                        <span>\n                          <Badge primary={!!converted_at}>\n                            <Icons.RupeeIcon />{\" \"}\n                            {numberToLocalString(\n                              latest_given_quote.given_price\n                            )}\n                          </Badge>{\" \"}\n                          by {latest_given_quote.created_by.name}\n                          {\" • \"}\n                          {moment\n                            .utc(created_at)\n                            .local()\n                            .fromNow()}\n                        </span>\n                      ) : (\n                        <span>\n                          Initiated by {created_by.name} •{\" \"}\n                          {moment\n                            .utc(created_at)\n                            .local()\n                            .fromNow()}\n                        </span>\n                      )}\n                    </small>\n                  </div>,\n                  <div>\n                    {sales_team\n                      .concat(operations_team)\n                      .map(user => user.name)\n                      .join(\" • \")}\n                  </div>,\n                ]\n              })}\n            />\n          </Listable>\n        </Col>\n      </Grid>\n    </Fragment>\n  )\n}\n\ninterface FilterProps {\n  label?: string\n  onChange: (filters: IFilters) => void\n}\n\nfunction Filters({ label = \"Filters\", onChange }: FilterProps) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        onChange(values)\n      }}\n      render={({ setFieldValue }) => (\n        <Form noValidate>\n          <h5 className=\"mb-4 border-b\">{label}</h5>\n          <FormikFormGroup\n            name=\"stages\"\n            render={({ field }) => (\n              <SelectTripStages\n                {...field}\n                label=\"Trip Stage\"\n                fetchOnMount\n                placeholder=\"Select stage(s)...\"\n                onChange={(value, name) => setFieldValue(name, value)}\n              />\n            )}\n          />\n          <FormikFormGroup\n            name=\"tags\"\n            render={({ field }) => (\n              <SelectTags\n                {...field}\n                type=\"trip\"\n                label=\"Tags\"\n                placeholder=\"Search and select tag(s)...\"\n                onChange={(value, name) => setFieldValue(name, value)}\n              />\n            )}\n          />\n          <InputField\n            name=\"hotels_not_booked\"\n            type=\"checkbox\"\n            label=\"Hotels Not Booked\"\n          />\n          <OnFormChange\n            onChange={({ values }) => {\n              onChange(values)\n            }}\n          />\n          <Button type=\"submit\">Filter</Button>\n        </Form>\n      )}\n    />\n  )\n}\n","import React, { useState } from \"react\"\n\nexport interface ComponentProps<\n  TState,\n  TChildProps = { state: TState; setState: (state: TState) => void }\n> {\n  initialState: TState\n  children?: React.ReactNode | ((props: TChildProps) => React.ReactNode)\n  render?: (props: TChildProps) => React.ReactNode\n}\n\nexport default function Component<TState>({\n  initialState,\n  render,\n  children,\n}: ComponentProps<TState>) {\n  const [state, setState] = useState<TState>(initialState)\n  const childProps = {\n    state,\n    setState,\n  }\n  return render\n    ? render(childProps)\n    : typeof children === \"function\"\n    ? children(childProps)\n    : children || null\n}\n","import React, { useEffect, useState, Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport {\n  Button,\n  Icons,\n  Table,\n  useFetchState,\n  Dialog,\n  useDialog,\n  ButtonGroup,\n  Badge,\n  InputGroup,\n  InputGroupAddon,\n} from \"@tourepedia/ui\"\nimport { Formik, Form } from \"formik\"\nimport * as Validator from \"yup\"\nimport moment from \"moment\"\nimport { $PropertyType } from \"utility-types\"\n\nimport { ITrip, IQuote, IGivenQuote } from \"./store\"\nimport { useXHR } from \"./../xhr\"\nimport { InputField, Input } from \"./../Shared/InputField\"\nimport Spinner from \"./../Shared/Spinner\"\nimport { numberToLocalString } from \"../utils\"\nimport Component from \"../Shared/Component\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\ninterface IInstalment {\n  amount: number\n  due_date: string\n}\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getQuotes(tripId: number | string, params?: any): Promise<IQuote[]> {\n      return xhr\n        .get(`/trips/${tripId}/quotes`, { params })\n        .then(resp => resp.data.data)\n    },\n    async giveQuote(data: any): Promise<IGivenQuote> {\n      return xhr.post(`/given-quotes`, data).then(resp => resp.data.data)\n    },\n    async getInstalments(\n      quoteId: number\n    ): Promise<{\n      data: IInstalment[]\n      meta: { total: number }\n    }> {\n      return xhr.get(`/quote-instalments/${quoteId}`).then(resp => resp.data)\n    },\n  }\n}\n\nconst giveQuoteSchema = Validator.object()\n  .shape({\n    given_price: Validator.number()\n      .positive(\"Given price should a positive number\")\n      .required(\"Give price field is required\"),\n    comments: Validator.string(),\n  })\n  .required(\"Quote data is required\")\n\nexport function Quote({\n  quote,\n  readOnly = false,\n  navigate,\n  showHotelBookingStatus,\n}: {\n  quote: IQuote\n  readOnly?: boolean\n  navigate?: $PropertyType<RouteComponentProps, \"navigate\">\n  showHotelBookingStatus?: boolean\n}) {\n  const xhr = useXHR()\n  const {\n    id,\n    total_price,\n    hotels,\n    hotel_extras,\n    cabs,\n    transport_extras,\n    other_extras,\n    comments,\n    created_by,\n    created_at,\n    trip_id,\n  } = quote\n  const [showGiveQuote, open, close] = useDialog()\n  const [\n    instalments,\n    fetchInstalments,\n    { isFetching: isFetchingInstalments },\n  ] = useFetchState<IInstalment[]>(() =>\n    XHR(xhr)\n      .getInstalments(id)\n      .then(resp => resp.data)\n  )\n  function giveQuote(\n    quoteId: number,\n    givenPrice: number,\n    comments?: string\n  ): Promise<any> {\n    return XHR(xhr).giveQuote({\n      given_price: givenPrice,\n      quote_id: quoteId,\n      comments,\n    })\n  }\n  return (\n    <div>\n      <header className=\"mb-4\">\n        <h6>\n          Cost Price: <Icons.RupeeIcon /> {numberToLocalString(total_price)} /-\n        </h6>\n        <blockquote>\n          {comments ? <p>{comments}</p> : null}\n          <em>\n            on{\" \"}\n            {moment\n              .utc(created_at)\n              .local()\n              .format(\"DD MMM, YYYY [at] hh:mm A\")}{\" \"}\n            by {created_by.name}&lt;{created_by.email}&gt;\n          </em>\n        </blockquote>\n      </header>\n      {hotels.length || hotel_extras.length ? (\n        <section>\n          <div className=\"flex\">\n            <span className=\"inline-flex w-8 h-8 align-items-center justify-content-center bg-primary-100 rounded-full mr-2\">\n              <Icons.BedIcon />\n            </span>\n            <div className=\"w-full\">\n              {hotels.length ? (\n                <div>\n                  <h6>Accommodation</h6>\n                  <Table\n                    striped\n                    bordered\n                    caption={\n                      \"Bellow are the details of daywise hotel accomodation and their prices\"\n                    }\n                    responsive\n                    headers={[\n                      \"Date\",\n                      \"Hotel\",\n                      \"Meal Plan\",\n                      \"Rooms\",\n                      \"Price\",\n                    ].concat(showHotelBookingStatus ? [\"Booking Stage\"] : [])}\n                    alignCols={{ 4: \"right\", 5: \"center\" }}\n                    rows={hotels.map(quoteHotel => {\n                      const {\n                        hotel,\n                        checkin,\n                        checkout,\n                        meal_plan,\n                        room_type,\n                        no_of_rooms,\n                        comments,\n                        given_price,\n                        latest_booking_stage,\n                      } = quoteHotel\n                      return [\n                        <span className=\"whitespace-pre\">\n                          {moment\n                            .utc(checkin)\n                            .local()\n                            .format(\"DD MMM YYYY\")}\n                          <br />\n                          <small>\n                            {moment\n                              .utc(checkout)\n                              .diff(moment.utc(checkin), \"days\") + 1}{\" \"}\n                            Nights\n                          </small>\n                        </span>,\n                        <div>\n                          <b>{hotel.name}</b>\n                          <br />\n                          <small>\n                            {hotel.location.short_name}, {hotel.stars} Star\n                          </small>\n                          {comments ? (\n                            <blockquote>{comments}</blockquote>\n                          ) : null}\n                        </div>,\n                        meal_plan.name,\n                        <div>\n                          {room_type.name}\n                          <br />\n                          <small>{no_of_rooms} Rooms</small>\n                        </div>,\n                        numberToLocalString(given_price),\n                      ].concat(\n                        showHotelBookingStatus\n                          ? [\n                              <span>\n                                {latest_booking_stage\n                                  ? latest_booking_stage.name\n                                  : \"Pending\"}\n                              </span>,\n                            ]\n                          : []\n                      )\n                    })}\n                  />\n                </div>\n              ) : null}\n              {hotel_extras.length ? (\n                <div>\n                  <h6>Hotel Extra Services</h6>\n                  <Table\n                    striped\n                    bordered\n                    caption={\"Extras services for hotels\"}\n                    responsive\n                    headers={[\"Service\", \"Date\", \"Hotel\", \"Price\"]}\n                    alignCols={{ 3: \"right\" }}\n                    rows={hotel_extras.map(\n                      ({ service, date, hotel, given_price, comments }) => [\n                        <div>\n                          <div>{service.name}</div>\n                          {comments ? (\n                            <blockquote>{comments}</blockquote>\n                          ) : null}\n                        </div>,\n                        date ? (\n                          <span className=\"whitespace-pre\">\n                            {moment\n                              .utc(date)\n                              .local()\n                              .format(\"DD MMM YYYY\")}{\" \"}\n                          </span>\n                        ) : null,\n                        hotel && hotel.name,\n                        numberToLocalString(given_price),\n                      ]\n                    )}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </section>\n      ) : null}\n      {cabs.length || transport_extras.length ? (\n        <section>\n          <div className=\"flex\">\n            <span className=\"inline-flex w-8 h-8 align-items-center justify-content-center bg-primary-100 rounded-full mr-2\">\n              <Icons.BusIcon />\n            </span>\n            <div className=\"w-full\">\n              {cabs.length ? (\n                <div>\n                  <h6>Transportation</h6>\n                  <Table\n                    striped\n                    bordered\n                    caption={\n                      \"Bellow are the details for the daywise transportation and their prices\"\n                    }\n                    responsive\n                    headers={[\"Date\", \"Service\", \"Cabs\", \"Price\"]}\n                    alignCols={{ 3: \"right\" }}\n                    rows={cabs.map(\n                      ({\n                        from_date,\n                        to_date,\n                        cab_type,\n                        transport_service,\n                        cab_locality,\n                        no_of_cabs,\n                        comments,\n                        given_price,\n                      }) => [\n                        <span className=\"whitespace-pre\">\n                          {moment\n                            .utc(from_date)\n                            .local()\n                            .format(\"DD MMM YYYY\")}{\" \"}\n                          <br />\n                          <small>\n                            {moment\n                              .utc(to_date)\n                              .diff(moment.utc(from_date), \"days\") + 1}{\" \"}\n                            Days\n                          </small>\n                        </span>,\n                        <div>\n                          {transport_service.name}\n                          {comments ? (\n                            <blockquote>{comments}</blockquote>\n                          ) : null}\n                        </div>,\n                        <div>\n                          {cab_type.name}\n                          <br />\n                          <small>{no_of_cabs} cabs</small>\n                          {cab_locality ? (\n                            <span>\n                              {\" \"}\n                              • <small>{cab_locality.name}</small>\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </div>,\n                        numberToLocalString(given_price),\n                      ]\n                    )}\n                  />\n                </div>\n              ) : null}\n              {transport_extras.length ? (\n                <div>\n                  <h6>Transport Extra Services</h6>\n                  <Table\n                    striped\n                    bordered\n                    caption={\"Extras services for Transportation\"}\n                    responsive\n                    headers={[\"Service\", \"Date\", \"Price\"]}\n                    alignCols={{ 2: \"right\" }}\n                    rows={transport_extras.map(\n                      ({ service, date, given_price, comments }) => [\n                        <div>\n                          <div>{service.name}</div>\n                          {comments ? (\n                            <blockquote>{comments}</blockquote>\n                          ) : null}\n                        </div>,\n                        date ? (\n                          <span className=\"whitespace-pre\">\n                            {moment\n                              .utc(date)\n                              .local()\n                              .format(\"DD MMM YYYY\")}{\" \"}\n                          </span>\n                        ) : null,\n                        numberToLocalString(given_price),\n                      ]\n                    )}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </section>\n      ) : null}\n      {other_extras.length ? (\n        <section>\n          <div className=\"flex\">\n            <span className=\"inline-flex w-8 h-8 align-items-center justify-content-center bg-primary-100 rounded-full mr-2\">\n              <Icons.StarEmptyIcon />\n            </span>\n            <div className=\"w-full\">\n              <h6>Other Services</h6>\n              <Table\n                striped\n                bordered\n                caption={\"Other Services provided with this quote\"}\n                responsive\n                headers={[\"Service\", \"Date\", \"Price\"]}\n                alignCols={{ 2: \"right\" }}\n                rows={other_extras.map(\n                  ({ service, date, given_price, comments }) => [\n                    <div>\n                      <div>{service.name}</div>\n                      {comments ? <blockquote>{comments}</blockquote> : null}\n                    </div>,\n                    date ? (\n                      <span className=\"whitespace-pre\">\n                        {moment\n                          .utc(date)\n                          .local()\n                          .format(\"DD MMM YYYY\")}{\" \"}\n                      </span>\n                    ) : null,\n                    numberToLocalString(given_price),\n                  ]\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      ) : null}\n      {!readOnly ? (\n        <div>\n          <ButtonGroup>\n            <Button onClick={open}>Give this quote</Button>\n            <Dialog open={showGiveQuote} onClose={close}>\n              <Dialog.Header>\n                <Dialog.Title as=\"h4\">\n                  Give this quote (price: {quote.total_price})\n                </Dialog.Title>\n              </Dialog.Header>\n              <Dialog.Body>\n                <Formik\n                  initialValues={{\n                    comments: \"\",\n                    factor: 1.3,\n                    given_price: Math.ceil(quote.total_price * 1.3),\n                  }}\n                  validationSchema={giveQuoteSchema}\n                  onSubmit={(values, actions) => {\n                    if (\n                      window.confirm(\n                        \"Are you sure you want to give this quote to the customer?\"\n                      )\n                    ) {\n                      giveQuote(id, values.given_price, values.comments)\n                        .then(close)\n                        .then(() => {\n                          navigate && navigate(\"../given-quotes\")\n                        })\n                    } else {\n                      actions.setSubmitting(false)\n                    }\n                  }}\n                  render={({ isSubmitting, setFieldValue, values }) => (\n                    <Form noValidate>\n                      <Grid>\n                        <Col>\n                          <InputField\n                            label=\"Multiplication Factor\"\n                            name=\"factor\"\n                            type=\"number\"\n                            step={0.01}\n                            onChange={e => {\n                              setFieldValue(\n                                \"given_price\",\n                                Math.ceil(\n                                  quote.total_price *\n                                    parseFloat(e.currentTarget.value)\n                                )\n                              )\n                              setFieldValue(\n                                e.currentTarget.name,\n                                e.currentTarget.value\n                              )\n                            }}\n                          />\n                          <InputField\n                            name=\"given_price\"\n                            label=\"Given Price\"\n                            type=\"number\"\n                          />\n                        </Col>\n                        <Col>\n                          <Component initialState={15}>\n                            {({ state, setState }) => {\n                              const profitValue = Number(\n                                Number(\n                                  values.given_price -\n                                    quote.total_price -\n                                    (values.given_price * state) / 100\n                                ).toFixed(2)\n                              )\n                              const effectiveFactor = Number(\n                                (profitValue + quote.total_price) /\n                                  quote.total_price\n                              ).toFixed(2)\n                              return (\n                                <div className=\"form-group\">\n                                  <div className=\"pb-2\">\n                                    See effective factor and profit (after\n                                    commission)\n                                  </div>\n                                  <label htmlFor=\"commission_factor\">\n                                    Any commission\n                                  </label>\n                                  <InputGroup>\n                                    <Input\n                                      value={state}\n                                      type=\"number\"\n                                      id=\"commission_factor\"\n                                      min={0}\n                                      max={100}\n                                      onChange={e =>\n                                        setState(\n                                          Math.max(\n                                            Math.min(\n                                              parseFloat(\n                                                e.currentTarget.value || \"0\"\n                                              ),\n                                              100\n                                            ),\n                                            0\n                                          )\n                                        )\n                                      }\n                                    />\n                                    <InputGroupAddon>%</InputGroupAddon>\n                                  </InputGroup>\n                                  <div className=\"mt-2\">\n                                    Effective Factor: {effectiveFactor}\n                                    <br />\n                                    Profit:{\" \"}\n                                    <Badge primary>\n                                      <Icons.RupeeIcon />{\" \"}\n                                      {numberToLocalString(profitValue)}\n                                    </Badge>\n                                  </div>\n                                </div>\n                              )\n                            }}\n                          </Component>\n                        </Col>\n                      </Grid>\n                      <InputField\n                        name=\"comments\"\n                        as=\"textarea\"\n                        label=\"Any Comments\"\n                        placeholder=\"Write comments regarding prices or anything else...\"\n                      />\n                      <Dialog.Footer>\n                        <Button primary type=\"submit\" disabled={isSubmitting}>\n                          Give Quote\n                        </Button>\n                        <Button onClick={close} className=\"btn--secondary\">\n                          Cancel\n                        </Button>\n                      </Dialog.Footer>\n                    </Form>\n                  )}\n                />\n              </Dialog.Body>\n            </Dialog>\n            <Button onClick={fetchInstalments}>\n              Get Instalments for Hotels and Cabs{\" \"}\n              {isFetchingInstalments ? <Spinner /> : null}\n            </Button>\n            <Link\n              to={`/trips/${trip_id}/new-quote`}\n              state={{ quote }}\n              className=\"btn\"\n            >\n              Edit\n            </Link>\n          </ButtonGroup>\n          {instalments ? (\n            <Table\n              striped\n              bordered\n              headers={[\"Amount\", \"Due Date\"]}\n              alignCols={{ 0: \"right\" }}\n              autoWidth\n              rows={instalments.map(i => [\n                i.amount.toFixed(2),\n                moment\n                  .utc(i.due_date)\n                  .local()\n                  .format(\"DD/MM/YYYY\"),\n              ])}\n            />\n          ) : null}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\ninterface QuotesProps extends RouteComponentProps {\n  trip: ITrip\n}\n\nexport default function Quotes({ trip, navigate }: QuotesProps) {\n  const xhr = useXHR()\n  const [quotes, setQuotes] = useState<IQuote[]>([])\n  function getQuotes() {\n    XHR(xhr)\n      .getQuotes(trip.id)\n      .then(setQuotes)\n  }\n  useEffect(() => {\n    getQuotes()\n  }, [])\n  return (\n    <div className=\"mt-4\">\n      {quotes.length === 0 ? (\n        <p className=\"text-center\">No quote created for this trip</p>\n      ) : (\n        <ol>\n          {quotes.map(quote => (\n            <li key={quote.id} className=\"p-4 shadow rounded mb-8 bg-white\">\n              <Quote\n                quote={quote}\n                navigate={navigate}\n                readOnly={!!trip.converted_at}\n              />\n            </li>\n          ))}\n        </ol>\n      )}\n    </div>\n  )\n}\n","import React, { useEffect, useState, Fragment } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\n\nimport { ITrip, IGivenQuote } from \"./store\"\nimport { useXHR } from \"./../xhr\"\nimport { Quote } from \"./Quotes\"\nimport { Button, Table, useFetchState, Icons } from \"@tourepedia/ui\"\nimport Spinner from \"./../Shared/Spinner\"\nimport { numberToLocalString } from \"../utils\"\n\nexport interface IInstalment {\n  amount: number\n  due_date: string\n}\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getGivenQuotes(params?: any): Promise<IGivenQuote[]> {\n      return xhr.get(\"/given-quotes\", { params }).then(resp => resp.data.data)\n    },\n    async getInstalments(\n      givenQuoteId: number\n    ): Promise<{\n      data: IInstalment[]\n      meta: { total: number }\n    }> {\n      return xhr\n        .get(`/given-quote-instalments/${givenQuoteId}`)\n        .then(resp => resp.data)\n    },\n  }\n}\n\nexport function GivenQuote({\n  givenQuote,\n  readOnly,\n  showHotelBookingStatus,\n}: {\n  givenQuote: IGivenQuote\n  readOnly?: boolean\n  showHotelBookingStatus?: boolean\n}) {\n  const xhr = useXHR()\n  const {\n    id,\n    given_price,\n    quote,\n    comments,\n    created_by,\n    created_at,\n  } = givenQuote\n  const [\n    instalments,\n    fetchInstalments,\n    { isFetching: isFetchingInstalments },\n  ] = useFetchState<IInstalment[]>(() =>\n    XHR(xhr)\n      .getInstalments(id)\n      .then(resp => resp.data)\n  )\n  return (\n    <div>\n      <header className=\"mb-8\">\n        <h5>\n          Given Price:{\" \"}\n          <mark>\n            <Icons.RupeeIcon /> {numberToLocalString(given_price)} /-\n          </mark>\n        </h5>\n        <blockquote>\n          {comments ? <p>{comments}</p> : null}\n          <em>\n            on{\" \"}\n            {moment\n              .utc(created_at)\n              .local()\n              .format(\"DD MMM, YYYY [at] hh:mm A\")}{\" \"}\n            by {created_by.name}&lt;{created_by.email}&gt;\n          </em>\n        </blockquote>\n      </header>\n      <Quote\n        quote={quote}\n        readOnly\n        showHotelBookingStatus={showHotelBookingStatus}\n      />\n      {readOnly ? null : (\n        <Button onClick={fetchInstalments}>\n          Get Instalments for Customer{\" \"}\n          {isFetchingInstalments ? <Spinner /> : null}\n        </Button>\n      )}\n      {instalments ? (\n        <Table\n          striped\n          bordered\n          headers={[\"Amount\", \"Due Date\"]}\n          alignCols={{ 0: \"right\" }}\n          autoWidth\n          rows={instalments.map(i => [\n            i.amount.toFixed(2),\n            moment\n              .utc(i.due_date)\n              .local()\n              .format(\"DD/MM/YYYY\"),\n          ])}\n        />\n      ) : null}\n    </div>\n  )\n}\n\ninterface QuotesProps extends RouteComponentProps {\n  trip: ITrip\n}\nexport default function Quotes({ trip }: QuotesProps) {\n  const [givenQuotes, setGivenQuotes] = useState<IGivenQuote[]>([])\n  const xhr = useXHR()\n  function getGivenQuotes() {\n    XHR(xhr)\n      .getGivenQuotes({ trip_id: trip.id })\n      .then(setGivenQuotes)\n  }\n  useEffect(() => {\n    getGivenQuotes()\n  }, [])\n  return (\n    <div className=\"mt-4\">\n      {givenQuotes.length === 0 ? (\n        <p className=\"text-center\">No quote given yet</p>\n      ) : (\n        <ol>\n          {givenQuotes.map(givenQuote => (\n            <li\n              key={givenQuote.id}\n              className=\"p-4 shadow rounded mb-8 bg-white\"\n            >\n              <GivenQuote givenQuote={givenQuote} />\n            </li>\n          ))}\n        </ol>\n      )}\n    </div>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IMeta,\n  IModelState,\n  createReducer,\n} from \"./../model\"\nimport { store as transportServiceStore } from \"./../TransportServices\"\nimport { store as cabTypeStore } from \"./../CabTypes\"\nimport { store as transportLocationStore } from \"./../TransportLocations\"\n\nexport const key = \"TRANSPORT_SERVICE_PRICES_STATE\"\n\nexport interface ITransportServicePrice extends IBaseItem {\n  id: number\n  start_date: string\n  end_date: string\n  cab_type_id: number\n  cab_type: cabTypeStore.ICabType\n  transport_service_id: number\n  transport_service: transportServiceStore.ITransportService\n  cab_locality_id?: number\n  cab_locality?: transportLocationStore.ITransportLocation\n  per_day_charges?: number\n  per_day_parking_charges?: number\n  price?: number\n  per_km_charges?: number\n  minimum_km_per_day?: number\n  toll_charges: number\n  parking_charges: number\n  night_charges: number\n}\n\nexport interface ITransportServicePrices\n  extends IBaseState<ITransportServicePrice> {}\n\nexport interface IState extends IModelState<ITransportServicePrice> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ITransportServicePrice>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@TRANSPORT_SERVICE_PRICES/LIST_FETCH_REQUEST\",\n    \"@TRANSPORT_SERVICE_PRICES/LIST_FETCH_SUCCESS\",\n    \"@TRANSPORT_SERVICE_PRICES/LIST_FETCH_FAILED\"\n  )<undefined, { data: ITransportServicePrice[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<ITransportServicePrice, IState>(\n  INITIAL_STATE,\n  actions as any\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model<ITransportServicePrice>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport {\n  ITransportServicePrice,\n  actions,\n  selectors,\n  IStateWithKey,\n} from \"./store\"\nimport { ThunkAction } from \"../types\"\nimport Helmet from \"react-helmet-async\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch, numberToLocalString } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTransportServicePrices(\n      params?: any\n    ): Promise<{ data: ITransportServicePrice[]; meta: any }> {\n      return xhr.get(\"/cab-prices\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getTransportServicePricesAction = (\n  params?: any\n): ThunkAction<Promise<ITransportServicePrice[]>> => async (\n  dispatch,\n  _,\n  { xhr }\n) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getTransportServicePrices(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useTransportServicePricesState() {\n  interface StateProps extends IPaginate {\n    transportServicePrices: ITransportServicePrice[]\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const transportServicePricesSelector = selectors(state)\n    return {\n      ...transportServicePricesSelector.meta,\n      isFetching: transportServicePricesSelector.isFetching,\n      transportServicePrices: transportServicePricesSelector.get(),\n    }\n  })\n}\nfunction useTransportServicePricesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback(\n    (params?: any) => dispatch(getTransportServicePricesAction(params)),\n    [dispatch]\n  )\n}\n\nfunction useTransportServicePrices() {\n  const state = useTransportServicePricesState()\n  const fetchTransportServicePrices = useTransportServicePricesFetch()\n  return {\n    ...state,\n    fetchTransportServicePrices,\n  }\n}\nexport default function List(_: RouteComponentProps) {\n  const {\n    fetchTransportServicePrices,\n    transportServicePrices,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useTransportServicePrices()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    fetchTransportServicePrices({ page: currentPage })\n  }, [fetchTransportServicePrices])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Transport Service Prices Listing</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              fetchTransportServicePrices({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => {\n              fetchTransportServicePrices({ ...params, page })\n            }}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          bordered\n          striped\n          responsive\n          headers={[\n            \"Start Date\",\n            \"End Date\",\n            \"Cab Type\",\n            \"Service\",\n            \"Locality\",\n            \"Per Day\",\n            \"Per Day Parking\",\n            \"Fixed\",\n            \"/km\",\n            \"Toll\",\n            \"Parking\",\n            \"Night\",\n            \"Min Km/Day\",\n          ]}\n          rows={transportServicePrices.map(\n            ({\n              start_date,\n              end_date,\n              cab_type,\n              cab_locality,\n              transport_service,\n              per_day_charges,\n              per_day_parking_charges,\n              price,\n              per_km_charges,\n              minimum_km_per_day,\n              night_charges,\n              parking_charges,\n              toll_charges,\n            }) => [\n              moment\n                .utc(start_date)\n                .local()\n                .format(\"DD/MM/YYYY\"),\n              moment\n                .utc(end_date)\n                .local()\n                .format(\"DD/MM/YYYY\"),\n              cab_type.name,\n              transport_service.name,\n              cab_locality ? cab_locality.name : \"\",\n              numberToLocalString(per_day_charges),\n              numberToLocalString(per_day_parking_charges),\n              numberToLocalString(price),\n              per_km_charges,\n              toll_charges,\n              parking_charges,\n              night_charges,\n              numberToLocalString(minimum_km_per_day),\n            ]\n          )}\n          alignCols={{\n            4: \"right\",\n            5: \"right\",\n            6: \"right\",\n            7: \"right\",\n            8: \"right\",\n            9: \"right\",\n          }}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Form, Formik } from \"formik\"\nimport { InputField } from \"../Shared/InputField\"\nimport { Button } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\n\nconst initialValues = {\n  timezone_offset: new Date().getTimezoneOffset(),\n  file: \"\",\n  file_name: \"\",\n}\n\nconst validationSchema = Validator.object().shape({\n  timezone_offset: Validator.string().required(),\n  file: Validator.mixed().required(\"File field is required\"),\n  file_name: Validator.string().required(\"File field is required\"),\n})\n\ninterface UploadPricesProps extends RouteComponentProps, XHRProps {}\n\nconst UploadPrices = withXHR(function UploadPrices({\n  xhr,\n  navigate,\n}: UploadPricesProps) {\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) => {\n          const data = new FormData()\n          data.set(\"timezone_offset\", values.timezone_offset.toString())\n          data.set(\"file\", values.file)\n          xhr\n            .post(\"/cab-prices\", data, {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            })\n            .then(resp => {\n              navigate && navigate(\"..\")\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n            .then(() => {\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({ setFieldValue, isSubmitting, status }) => (\n          <Form noValidate encType=\"multipart/form-data\">\n            <fieldset>\n              <legend>Upload file to add cab prices</legend>\n              {status ? <p className=\"text-red-700\">{status}</p> : null}\n              <InputField\n                label=\"Select a csv file\"\n                name=\"file_name\"\n                type=\"file\"\n                accept=\".csv\"\n                onChange={({ currentTarget }) => {\n                  setFieldValue(\n                    \"file\",\n                    currentTarget.files ? currentTarget.files[0] : \"\"\n                  )\n                  setFieldValue(currentTarget.name, currentTarget.value)\n                }}\n              />\n              <footer>\n                <Button type=\"submit\" disabled={isSubmitting} primary>\n                  Upload\n                </Button>\n                <Link className=\"btn\" to=\"..\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </div>\n  )\n})\n\nexport default UploadPrices\n","import React from \"react\"\nimport { XHRProps, withXHR } from \"../xhr\"\nimport { AsyncProps } from \"@tourepedia/select\"\nimport { AsyncSelect } from \"@tourepedia/ui\"\nimport { AxiosInstance } from \"axios\"\nimport { ITransportLocation } from \"./store\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTransportLocations(\n      params?: any\n    ): Promise<{ data: Array<ITransportLocation> }> {\n      return xhr.get(`/transport-locations`, { params }).then(resp => resp.data)\n    },\n  }\n}\n\ninterface SelectProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectTransportLocations = withXHR(\n  function SelectTransportLocations({ xhr, ...otherProps }: SelectProps) {\n    return (\n      <AsyncSelect\n        multiple\n        creatable\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getTransportLocations({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import { createAsyncAction, getType, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IModelState,\n  IMeta,\n  createReducer,\n} from \"./../model\"\nimport { store as locationStore } from \"./../TransportLocations\"\n\nexport const key = \"TRANSPORT_SERVICES_STATE\"\n\nexport interface ITransportService extends IBaseItem {\n  id: number\n  distance: number\n  name: string\n  locations: locationStore.ITransportLocation[]\n  comments: string\n}\n\nexport interface ITransportServices extends IBaseState<ITransportService> {}\n\nexport interface IState extends IModelState<ITransportService> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ITransportService>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@TRANSPORT_SERVICES/LIST_FETCH_REQUEST\",\n    \"@TRANSPORT_SERVICES/LIST_FETCH_SUCCESS\",\n    \"@TRANSPORT_SERVICES/LIST_FETCH_FAILED\"\n  )<undefined, { data: ITransportService[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { ITransportService, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTransportServices(\n      params?: any\n    ): Promise<{ data: ITransportService[]; meta: any }> {\n      return xhr.get(\"/transport-services\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getTransportServicesAction = (\n  params?: any\n): ThunkAction<Promise<ITransportService[]>> => async (\n  dispatch,\n  _,\n  { xhr }\n) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getTransportServices(params)\n    .then(data => {\n      dispatch(actions.list.success(data))\n      return data.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useTransportServicesState() {\n  interface StateProps extends IPaginate {\n    transportServices: ITransportService[]\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const transportServicesSelector = selectors(state)\n    return {\n      ...transportServicesSelector.meta,\n      isFetching: transportServicesSelector.isFetching,\n      transportServices: transportServicesSelector.get(),\n    }\n  })\n}\n\nfunction useTransportServicesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback(\n    (params?: any) => dispatch(getTransportServicesAction(params)),\n    [dispatch]\n  )\n}\n\nfunction useTransportServices() {\n  const state = useTransportServicesState()\n  const fetchTransportServices = useTransportServicesFetch()\n  return {\n    ...state,\n    fetchTransportServices,\n  }\n}\n\nexport default function List({  }: RouteComponentProps) {\n  const {\n    fetchTransportServices: getTransportServices,\n    transportServices,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useTransportServices()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getTransportServices({ page: currentPage })\n  }, [getTransportServices])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Transport Services List</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getTransportServices({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            isFetching={isFetching}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            onChange={page => getTransportServices({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          responsive\n          striped\n          bordered\n          headers={[\"Destinations\", \"Distance (kms)\"]}\n          alignCols={{ 1: \"right\" }}\n          rows={transportServices.map(({ name, comments, distance }) => [\n            <div>\n              {name}\n              {comments ? <blockquote>{comments}</blockquote> : null}\n            </div>,\n            distance,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectTransportServicesProps\n  extends XHRProps,\n    Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectTransportServices = withXHR<SelectTransportServicesProps>(\n  function SelectTransportServices({\n    xhr,\n    ...otherProps\n  }: SelectTransportServicesProps) {\n    return (\n      <Async\n        multiple\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getTransportServices({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, FormikProps, FormikActions, Form, FieldArray } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\n\nimport { InputField, FormikFormGroup } from \"./../Shared/InputField\"\nimport {\n  SelectTransportLocations,\n  store as locationStore,\n} from \"./../TransportLocations\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport Helmet from \"react-helmet-async\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\nconst validationSchema = Validator.object().shape({\n  via: Validator.array()\n    .of(Validator.object().required(\"Destination is required\"))\n    .min(1, \"Atleast one locations required\")\n    .required(\"Via field is required\"),\n  is_sightseeing: Validator.boolean(),\n  distance: Validator.number()\n    .positive(\"Distance should be a positive number\")\n    .integer(\"Distance should be an integer\")\n    .required(\"Distance field is required\"),\n  comments: Validator.string(),\n})\n\ninterface NewServiceCredentials {\n  via: locationStore.ITransportLocation[]\n  is_sightseeing?: boolean\n  distance: number\n  comments?: string\n}\n\nconst initialValues: NewServiceCredentials = {\n  via: [undefined as any],\n  is_sightseeing: false,\n  distance: 0,\n  comments: \"\",\n}\n\ninterface NewServicesProps extends RouteComponentProps, XHRProps {}\nfunction NewServices({ xhr, navigate }: NewServicesProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Add New Transport Service</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (\n          values: NewServiceCredentials,\n          actions: FormikActions<NewServiceCredentials>\n        ) => {\n          actions.setStatus()\n          const { via, is_sightseeing, ...otherData } = values\n          return xhr\n            .post(\"/transport-services\", {\n              ...otherData,\n              via: via.map(location => location.name),\n              is_sightseeing: +!!is_sightseeing,\n            })\n            .then(() => {\n              navigate && navigate(\"..\")\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n              return Promise.reject(error)\n            })\n        }}\n        render={({\n          isSubmitting,\n          values,\n          status,\n          setFieldValue,\n        }: FormikProps<NewServiceCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add New Transport Service</legend>\n              <FieldArray\n                name=\"via\"\n                render={({ name, remove, push }) => (\n                  <div className=\"form-group\">\n                    <p>Add destinations for the transportation</p>\n                    <Grid>\n                      {values.via.map((_, index, locations) => (\n                        <Col\n                          md={3}\n                          key={index}\n                          style={{ marginBottom: \"10px\" }}\n                        >\n                          <FormikFormGroup\n                            name={`${name}.${index}`}\n                            render={({ field }) => (\n                              <SelectTransportLocations\n                                {...field}\n                                label=\"Destination\"\n                                multiple={false}\n                                onChange={(value, name) =>\n                                  setFieldValue(name, value)\n                                }\n                              />\n                            )}\n                          />\n                          {locations.length > 1 ? (\n                            <Button onClick={_ => remove(index)}>\n                              &times; Remove\n                            </Button>\n                          ) : null}\n                        </Col>\n                      ))}\n                    </Grid>\n                    <hr />\n                    <Button onClick={_ => push(undefined)}>\n                      + Add More Destinations\n                    </Button>\n                  </div>\n                )}\n              />\n              <Grid>\n                <Col>\n                  <InputField\n                    name=\"distance\"\n                    type=\"number\"\n                    label=\"Total distance for the transportation (in kms)\"\n                    placeholder=\"420\"\n                    required\n                  />\n                </Col>\n                <Col>\n                  <InputField\n                    label=\"Any Comments\"\n                    name=\"comments\"\n                    type=\"text\"\n                  />\n                </Col>\n                <Col className=\"mt-4\">\n                  <InputField\n                    name=\"is_sightseeing\"\n                    type=\"checkbox\"\n                    label=\"Includes sightseeing\"\n                  />\n                </Col>\n              </Grid>\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR(NewServices)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\n\nexport default function TransportServicesModule(props: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <div className=\"float-right button-group\">\n        <Link to=\"/transport-service-prices\" className=\"btn\">\n          Prices\n        </Link>\n        <Link to=\"/transport-service-prices/upload-prices\" className=\"btn\">\n          Upload Prices\n        </Link>\n        <Link to=\"new\" className=\"btn\">\n          New Transport Service\n        </Link>\n      </div>\n      <h2>Transport Services</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  FieldProps,\n  FieldArray,\n} from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\nimport moment from \"moment\"\n\nimport { ITransportServicePrice } from \"./store\"\nimport { store as cabTypeStore, SelectCabTypes } from \"./../CabTypes\"\nimport {\n  store as transportLocationStore,\n  SelectTransportLocations,\n} from \"./../TransportLocations\"\nimport {\n  SelectTransportServices as SelectServices,\n  store as transportServiceStore,\n} from \"./../TransportServices\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField, FormikFormGroup } from \"./../Shared/InputField\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport DatePicker from \"../Shared/DatePicker\"\nimport { EmptyNumberValidator } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async storePrice(data: any): Promise<ITransportServicePrice> {\n      return xhr.post(\"/cab-prices\", data).then(resp => resp.data.cab_price)\n    },\n  }\n}\n\nconst validationSchema = Validator.object().shape({\n  prices: Validator.array().of(\n    Validator.object().shape({\n      start_date: Validator.string().required(\"Start date is required\"),\n      end_date: Validator.string().required(\"End date is required\"),\n      cab_type: Validator.object().required(\"Cab type is required\"),\n      transport_service: Validator.object().required(\n        \"Transport service is required\"\n      ),\n      cab_locality: Validator.object(),\n      per_day_charges: EmptyNumberValidator(),\n      per_day_parking_charges: EmptyNumberValidator(),\n      price: EmptyNumberValidator(),\n      per_km_charges: EmptyNumberValidator(),\n      minimum_km_per_day: EmptyNumberValidator(),\n      night_charges: EmptyNumberValidator(),\n      toll_charges: EmptyNumberValidator(),\n      parking_charges: EmptyNumberValidator(),\n    })\n  ),\n})\n\ninterface AddPriceCredentials {\n  prices: {\n    start_date: string\n    end_date: string\n    cab_type?: cabTypeStore.ICabType\n    transport_service?: transportServiceStore.ITransportService\n    cab_locality?: transportLocationStore.ITransportLocation\n    per_day_charges?: number\n    per_day_parking_charges?: number\n    price?: number\n    per_km_charges?: number\n    minimum_km_per_day?: number\n    toll_charges?: number\n    night_charges?: number\n    parking_charges?: number\n  }[]\n}\n\nconst initialValues: AddPriceCredentials = {\n  prices: [\n    {\n      start_date: \"\",\n      end_date: \"\",\n      cab_type: undefined,\n      transport_service: undefined,\n      cab_locality: undefined,\n      per_day_charges: undefined,\n      per_day_parking_charges: undefined,\n      price: undefined,\n      per_km_charges: undefined,\n      minimum_km_per_day: undefined,\n      toll_charges: undefined,\n      night_charges: undefined,\n      parking_charges: undefined,\n    },\n  ],\n}\n\ninterface AddPriceProps extends RouteComponentProps, XHRProps {}\n\nfunction AddPrice({ xhr, navigate }: AddPriceProps) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(\n        values: AddPriceCredentials,\n        actions: FormikActions<AddPriceCredentials>\n      ) => {\n        actions.setStatus()\n        const prices: any = []\n        values.prices.forEach(values => {\n          const {\n            cab_type,\n            transport_service,\n            cab_locality,\n            start_date,\n            end_date,\n            ...otherData\n          } = values\n          if (cab_type && transport_service) {\n            prices.push({\n              ...otherData,\n              start_date: moment(start_date)\n                .hours(0)\n                .minutes(0)\n                .seconds(0)\n                .utc()\n                .format(\"YYYY-MM-DD HH:mm:ss\"),\n              end_date: moment(end_date)\n                .hours(23)\n                .minutes(59)\n                .seconds(59)\n                .utc()\n                .format(\"YYYY-MM-DD HH:mm:ss\"),\n              cab_type_id: cab_type.id,\n              transport_service_id: transport_service.id,\n              cab_locality_id: cab_locality && cab_locality.name,\n            })\n          }\n        })\n        XHR(xhr)\n          .storePrice({ prices })\n          .then(() => {\n            actions.setSubmitting(false)\n            navigate && navigate(\"..\")\n          })\n          .catch(error => {\n            actions.setStatus(error.message)\n            if (error.formikErrors) {\n              actions.setErrors(error.formikErrors)\n            }\n            actions.setSubmitting(false)\n          })\n      }}\n      render={({\n        status,\n        isSubmitting,\n        values,\n        setFieldValue,\n      }: FormikProps<AddPriceCredentials>) => (\n        <Form noValidate>\n          <fieldset style={{ minInlineSize: \"auto\" }}>\n            <legend>Add Transport Service Price</legend>\n            <FieldArray\n              name=\"prices\"\n              render={({ name, push, remove }) => (\n                <ol className=\"list\">\n                  {values.prices.map((price, index, prices) => (\n                    <li key={index}>\n                      <Grid>\n                        <Col>\n                          <DatePicker\n                            label=\"Start Date\"\n                            name={`${name}.${index}.start_date`}\n                            required\n                          />\n                        </Col>\n                        <Col>\n                          <DatePicker\n                            label=\"End Date\"\n                            name={`${name}.${index}.end_date`}\n                            required\n                          />\n                        </Col>\n                        <Col>\n                          <FormikFormGroup\n                            name={`${name}.${index}.cab_type`}\n                            render={({\n                              field,\n                            }: FieldProps<AddPriceCredentials>) => (\n                              <SelectCabTypes\n                                {...field}\n                                label=\"Cab Type\"\n                                multiple={false}\n                                required\n                                fetchOnMount\n                                onChange={(value, name) =>\n                                  setFieldValue(name, value)\n                                }\n                              />\n                            )}\n                          />\n                        </Col>\n                        <Col>\n                          <FormikFormGroup\n                            name={`${name}.${index}.transport_service`}\n                            render={({\n                              field,\n                            }: FieldProps<AddPriceCredentials>) => (\n                              <SelectServices\n                                {...field}\n                                label=\"Transport Service\"\n                                multiple={false}\n                                required\n                                fetchOnMount\n                                onChange={(value, name) =>\n                                  setFieldValue(name, value)\n                                }\n                              />\n                            )}\n                          />\n                        </Col>\n                        <Col>\n                          <FormikFormGroup\n                            name={`${name}.${index}.cab_locality`}\n                            render={({\n                              field,\n                            }: FieldProps<AddPriceCredentials>) => (\n                              <SelectTransportLocations\n                                {...field}\n                                label=\"Cab Locality\"\n                                multiple={false}\n                                fetchOnMount\n                                onChange={(value, name) =>\n                                  setFieldValue(name, value)\n                                }\n                              />\n                            )}\n                          />\n                        </Col>\n                      </Grid>\n                      <Grid>\n                        <Col>\n                          <InputField\n                            label=\"Per Day Charges\"\n                            name={`${name}.${index}.per_day_charges`}\n                            type=\"number\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Per Day Parking Charges\"\n                            name={`${name}.${index}.per_day_parking_charges`}\n                            type=\"number\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Price (fixed Per Service)\"\n                            name={`${name}.${index}.price`}\n                            type=\"number\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Charges per Km\"\n                            name={`${name}.${index}.per_km_charges`}\n                            type=\"number\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Minimum Kms per Day\"\n                            name={`${name}.${index}.minimum_km_per_day`}\n                            type=\"number\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Toll charges per Km\"\n                            name={`${name}.${index}.toll_charges`}\n                            type=\"number\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Night Charges per Km\"\n                            name={`${name}.${index}.night_charges`}\n                            type=\"number\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Parking Charges per km\"\n                            name={`${name}.${index}.parking_charges`}\n                            type=\"number\"\n                            min={0}\n                          />\n                        </Col>\n                      </Grid>\n                      <div className=\"button-group\">\n                        <Button\n                          className=\"btn--secondary\"\n                          onClick={() => push(price)}\n                        >\n                          + Duplicate\n                        </Button>\n                        {prices.length > 1 ? (\n                          <Button\n                            className=\"btn--secondary\"\n                            onClick={() => remove(index)}\n                          >\n                            &times; Remove\n                          </Button>\n                        ) : null}\n                      </div>\n                    </li>\n                  ))}\n                  <div className=\"form-group\">\n                    <hr />\n                    <Button onClick={() => push(initialValues.prices[0])}>\n                      + Add More Transport Prices\n                    </Button>\n                  </div>\n                </ol>\n              )}\n            />\n            {status ? <div>{status}</div> : null}\n            <footer>\n              <Button primary type=\"submit\" disabled={isSubmitting}>\n                Save\n              </Button>\n              <Link to={\"..\"} className=\"btn\">\n                Cancel\n              </Link>\n            </footer>\n          </fieldset>\n        </Form>\n      )}\n    />\n  )\n}\n\nexport default withXHR(AddPrice)\n","import React, { useState, useMemo, useCallback, useRef } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  FieldArray,\n  FieldProps,\n} from \"formik\"\nimport { Button, Icons, useDidMount, Select, Badge } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\nimport moment from \"moment\"\nimport { AxiosInstance } from \"axios\"\n\nimport { store as cabTypeStore, SelectCabTypes } from \"./../CabTypes\"\nimport {\n  SelectTransportServices as SelectServices,\n  store as transportServiceStore,\n} from \"./../TransportServices\"\nimport {\n  InputField,\n  Input,\n  FormikFormGroup,\n  FormGroup,\n  OnFormChange,\n} from \"./../Shared/InputField\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport DatePicker from \"../Shared/DatePicker\"\nimport { EmptyNumberValidator, numberToLocalString } from \"../utils\"\nimport Spinner from \"../Shared/Spinner\"\nimport {\n  SelectTransportLocations,\n  store as locationStore,\n} from \"./../TransportLocations\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getPrice(cabs: any) {\n      return xhr.get(\"/prices\", { params: { cabs } }).then(resp => resp.data)\n    },\n  }\n}\n\nconst validationSchema = Validator.object().shape({\n  cabs: Validator.array().of(\n    Validator.object().shape({\n      start_date: Validator.string().required(\"Start date field is required\"),\n      no_of_days: EmptyNumberValidator()\n        .positive(\"Number of days should be a positive integer\")\n        .integer(\"Number of days should be a positive integer\")\n        .required(\"Number of days is required.\"),\n      cab_type: Validator.object().required(\"Cab type field is required\"),\n      transport_service: Validator.object().required(\"Service is required\"),\n      cab_locality: Validator.object().nullable(true),\n      no_of_cabs: EmptyNumberValidator()\n        .positive(\"Number of cabs should be a positive integer\")\n        .integer(\"Number of cabs should be a positive integer.\")\n        .required(\"Number of cabs is required\"),\n    })\n  ),\n})\n\ninterface CalculatePriceSchema {\n  cabs: {\n    start_date: string\n    no_of_days: number\n    cab_type?: cabTypeStore.ICabType\n    transport_service?: transportServiceStore.ITransportService\n    cab_locality?: locationStore.ITransportLocation\n    no_of_cabs: number\n    calculated_price?: number\n    given_price?: number\n    edited_given_price?: boolean\n    comments?: string\n    no_price_for_dates?: Array<string>\n  }[]\n}\n\nconst INITIAL_VALUES: CalculatePriceSchema = {\n  cabs: [\n    {\n      start_date: \"\",\n      no_of_days: 1,\n      cab_type: undefined,\n      transport_service: undefined,\n      cab_locality: undefined,\n      no_of_cabs: 1,\n      calculated_price: undefined,\n      edited_given_price: false,\n      given_price: 0,\n      comments: \"\",\n    },\n  ],\n}\n\ninterface CalculatePriceFormProps extends XHRProps {\n  initialValues?: CalculatePriceSchema\n  onChange?: (price: number, cabs: any) => void\n  bookingFrom?: string\n  bookingTo?: string\n  shouldEmptyInitialValues?: boolean\n}\nexport const CalculatePriceForm = withXHR(function CalculatePriceForm({\n  initialValues: initialValuesProp,\n  shouldEmptyInitialValues = false,\n  xhr,\n  onChange,\n  bookingFrom,\n  bookingTo,\n}: CalculatePriceFormProps) {\n  const initialValues =\n    initialValuesProp ||\n    (shouldEmptyInitialValues ? { cabs: [] } : INITIAL_VALUES)\n  const notifyOnChange = useCallback(\n    (flattenValues: CalculatePriceSchema) => {\n      onChange &&\n        onChange(\n          flattenValues.cabs.reduce(\n            (price: number, cab) =>\n              price +\n              parseFloat((cab.given_price ? cab.given_price : 0).toString()),\n            0\n          ),\n          flattenValues.cabs.map(\n            ({\n              start_date,\n              no_of_days,\n              cab_type,\n              transport_service,\n              cab_locality,\n              ...cab\n            }) => ({\n              ...cab,\n              from_date: moment(start_date)\n                .hours(0)\n                .minutes(0)\n                .seconds(0)\n                .utc()\n                .format(\"YYYY-MM-DD HH:mm:ss\"),\n              to_date: moment(start_date)\n                .add(no_of_days - 1, \"days\")\n                .hours(23)\n                .minutes(59)\n                .seconds(59)\n                .utc()\n                .format(\"YYYY-MM-DD HH:mm:ss\"),\n              cab_type_id: cab_type && cab_type.id,\n              transport_service_id: transport_service && transport_service.id,\n              cab_locality_id: cab_locality && cab_locality.id,\n            })\n          )\n        )\n    },\n    [onChange]\n  )\n  useDidMount(() => {\n    notifyOnChange(initialValues)\n  })\n  const bookingDates: Array<{ id: number; name: string }> = useMemo(() => {\n    const dates = []\n    const days = moment(bookingTo).diff(moment(bookingFrom), \"days\")\n    for (let i = 0; i <= days; i++) {\n      dates.push({\n        id: i,\n        name: moment(bookingFrom)\n          .add(i, \"day\")\n          .format(\"YYYY-MM-DD\"),\n      })\n    }\n    return dates\n  }, [bookingFrom, bookingTo])\n  const onSubmit = useCallback(\n    async (\n      values: CalculatePriceSchema,\n      actions: FormikActions<CalculatePriceSchema>\n    ) => {\n      actions.setStatus()\n      const cabs: any[] = []\n      // flatten values so that we cab show the prices for each row\n      const flattenValues: CalculatePriceSchema = {\n        cabs: [],\n      }\n      values.cabs.forEach(values => {\n        const {\n          start_date,\n          no_of_days,\n          cab_type,\n          transport_service,\n          cab_locality,\n          no_of_cabs,\n        } = values\n        if (\n          start_date &&\n          no_of_days &&\n          cab_type &&\n          transport_service &&\n          no_of_cabs\n        ) {\n          flattenValues.cabs.push({\n            ...values,\n            start_date: moment(start_date).format(\"YYYY-MM-DD\"),\n            no_of_days,\n          })\n          cabs.push({\n            from_date: moment(start_date)\n              .hours(0)\n              .minutes(0)\n              .seconds(0)\n              .utc()\n              .format(\"YYYY-MM-DD HH:mm:ss\"),\n            to_date: moment(start_date)\n              .add(no_of_days - 1, \"days\")\n              .hours(23)\n              .minutes(59)\n              .seconds(59)\n              .utc()\n              .format(\"YYYY-MM-DD HH:mm:ss\"),\n            cab_type_id: cab_type.id,\n            transport_service_id: transport_service.id,\n            cab_locality_id: cab_locality ? cab_locality.id : null,\n            no_of_cabs,\n          })\n        }\n      })\n      return XHR(xhr)\n        .getPrice(cabs)\n        .then(data => {\n          flattenValues.cabs = flattenValues.cabs.map((cab, i) => ({\n            ...cab,\n            calculated_price: data.cabs[i].price,\n            given_price: cab.edited_given_price\n              ? cab.given_price\n              : data.cabs[i].price,\n            no_price_for_dates: data.cabs[i].no_price_for_dates,\n          }))\n          actions.setValues(flattenValues)\n          notifyOnChange(flattenValues)\n        })\n        .catch(error => {\n          actions.setStatus(error.message)\n          if (error.formikErrors) {\n            actions.setErrors(error.formikErrors)\n          }\n        })\n    },\n    [xhr, notifyOnChange]\n  )\n  // this will help us identify if we should fetch the price for onChange or not\n  // we need this because, changing the given price also triggers the fetch prices\n  // and which onResolve, changes the given price back to calculated price\n  const shouldFetchPricesOnChange = useRef(true)\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) =>\n        onSubmit(values, actions).then(() => {\n          actions.setSubmitting(false)\n        })\n      }\n      render={({\n        isSubmitting,\n        values,\n        status,\n        setFieldValue,\n      }: FormikProps<CalculatePriceSchema>) => (\n        <Form noValidate>\n          {status ? <p className=\"text-red-700 mb-2\">{status}</p> : null}\n          <FieldArray\n            name=\"cabs\"\n            render={({ name, push, remove }) => (\n              <div>\n                {values.cabs.map((cab, index) => (\n                  <div key={index} className=\"border-gray-300 border-b-4\">\n                    <Grid>\n                      <Col md={7} className=\"py-3\">\n                        <Grid>\n                          <Col>\n                            {bookingFrom && bookingTo ? (\n                              <FormikFormGroup\n                                name={`${name}.${index}.start_date`}\n                                render={({\n                                  field,\n                                }: FieldProps<CalculatePriceSchema>) => (\n                                  <Select\n                                    {...field}\n                                    label=\"Start Date\"\n                                    options={bookingDates}\n                                    searchable={false}\n                                    onQuery={() => {}}\n                                    value={bookingDates.find(\n                                      d => d.name === cab.start_date\n                                    )}\n                                    placeholder=\"Select a date...\"\n                                    required\n                                    onChange={(startDate, name) => {\n                                      setFieldValue(name, startDate.name)\n                                    }}\n                                  />\n                                )}\n                              />\n                            ) : (\n                              <DatePicker\n                                label=\"Start Date\"\n                                name={`${name}.${index}.start_date`}\n                                required\n                              />\n                            )}\n                          </Col>\n                          <Col>\n                            <InputField\n                              label=\"No of days\"\n                              name={`${name}.${index}.no_of_days`}\n                              type=\"number\"\n                              required\n                              min={1}\n                              max={10000}\n                            />\n                          </Col>\n                          <Col>\n                            <FormikFormGroup\n                              name={`${name}.${index}.cab_type`}\n                              render={({\n                                field,\n                              }: FieldProps<CalculatePriceSchema>) => (\n                                <SelectCabTypes\n                                  {...field}\n                                  label=\"Cab Type\"\n                                  multiple={false}\n                                  fetchOnMount\n                                  onChange={(value, name) =>\n                                    setFieldValue(name, value)\n                                  }\n                                />\n                              )}\n                            />\n                          </Col>\n                          <Col>\n                            <FormikFormGroup\n                              name={`${name}.${index}.transport_service`}\n                              render={({\n                                field,\n                              }: FieldProps<CalculatePriceSchema>) => (\n                                <SelectServices\n                                  {...field}\n                                  label=\"Transport Service\"\n                                  multiple={false}\n                                  onChange={(value, name) =>\n                                    setFieldValue(name, value)\n                                  }\n                                />\n                              )}\n                            />\n                          </Col>\n                          <Col>\n                            <FormikFormGroup\n                              name={`${name}.${index}.cab_locality`}\n                              render={({\n                                field,\n                              }: FieldProps<CalculatePriceSchema>) => (\n                                <SelectTransportLocations\n                                  {...field}\n                                  creatable={false}\n                                  label=\"Cab Locality\"\n                                  multiple={false}\n                                  onChange={(value, name) =>\n                                    setFieldValue(name, value)\n                                  }\n                                />\n                              )}\n                            />\n                          </Col>\n                          <Col>\n                            <InputField\n                              label=\"No of cabs\"\n                              name={`${name}.${index}.no_of_cabs`}\n                              min={1}\n                              max={1000}\n                              type=\"number\"\n                              required\n                            />\n                          </Col>\n                        </Grid>\n                      </Col>\n                      <Col md={4} className=\"md:border-l py-3\">\n                        <Grid>\n                          <Col>\n                            <FormGroup>\n                              <div className=\"mb-1 white-space-pre\">\n                                Calculated Price\n                              </div>\n                              {isSubmitting ? (\n                                <Spinner />\n                              ) : cab.calculated_price !== undefined ? (\n                                <Badge primary>\n                                  <Icons.RupeeIcon /> {cab.calculated_price}\n                                </Badge>\n                              ) : (\n                                <Button type=\"submit\" disabled={isSubmitting}>\n                                  Get Price\n                                </Button>\n                              )}\n                              {cab.no_price_for_dates &&\n                              cab.no_price_for_dates.length ? (\n                                <p className=\"text-yellow-800\">\n                                  No prices available for{\" \"}\n                                  {cab.no_price_for_dates\n                                    .map(date =>\n                                      moment\n                                        .utc(date)\n                                        .local()\n                                        .format(\"Do MMM\")\n                                    )\n                                    .join(\", \")}\n                                </p>\n                              ) : null}\n                            </FormGroup>\n                          </Col>\n                          <Col>\n                            <FormGroup>\n                              <label>Given Price</label>\n                              <Input\n                                name={`${name}.${index}.given_price`}\n                                type=\"number\"\n                                value={cab.given_price}\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  let value: number | undefined = parseInt(\n                                    e.target.value,\n                                    10\n                                  )\n                                  shouldFetchPricesOnChange.current = false\n                                  setFieldValue(e.target.name, value)\n                                  setFieldValue(\n                                    `${name}.${index}.edited_given_price`,\n                                    true\n                                  )\n                                }}\n                                min={0}\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col sm={12}>\n                            <InputField\n                              label=\"Commets\"\n                              name={`${name}.${index}.comments`}\n                              maxLength={191}\n                              value={cab.comments}\n                              placeholder=\"Regarding pricing difference or any other\"\n                              className=\"w-full\"\n                              onChange={(\n                                e: React.ChangeEvent<HTMLInputElement>\n                              ) => {\n                                const value = e.target.value\n                                shouldFetchPricesOnChange.current = false\n                                setFieldValue(e.target.name, value)\n                              }}\n                            />\n                          </Col>\n                        </Grid>\n                      </Col>\n                      <Col md={1} className=\"text-right md:border-l py-3\">\n                        <Button\n                          className=\"btn--secondary w-full\"\n                          onClick={() => push(cab)}\n                        >\n                          + Duplicate\n                        </Button>\n                        <Button\n                          className=\"btn--secondary w-full\"\n                          onClick={() => remove(index)}\n                        >\n                          &times; Remove\n                        </Button>\n                      </Col>\n                    </Grid>\n                  </div>\n                ))}\n                <div className=\"pt-4\">\n                  <Button onClick={() => push(INITIAL_VALUES.cabs[0])}>\n                    + Add More Price Queries\n                  </Button>\n                </div>\n              </div>\n            )}\n          />\n          <OnFormChange\n            onChange={(formik: FormikProps<CalculatePriceSchema>) => {\n              notifyOnChange(formik.values)\n              if (!shouldFetchPricesOnChange.current) {\n                shouldFetchPricesOnChange.current = true\n                return\n              }\n              if (formik.isSubmitting) return\n              validationSchema\n                .validate(formik.values)\n                .then(async () => {\n                  if (formik.isSubmitting) return\n                  formik.setSubmitting(true)\n                  return onSubmit(formik.values, formik).then(() => {\n                    formik.setSubmitting(false)\n                  })\n                })\n                .catch(() => {})\n            }}\n          />\n        </Form>\n      )}\n    />\n  )\n})\n\nexport default function CalculatePrice(props: RouteComponentProps) {\n  const [price, setPrice] = useState<number>(0)\n  return (\n    <div>\n      <div className=\"flex align-items-center mb-8\">\n        <Link\n          to=\"..\"\n          className=\"mr-4 text-blue-600 hover:text-blue-800 text-lg px-2 border rounded-full\"\n        >\n          <Icons.ChevronDownIcon className=\"rotate-90\" />\n        </Link>\n        <h3 className=\"m-0\">Calculate Transportation Prices</h3>\n      </div>\n      <p>\n        Please enter your transportation query and press get price to get the\n        prices.\n      </p>\n      <div className=\"bg-white px-4 pb-4 rounded shadow\">\n        <CalculatePriceForm onChange={price => setPrice(price)} />\n      </div>\n      <footer className=\"mt-4\">\n        <mark className=\"inline-block text-2xl font-bold px-4 py-2 rounded\">\n          Total Price: {numberToLocalString(price)}\n        </mark>\n      </footer>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport UploadPrices from \"./UploadPrices\"\nimport NewItem from \"./NewItem\"\nimport CalculatePrice from \"./CalculatePrice\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\nexport default function CabTypesModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Grid>\n        <Col>\n          <h2 className=\"white-space-pre\">Transport Service Prices</h2>\n        </Col>\n        <Col className=\"text-right d-flex align-items-center justify-content-end\">\n          <div className=\"button-group\">\n            <Link to=\"upload-prices\" className=\"btn\">\n              Upload Prices\n            </Link>\n            <Link to=\"new\" className=\"btn\">\n              Add Prices\n            </Link>\n            <Link to=\"calculate-price\" className=\"btn\">\n              Calculate Price\n            </Link>\n          </div>\n        </Col>\n      </Grid>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <UploadPrices path=\"/upload-prices\" />\n        <CalculatePrice path=\"/calculate-price\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React, { useState, useMemo, useCallback, useRef } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  FieldArray,\n  FieldProps,\n} from \"formik\"\nimport { Button, Icons, Select, useDidMount, ButtonGroup } from \"@tourepedia/ui\"\nimport moment from \"moment\"\nimport * as Validator from \"yup\"\nimport { AxiosInstance } from \"axios\"\n\nimport {\n  InputField,\n  FormikFormGroup,\n  OnFormChange,\n} from \"./../Shared/InputField\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport DatePicker from \"../Shared/DatePicker\"\nimport { EmptyNumberValidator } from \"../utils\"\nimport {\n  SelectTransportExtraServices,\n  store as extraServiceStore,\n} from \"./../ExtraServices\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getPrice(transport_extras: any) {\n      return Promise.resolve({ transport_extras })\n      // return xhr\n      //   .get(\"/prices\", { params: { transport_extras } })\n      //   .then(resp => resp.data)\n    },\n  }\n}\n\nexport interface ExtraServicesParams {\n  transport_extras: {\n    service?: extraServiceStore.IExtraService\n    price?: number\n    date?: string\n    comments?: string\n  }[]\n}\n\nexport const validationSchema = Validator.object().shape({\n  transport_extras: Validator.array().of(\n    Validator.object().shape({\n      service: Validator.object()\n        .typeError(\"Service field is required\")\n        .required(\"Service field is required\"),\n      date: Validator.string(),\n      price: EmptyNumberValidator().positive(\"Price should be positive\"),\n      comments: Validator.string(),\n    })\n  ),\n})\n\nexport const INITIAL_VALUES: ExtraServicesParams = {\n  transport_extras: [\n    {\n      service: undefined,\n      date: \"\",\n      price: undefined,\n      comments: \"\",\n    },\n  ],\n}\n\ninterface ExtraServicesFormProps extends XHRProps {\n  initialValues?: ExtraServicesParams\n  onChange?: (price: number, data: any) => void\n  bookingFrom?: string\n  bookingTo?: string\n  shouldEmptyInitialValues?: boolean\n}\nexport const ExtraServicesForm = withXHR(function ExtraServicesForm({\n  initialValues: initialValuesProp,\n  shouldEmptyInitialValues = true,\n  xhr,\n  onChange,\n  bookingFrom,\n  bookingTo,\n}: ExtraServicesFormProps) {\n  const initialValues =\n    initialValuesProp ||\n    (shouldEmptyInitialValues ? { transport_extras: [] } : INITIAL_VALUES)\n  const notifyOnChange = useCallback(\n    (flattenValues: ExtraServicesParams) => {\n      onChange &&\n        onChange(\n          flattenValues.transport_extras.reduce(\n            (price: number, cab) =>\n              price + parseFloat((cab.price ? cab.price : 0).toString()),\n            0\n          ),\n          flattenValues.transport_extras.map(\n            ({ service, date, ...otherData }) => {\n              return {\n                ...otherData,\n                date: date\n                  ? moment(date)\n                      .hours(0)\n                      .minutes(0)\n                      .seconds(0)\n                      .utc()\n                      .format(\"YYYY-MM-DD HH:mm:ss\")\n                  : \"\",\n                service: service ? service.name : undefined,\n              }\n            }\n          )\n        )\n    },\n    [onChange]\n  )\n  useDidMount(() => {\n    notifyOnChange(initialValues)\n  })\n  const bookingDates: Array<{ id: number; name: string }> = useMemo(() => {\n    const dates = []\n    const days = moment(bookingTo).diff(moment(bookingFrom), \"days\")\n    for (let i = 0; i <= days; i++) {\n      dates.push({\n        id: i,\n        name: moment(bookingFrom)\n          .add(i, \"day\")\n          .format(\"YYYY-MM-DD\"),\n      })\n    }\n    return dates\n  }, [bookingFrom, bookingTo])\n  const onSubmit = useCallback(\n    async (\n      values: ExtraServicesParams,\n      actions: FormikActions<ExtraServicesParams>\n    ) => {\n      actions.setStatus()\n      const transport_extras: any[] = []\n      // flatten values so that we can show the prices for each row\n      const flattenValues: ExtraServicesParams = {\n        transport_extras: [],\n      }\n      values.transport_extras.forEach(values => {\n        const { date, service, ...otherData } = values\n        if (service) {\n          flattenValues.transport_extras.push({\n            ...values,\n            date: date ? moment(date).format(\"YYYY-MM-DD\") : \"\",\n          })\n          transport_extras.push({\n            ...otherData,\n            date: date\n              ? moment(date)\n                  .hours(0)\n                  .minutes(0)\n                  .seconds(0)\n                  .utc()\n                  .format(\"YYYY-MM-DD HH:mm:ss\")\n              : \"\",\n            service: service && service.name,\n          })\n        }\n      })\n      return XHR(xhr)\n        .getPrice(transport_extras)\n        .then(data => {\n          flattenValues.transport_extras = flattenValues.transport_extras.map(\n            (cab, i) => ({\n              ...cab,\n              price: data.transport_extras[i].price,\n            })\n          )\n          actions.setValues(flattenValues)\n          notifyOnChange(flattenValues)\n        })\n        .catch(error => {\n          actions.setStatus(error.message)\n          if (error.formikErrors) {\n            actions.setErrors(error.formikErrors)\n          }\n        })\n    },\n    [xhr, notifyOnChange]\n  )\n  // this will help us identify if we should fetch the price for onChange or not\n  // we need this because, changing the given price also triggers the fetch prices\n  // and which onResolve, changes the given price back to calculated price\n  const shouldFetchPricesOnChange = useRef(true)\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(value, actions) =>\n        onSubmit(value, actions).then(() => {\n          actions.setSubmitting(false)\n        })\n      }\n      render={({\n        isSubmitting,\n        values,\n        setFieldValue,\n      }: FormikProps<ExtraServicesParams>) => {\n        return (\n          <Form noValidate>\n            <FieldArray\n              name=\"transport_extras\"\n              render={({ name, push, remove }) => (\n                <div>\n                  {values.transport_extras.map((transport_extra, index) => (\n                    <div key={index} className=\"border-gray-300 border-b-4\">\n                      <Grid>\n                        <Col>\n                          <FormikFormGroup\n                            name={`${name}.${index}.service`}\n                            render={({\n                              field,\n                            }: FieldProps<ExtraServicesParams>) => (\n                              <SelectTransportExtraServices\n                                {...field}\n                                label=\"Service\"\n                                placeholder=\"Select or add a service...\"\n                                required\n                                creatable\n                                fetchOnMount\n                                onChange={(value, name) => {\n                                  setFieldValue(name, value)\n                                }}\n                              />\n                            )}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Price\"\n                            name={`${name}.${index}.price`}\n                            type=\"number\"\n                            placeholder=\"3000\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          {bookingFrom && bookingTo ? (\n                            <FormikFormGroup\n                              name={`${name}.${index}.date`}\n                              render={({\n                                field,\n                              }: FieldProps<ExtraServicesParams>) => (\n                                <Select\n                                  {...field}\n                                  label=\"Date\"\n                                  options={bookingDates}\n                                  searchable={false}\n                                  placeholder=\"Select a date...\"\n                                  required\n                                  value={bookingDates.find(\n                                    d => d.name === transport_extra.date\n                                  )}\n                                  onChange={(startDate, name) => {\n                                    setFieldValue(name, startDate.name)\n                                  }}\n                                />\n                              )}\n                            />\n                          ) : (\n                            <DatePicker\n                              label=\"Date\"\n                              name={`${name}.${index}.date`}\n                              required\n                            />\n                          )}\n                        </Col>\n                        <Col>\n                          <InputField\n                            name={`${name}.${index}.comments`}\n                            label=\"Comments\"\n                            placeholder=\"Any comments regarding service\"\n                          />\n                        </Col>\n                        <Col className=\"pt-4 border-l text-right\">\n                          <ButtonGroup>\n                            <Button\n                              className=\"btn--secondary\"\n                              onClick={() => push(transport_extra)}\n                            >\n                              + Duplicate\n                            </Button>\n                            <Button\n                              className=\"btn--secondary\"\n                              onClick={() => remove(index)}\n                            >\n                              &times; Remove\n                            </Button>\n                          </ButtonGroup>\n                        </Col>\n                      </Grid>\n                    </div>\n                  ))}\n                  <div className=\"mt-4\">\n                    <Button\n                      onClick={() => push(INITIAL_VALUES.transport_extras[0])}\n                    >\n                      + Add {values.transport_extras.length ? \"Another\" : \"\"}{\" \"}\n                      Transport Extra Service\n                    </Button>\n                  </div>\n                </div>\n              )}\n            />\n            <OnFormChange\n              onChange={(formik: FormikProps<ExtraServicesParams>) => {\n                notifyOnChange(formik.values)\n                if (!shouldFetchPricesOnChange.current) {\n                  shouldFetchPricesOnChange.current = true\n                  return\n                }\n                if (formik.isSubmitting) return\n                validationSchema\n                  .validate(formik.values)\n                  .then(async () => {\n                    if (formik.isSubmitting) return\n                    formik.setSubmitting(true)\n                    return onSubmit(formik.values, formik).then(() => {\n                      formik.setSubmitting(false)\n                    })\n                  })\n                  .catch(() => {})\n              }}\n            />\n            <button type=\"submit\" className=\"invisible\">\n              Get Price\n            </button>\n          </Form>\n        )\n      }}\n    />\n  )\n})\n\nexport default function ExtraServices(props: RouteComponentProps) {\n  const [price, setPrice] = useState<number>(0)\n  return (\n    <div>\n      <div className=\"flex align-items-center mb-8\">\n        <Link\n          to=\"..\"\n          className=\"mr-4 text-blue-600 hover:text-blue-800 text-lg px-2 border rounded-full\"\n        >\n          <Icons.ChevronDownIcon className=\"rotate-90\" />\n        </Link>\n        <h3 className=\"m-0\">Calculate Transport Extra Service Prices</h3>\n      </div>\n      <p>\n        Add any extra services like any side destination trip that is provided\n        only per customer request\n      </p>\n      <ExtraServicesForm onChange={price => setPrice(price)} />\n      <footer className=\"mt-8 pb-8\">\n        <h4>\n          <mark>Total Cost Price: {price}</mark>\n        </h4>\n      </footer>\n    </div>\n  )\n}\n","import React, { useState, useMemo, useCallback, useRef } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  FieldArray,\n  FieldProps,\n} from \"formik\"\nimport { Button, Icons, Select, useDidMount, ButtonGroup } from \"@tourepedia/ui\"\nimport moment from \"moment\"\nimport * as Validator from \"yup\"\nimport { AxiosInstance } from \"axios\"\n\nimport {\n  InputField,\n  FormikFormGroup,\n  OnFormChange,\n} from \"./../Shared/InputField\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport DatePicker from \"../Shared/DatePicker\"\nimport { EmptyNumberValidator } from \"../utils\"\nimport {\n  SelectOtherExtraServices,\n  store as extraServiceStore,\n} from \"./../ExtraServices\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getPrice(other_extras: any) {\n      return Promise.resolve({ other_extras })\n      // return xhr\n      //   .get(\"/prices\", { params: { other_extras } })\n      //   .then(resp => resp.data)\n    },\n  }\n}\n\nexport interface ExtraServicesParams {\n  other_extras: {\n    service?: extraServiceStore.IExtraService\n    price?: number\n    date?: string\n    comments?: string\n  }[]\n}\n\nexport const validationSchema = Validator.object().shape({\n  other_extras: Validator.array().of(\n    Validator.object().shape({\n      service: Validator.object()\n        .typeError(\"Service field is required\")\n        .required(\"Service field is required\"),\n      date: Validator.string(),\n      price: EmptyNumberValidator().positive(\"Price should be positive\"),\n      comments: Validator.string(),\n    })\n  ),\n})\n\nexport const INITIAL_VALUES: ExtraServicesParams = {\n  other_extras: [\n    {\n      service: undefined,\n      date: \"\",\n      price: undefined,\n      comments: \"\",\n    },\n  ],\n}\n\ninterface ExtraServicesFormProps extends XHRProps {\n  initialValues?: ExtraServicesParams\n  onChange?: (price: number, data: any) => void\n  bookingFrom?: string\n  bookingTo?: string\n  shouldEmptyInitialValues?: boolean\n}\nexport const ExtraServicesForm = withXHR(function ExtraServicesForm({\n  initialValues: initialValuesProp,\n  shouldEmptyInitialValues = true,\n  xhr,\n  onChange,\n  bookingFrom,\n  bookingTo,\n}: ExtraServicesFormProps) {\n  const initialValues =\n    initialValuesProp ||\n    (shouldEmptyInitialValues ? { other_extras: [] } : INITIAL_VALUES)\n  const notifyOnChange = useCallback(\n    (flattenValues: ExtraServicesParams) => {\n      onChange &&\n        onChange(\n          flattenValues.other_extras.reduce(\n            (price: number, cab) =>\n              price + parseFloat((cab.price ? cab.price : 0).toString()),\n            0\n          ),\n          flattenValues.other_extras.map(({ service, date, ...otherData }) => {\n            return {\n              ...otherData,\n              date: date\n                ? moment(date)\n                    .hours(0)\n                    .minutes(0)\n                    .seconds(0)\n                    .utc()\n                    .format(\"YYYY-MM-DD HH:mm:ss\")\n                : \"\",\n              service: service ? service.name : undefined,\n            }\n          })\n        )\n    },\n    [onChange]\n  )\n  useDidMount(() => {\n    notifyOnChange(initialValues)\n  })\n  const bookingDates: Array<{ id: number; name: string }> = useMemo(() => {\n    const dates = []\n    const days = moment(bookingTo).diff(moment(bookingFrom), \"days\")\n    for (let i = 0; i <= days; i++) {\n      dates.push({\n        id: i,\n        name: moment(bookingFrom)\n          .add(i, \"day\")\n          .format(\"YYYY-MM-DD\"),\n      })\n    }\n    return dates\n  }, [bookingFrom, bookingTo])\n  const onSubmit = useCallback(\n    async (\n      values: ExtraServicesParams,\n      actions: FormikActions<ExtraServicesParams>\n    ) => {\n      actions.setStatus()\n      const other_extras: any[] = []\n      // flatten values so that we can show the prices for each row\n      const flattenValues: ExtraServicesParams = {\n        other_extras: [],\n      }\n      values.other_extras.forEach(values => {\n        const { date, service, ...otherData } = values\n        if (service) {\n          flattenValues.other_extras.push({\n            ...values,\n            date: moment(date).format(\"YYYY-MM-DD\"),\n          })\n          other_extras.push({\n            ...otherData,\n            date: date\n              ? moment(date)\n                  .hours(0)\n                  .minutes(0)\n                  .seconds(0)\n                  .utc()\n                  .format(\"YYYY-MM-DD HH:mm:ss\")\n              : \"\",\n            service: service ? service.name : undefined,\n          })\n        }\n      })\n      return XHR(xhr)\n        .getPrice(other_extras)\n        .then(data => {\n          flattenValues.other_extras = flattenValues.other_extras.map(\n            (item, i) => ({\n              ...item,\n              price: data.other_extras[i].price,\n            })\n          )\n          actions.setValues(flattenValues)\n          notifyOnChange(flattenValues)\n        })\n        .catch(error => {\n          actions.setStatus(error.message)\n          if (error.formikErrors) {\n            actions.setErrors(error.formikErrors)\n          }\n        })\n    },\n    [xhr, notifyOnChange]\n  )\n  // this will help us identify if we should fetch the price for onChange or not\n  // we need this because, changing the given price also triggers the fetch prices\n  // and which onResolve, changes the given price back to calculated price\n  const shouldFetchPricesOnChange = useRef(true)\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(value, actions) =>\n        onSubmit(value, actions).then(() => {\n          actions.setSubmitting(false)\n        })\n      }\n      render={({\n        isSubmitting,\n        values,\n        setFieldValue,\n      }: FormikProps<ExtraServicesParams>) => {\n        return (\n          <Form noValidate>\n            <FieldArray\n              name=\"other_extras\"\n              render={({ name, push, remove }) => (\n                <div>\n                  {values.other_extras.map((quote_extra, index) => (\n                    <div key={index} className=\"border-gray-300 border-b-4\">\n                      <Grid>\n                        <Col>\n                          <FormikFormGroup\n                            name={`${name}.${index}.service`}\n                            render={({\n                              field,\n                            }: FieldProps<ExtraServicesParams>) => (\n                              <SelectOtherExtraServices\n                                {...field}\n                                label=\"Service\"\n                                placeholder=\"Select or add a service...\"\n                                required\n                                creatable\n                                fetchOnMount\n                                onChange={(value, name) => {\n                                  setFieldValue(name, value)\n                                }}\n                              />\n                            )}\n                          />\n                        </Col>\n                        <Col>\n                          <InputField\n                            label=\"Price\"\n                            name={`${name}.${index}.price`}\n                            type=\"number\"\n                            placeholder=\"3000\"\n                            min={0}\n                          />\n                        </Col>\n                        <Col>\n                          {bookingFrom && bookingTo ? (\n                            <FormikFormGroup\n                              name={`${name}.${index}.date`}\n                              render={({\n                                field,\n                              }: FieldProps<ExtraServicesParams>) => (\n                                <Select\n                                  {...field}\n                                  label=\"Date\"\n                                  options={bookingDates}\n                                  searchable={false}\n                                  placeholder=\"Select a date...\"\n                                  required\n                                  value={bookingDates.find(\n                                    d => d.name === quote_extra.date\n                                  )}\n                                  onChange={(startDate, name) => {\n                                    setFieldValue(name, startDate.name)\n                                  }}\n                                />\n                              )}\n                            />\n                          ) : (\n                            <DatePicker\n                              label=\"Date\"\n                              name={`${name}.${index}.date`}\n                              required\n                            />\n                          )}\n                        </Col>\n                        <Col>\n                          <InputField\n                            name={`${name}.${index}.comments`}\n                            label=\"Comments\"\n                            placeholder=\"Any comments regarding service\"\n                          />\n                        </Col>\n                        <Col className=\"pt-4 border-l text-right\">\n                          <ButtonGroup>\n                            <Button\n                              className=\"btn--secondary\"\n                              onClick={() => push(quote_extra)}\n                            >\n                              + Duplicate\n                            </Button>\n                            <Button\n                              className=\"btn--secondary\"\n                              onClick={() => remove(index)}\n                            >\n                              &times; Remove\n                            </Button>\n                          </ButtonGroup>\n                        </Col>\n                      </Grid>\n                    </div>\n                  ))}\n                  <div className=\"mt-4\">\n                    <Button\n                      onClick={() => push(INITIAL_VALUES.other_extras[0])}\n                    >\n                      + Add {values.other_extras.length ? \"Another\" : \"\"} Quote\n                      Extra Service\n                    </Button>\n                  </div>\n                </div>\n              )}\n            />\n            <OnFormChange\n              onChange={(formik: FormikProps<ExtraServicesParams>) => {\n                notifyOnChange(formik.values)\n                if (!shouldFetchPricesOnChange.current) {\n                  shouldFetchPricesOnChange.current = true\n                  return\n                }\n                if (formik.isSubmitting) return\n                validationSchema\n                  .validate(formik.values)\n                  .then(async () => {\n                    if (formik.isSubmitting) return\n                    formik.setSubmitting(true)\n                    return onSubmit(formik.values, formik).then(() => {\n                      formik.setSubmitting(false)\n                    })\n                  })\n                  .catch(() => {})\n              }}\n            />\n            <button type=\"submit\" className=\"invisible\">\n              Get Price\n            </button>\n          </Form>\n        )\n      }}\n    />\n  )\n})\n\nexport default function ExtraServices({  }: RouteComponentProps) {\n  const [price, setPrice] = useState<number>(0)\n  return (\n    <div>\n      <div className=\"flex align-items-center mb-8\">\n        <Link\n          to=\"..\"\n          className=\"mr-4 text-blue-600 hover:text-blue-800 text-lg px-2 border rounded-full\"\n        >\n          <Icons.ChevronDownIcon className=\"rotate-90\" />\n        </Link>\n        <h3 className=\"m-0\">Calculate Quote Extra Service Prices</h3>\n      </div>\n      <p>\n        Add any extra services like off road dinner, side tracking etc that are\n        with overall trip package\n      </p>\n      <ExtraServicesForm onChange={price => setPrice(price)} />\n      <footer className=\"mt-8 pb-8\">\n        <h4>\n          <mark>Total Cost Price: {price}</mark>\n        </h4>\n      </footer>\n    </div>\n  )\n}\n","import React, { useState, useCallback, useMemo, useRef } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport { Button, Icons } from \"@tourepedia/ui\"\nimport moment from \"moment\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { ITrip, IQuote } from \"./store\"\nimport {\n  CalculatePriceForm as CalculateHotelPrice,\n  ExtraServicesForm as ExtraHotelServices,\n} from \"./../HotelPrices\"\nimport {\n  CalculatePriceForm as CalculateCabPrice,\n  ExtraServicesForm as ExtraTransportServices,\n} from \"./../TransportServicePrices\"\nimport { ExtraServicesForm as ExtraQuoteServices } from \"./QuoteExtras\"\nimport { Input, FormGroup } from \"./../Shared/InputField\"\nimport { numberToLocalString } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async saveQuote(tripId: string | number, data: any): Promise<IQuote> {\n      return xhr\n        .post(`/trips/${tripId}/quotes`, data)\n        .then(resp => resp.data.quote)\n    },\n  }\n}\n\ninterface NewQuoteProps extends RouteComponentProps, XHRProps {\n  trip: ITrip\n}\n\nfunction NewQuote({ xhr, navigate, trip, location }: NewQuoteProps) {\n  const quote: IQuote | undefined =\n    location && location.state && location.state.quote\n  const [hotelPrice, setHotelPrice] = useState<number>(0)\n  const [cabPrice, setCabPrice] = useState<number>(0)\n  const [hotels, setHotels] = useState<any>([])\n  const [hotelExtras, setHotelExtras] = useState<any>([])\n  const [hotelExtrasPrice, setHotelExtrasPrice] = useState<number>(0)\n  const [transportExtrasPrice, setTransportExtrasPrice] = useState<number>(0)\n  const [otherExtrasPrice, setOtherExtrasPrice] = useState<number>(0)\n  const [cabs, setCabs] = useState<any>([])\n  const [transportExtras, setTransportExtras] = useState<any>([])\n  const [otherExtras, setOtherExtras] = useState<any>([])\n  const [comments, setComments] = useState<string>(\n    quote ? quote.comments || \"\" : \"\"\n  )\n  const [errors, setErrors] = useState<any>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const saveQuote = useCallback(() => {\n    setErrors(null)\n    XHR(xhr)\n      .saveQuote(trip.id, {\n        total_price:\n          hotelPrice +\n          cabPrice +\n          hotelExtrasPrice +\n          transportExtrasPrice +\n          otherExtrasPrice,\n        hotels,\n        cabs,\n        hotel_extras: hotelExtras,\n        transport_extras: transportExtras,\n        other_extras: otherExtras,\n        comments,\n      })\n      .then(() => {\n        navigate && navigate(\"../quotes\")\n      })\n      .catch(e => {\n        setErrors(e)\n        const document = containerRef.current\n        if (document) {\n          const buttons: NodeListOf<\n            HTMLButtonElement\n          > = document.querySelectorAll(\"[type='submit']\")\n          buttons.forEach(btn =>\n            typeof btn.click === \"function\" ? btn.click() : null\n          )\n          setTimeout(() => {\n            const document = containerRef.current\n            if (document) {\n              const errors: NodeListOf<\n                HTMLButtonElement\n              > = document.querySelectorAll(\"[class='error-message']\")\n              if (errors.length) {\n                if (errors[0].scrollIntoView) {\n                  errors[0].scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\",\n                  })\n                } else {\n                  window.alert(e.message)\n                }\n              }\n            }\n          }, 300)\n        }\n      })\n  }, [\n    xhr,\n    trip,\n    navigate,\n    comments,\n    hotels,\n    hotelPrice,\n    cabs,\n    cabPrice,\n    hotelExtras,\n    hotelExtrasPrice,\n    transportExtras,\n    transportExtrasPrice,\n    otherExtras,\n    otherExtrasPrice,\n  ])\n  const handleHotelChange = useCallback(\n    (hotelPrice, hotels) => {\n      setErrors(null)\n      setHotelPrice(hotelPrice)\n      setHotels(hotels)\n    },\n    [setHotelPrice, setHotels]\n  )\n  const handleHotelExtrasChange = useCallback(\n    (hotelExtrasPrice, hotelExtras) => {\n      setErrors(null)\n      setHotelExtrasPrice(hotelExtrasPrice)\n      setHotelExtras(hotelExtras)\n    },\n    [setHotelExtras, setHotelExtras]\n  )\n  const handleCabChange = useCallback(\n    (cabPrice, cabs) => {\n      setErrors(null)\n      setCabPrice(cabPrice)\n      setCabs(cabs)\n    },\n    [setCabPrice, setCabs]\n  )\n  const handleTransportExtrasChange = useCallback(\n    (price, extras) => {\n      setErrors(null)\n      setTransportExtrasPrice(price)\n      setTransportExtras(extras)\n    },\n    [setTransportExtrasPrice, setTransportExtras]\n  )\n\n  const handleOtherExtrasChange = useCallback(\n    (price, extras) => {\n      setErrors(null)\n      setOtherExtrasPrice(price)\n      setOtherExtras(extras)\n    },\n    [setOtherExtrasPrice, setOtherExtras]\n  )\n\n  const initialQuote = useMemo(() => {\n    return {\n      hotels: quote\n        ? {\n            hotels: quote.hotels.map(\n              ({\n                checkin,\n                checkout,\n                room_type,\n                adults_with_extra_bed,\n                children_with_extra_bed,\n                children_without_extra_bed,\n                no_of_rooms,\n                ...hotel\n              }) => ({\n                ...hotel,\n                start_date: moment\n                  .utc(checkin)\n                  .local()\n                  .format(\"YYYY-MM-DD\"),\n                no_of_nights:\n                  moment.utc(checkout).diff(moment.utc(checkin), \"days\") + 1,\n                edited_given_price:\n                  hotel.calculated_price !== hotel.given_price,\n                rooms_detail: {\n                  room_type,\n                  adults_with_extra_bed,\n                  children_with_extra_bed,\n                  children_without_extra_bed,\n                  no_of_rooms,\n                },\n              })\n            ),\n          }\n        : undefined,\n      cabs: quote\n        ? {\n            cabs: quote.cabs.map(({ from_date, to_date, ...cab }) => ({\n              edited_given_price: cab.calculated_price !== cab.given_price,\n              start_date: moment\n                .utc(from_date)\n                .local()\n                .format(\"YYYY-MM-DD\"),\n              no_of_days:\n                moment.utc(to_date).diff(moment.utc(from_date), \"days\") + 1,\n              ...cab,\n            })),\n          }\n        : undefined,\n      hotel_extras: quote\n        ? {\n            hotel_extras: quote.hotel_extras.map(\n              ({ given_price, date, ...others }) => ({\n                ...others,\n                price: given_price,\n                date: date\n                  ? moment\n                      .utc(date)\n                      .local()\n                      .format(\"YYYY-MM-DD\")\n                  : undefined,\n              })\n            ),\n          }\n        : undefined,\n      transport_extras: quote\n        ? {\n            transport_extras: quote.transport_extras.map(\n              ({ given_price, date, ...others }) => ({\n                ...others,\n                price: given_price,\n                date: date\n                  ? moment\n                      .utc(date)\n                      .local()\n                      .format(\"YYYY-MM-DD\")\n                  : undefined,\n              })\n            ),\n          }\n        : undefined,\n      other_extras: quote\n        ? {\n            other_extras: quote.other_extras.map(\n              ({ given_price, date, ...others }) => ({\n                ...others,\n                price: given_price,\n                date: date\n                  ? moment\n                      .utc(date)\n                      .local()\n                      .format(\"YYYY-MM-DD\")\n                  : undefined,\n              })\n            ),\n          }\n        : undefined,\n    }\n  }, [quote])\n  const bookingFrom = moment\n    .utc(trip.start_date)\n    .local()\n    .format(\"YYYY-MM-DD HH:mm:ss\")\n  const bookingTo = moment\n    .utc(trip.end_date)\n    .local()\n    .format(\"YYYY-MM-DD HH:mm:ss\")\n  return (\n    <div className=\"pb-8 mt-4\" ref={containerRef}>\n      <h3 className=\"mb-8\">Create a new quote</h3>\n      <section className=\"mb-16\">\n        <header className=\"flex\">\n          <div className=\"mr-2\">\n            <span className=\"inline-flex w-12 h-12 align-items-center justify-content-center bg-primary-600 text-white rounded-full\">\n              <Icons.BedIcon />\n            </span>\n          </div>\n          <div>\n            <h4>Hotels</h4>\n            <p>\n              Please fill hotel details and get the respective prices. Update\n              the given price if necessary.\n            </p>\n          </div>\n        </header>\n        <div className=\"bg-white rounded shadow\">\n          <div className=\"mb-8 px-4\">\n            <CalculateHotelPrice\n              bookingFrom={bookingFrom}\n              bookingTo={moment(bookingTo)\n                .subtract(1, \"day\")\n                .format(\"YYYY-MM-DD HH:mm:ss\")}\n              initialValues={initialQuote.hotels}\n              onChange={handleHotelChange}\n            />\n          </div>\n          <hr />\n          <div className=\"p-4\">\n            <h5>Any extra services in hotels</h5>\n            <p>\n              Add any extra services for hotels e.g. special dinner, honeymoon\n              cake etc.\n            </p>\n            <ExtraHotelServices\n              bookingFrom={bookingFrom}\n              bookingTo={bookingTo}\n              initialValues={initialQuote.hotel_extras}\n              onChange={handleHotelExtrasChange}\n            />\n          </div>\n        </div>\n        <footer>\n          <mark className=\"inline-block\">\n            Total price for Accommodation:{\" \"}\n            {numberToLocalString(hotelPrice + hotelExtrasPrice)}\n          </mark>\n        </footer>\n      </section>\n      <section className=\"mb-16\">\n        <header className=\"flex\">\n          <div className=\"mr-2\">\n            <span className=\"inline-flex w-12 h-12 align-items-center justify-content-center bg-primary-600 text-white rounded-full\">\n              <Icons.BusIcon />\n            </span>\n          </div>\n          <div>\n            <h4>Transportation</h4>\n            <p>\n              Please fill the transportation details and click on get price to\n              get the corresponding prices. Update given prices if necessary.\n            </p>\n          </div>\n        </header>\n        <div className=\"bg-white rounded shadow\">\n          <div className=\"mb-8 px-4\">\n            <CalculateCabPrice\n              bookingFrom={bookingFrom}\n              bookingTo={bookingTo}\n              initialValues={initialQuote.cabs}\n              onChange={handleCabChange}\n            />\n          </div>\n          <hr />\n          <div className=\"p-4\">\n            <h5>Any extra services in transportation</h5>\n            <p>\n              Add any extra services like any side destination trip that is\n              provided only per customer request\n            </p>\n            <ExtraTransportServices\n              bookingFrom={bookingFrom}\n              bookingTo={bookingTo}\n              initialValues={initialQuote.transport_extras}\n              onChange={handleTransportExtrasChange}\n            />\n          </div>\n        </div>\n        <footer>\n          <mark className=\"inline-block\">\n            Total price for Transportation:{\" \"}\n            {numberToLocalString(cabPrice + transportExtrasPrice)}\n          </mark>\n        </footer>\n      </section>\n      <section className=\"mb-16\">\n        <header className=\"flex\">\n          <div className=\"mr-2\">\n            <span className=\"inline-flex w-12 h-12 align-items-center justify-content-center bg-primary-600 text-white rounded-full\">\n              <Icons.StarEmptyIcon />\n            </span>\n          </div>\n          <div>\n            <h4>Any extra service for this trip</h4>\n            <p>\n              Add any extra services like off road dinner, side tracking etc\n              that are associated with overall trip package\n            </p>\n          </div>\n        </header>\n        <div className=\"bg-white rounded p-4 shadow\">\n          <ExtraQuoteServices\n            bookingFrom={bookingFrom}\n            bookingTo={bookingTo}\n            initialValues={initialQuote.other_extras}\n            onChange={handleOtherExtrasChange}\n          />\n        </div>\n        <footer>\n          <mark className=\"inline-block\">\n            Extra Stuff Price: {numberToLocalString(otherExtrasPrice)}\n          </mark>\n        </footer>\n      </section>\n      <FormGroup>\n        <label>Any comments for this quote</label>\n        <Input\n          name=\"comments\"\n          as=\"textarea\"\n          value={comments}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setComments(e.target.value)\n          }\n          placeholder=\"Any comments regarding customer request or anything special about this quote or anything else...\"\n          maxLength={191}\n        />\n      </FormGroup>\n      <footer className=\"mt-16\">\n        <div className=\"mb-4\">\n          <mark className=\"inline-block font-bold text-2xl\">\n            Total Cost Price:{\" \"}\n            {numberToLocalString(\n              hotelPrice +\n                cabPrice +\n                hotelExtrasPrice +\n                transportExtrasPrice +\n                otherExtrasPrice\n            )}\n          </mark>\n        </div>\n        <Button className=\"w-full py-2 text-lg\" primary onClick={saveQuote}>\n          Create Quote\n        </Button>\n        {errors ? <p className=\"text-red-700 my-2\">{errors.message}</p> : null}\n      </footer>\n    </div>\n  )\n}\n\nexport default withXHR(NewQuote)\n","import React from \"react\"\nimport { Formik, Form } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport { SelectTags, XHR } from \"./List\"\nimport { ITag } from \"./store\"\nimport { withXHR, XHRProps } from \"../xhr\"\nimport { FormikFormGroup } from \"../Shared/InputField\"\n\nexport interface EditTagsProps {\n  tags?: Array<ITag>\n  type: \"trip\"\n  itemId: number\n  onCancel: () => void\n  onSuccess: () => void\n}\n\nexport default withXHR(function EditTags({\n  type,\n  itemId,\n  xhr,\n  tags = [],\n  onCancel,\n  onSuccess,\n}: XHRProps & EditTagsProps) {\n  return (\n    <Formik\n      initialValues={{ items: [itemId], tags }}\n      onSubmit={(values, actions) => {\n        actions.setStatus()\n        XHR(xhr, type)\n          .storeTags(values.items, values.tags.map(t => t.name))\n          .then(() => {\n            actions.setSubmitting(false)\n            onSuccess()\n          })\n          .catch(e => {\n            actions.setStatus(e.message)\n            if (e.formikErrors) {\n              actions.setErrors(e.formikErrors)\n            }\n            actions.setSubmitting(false)\n          })\n      }}\n      render={({ setFieldValue, isSubmitting, status }) => (\n        <Form noValidate>\n          <fieldset>\n            <legend>Edit Tags</legend>\n            {status ? <p className=\"error-message\">{status}</p> : null}\n            <FormikFormGroup\n              name=\"tags\"\n              render={({ field }) => (\n                <SelectTags\n                  {...field}\n                  label=\"Select existing or create new tags\"\n                  type={type}\n                  onChange={(value, name) => {\n                    setFieldValue(name, value)\n                  }}\n                />\n              )}\n            />\n            <footer>\n              <Button type=\"submit\" primary disabled={isSubmitting}>\n                Save\n              </Button>\n              <Button\n                disabled={isSubmitting}\n                onClick={() => {\n                  onCancel()\n                }}\n              >\n                Cancel\n              </Button>\n            </footer>\n          </fieldset>\n        </Form>\n      )}\n    />\n  )\n})\n","import React from \"react\"\nimport { Formik, Form } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport { SelectUsers, store as userStore } from \"./../Users\"\nimport { useXHR } from \"../xhr\"\nimport { FormikFormGroup } from \"../Shared/InputField\"\n\nexport interface EditOwnersProps {\n  users?: Array<userStore.IUser>\n  type: \"sales_team\" | \"operations_team\"\n  itemId: number\n  onCancel: () => void\n  onSuccess: () => void\n}\n\nexport default function EditOwners({\n  type,\n  itemId,\n  users = [],\n  onCancel,\n  onSuccess,\n}: EditOwnersProps) {\n  const xhr = useXHR()\n  return (\n    <Formik\n      initialValues={{ items: [itemId], users }}\n      onSubmit={(values, actions) => {\n        actions.setStatus()\n        xhr\n          .put(\"/trip-owners\", {\n            items: values.items,\n            users: values.users.map(u => u.id),\n            type,\n          })\n          .then(() => {\n            actions.setSubmitting(false)\n            onSuccess()\n          })\n          .catch(e => {\n            actions.setStatus(e.message)\n            if (e.formikErrors) {\n              actions.setErrors(e.formikErrors)\n            }\n            actions.setSubmitting(false)\n          })\n      }}\n      render={({ setFieldValue, isSubmitting, status }) => (\n        <Form noValidate>\n          <fieldset>\n            <legend>Edit Owners</legend>\n            {status ? <p className=\"error-message\">{status}</p> : null}\n            <FormikFormGroup\n              name=\"users\"\n              render={({ field }) => (\n                <SelectUsers\n                  {...field}\n                  label=\"Select User(s)\"\n                  onChange={(value, name) => {\n                    setFieldValue(name, value)\n                  }}\n                />\n              )}\n            />\n            <footer>\n              <Button type=\"submit\" primary disabled={isSubmitting}>\n                Save\n              </Button>\n              <Button\n                disabled={isSubmitting}\n                onClick={() => {\n                  onCancel()\n                }}\n              >\n                Cancel\n              </Button>\n            </footer>\n          </fieldset>\n        </Form>\n      )}\n    />\n  )\n}\n","import React, { Fragment } from \"react\"\nimport moment from \"moment\"\nimport classNames from \"classnames\"\nimport { Badge, Table, Dialog, Button, useDialog } from \"@tourepedia/ui\"\nimport { Formik, Form } from \"formik\"\nimport { AxiosInstance } from \"axios\"\n\nimport { store as paymentStore } from \"./../Payments\"\nimport { ITrip } from \"./store\"\nimport { $PropertyType } from \"utility-types\"\nimport { numberToLocalString } from \"./../utils\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\nimport { RouteComponentProps } from \"@reach/router\"\n\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async logTransaction(data: any): Promise<paymentStore.IPayment<any>> {\n      return xhr\n        .post(\"/payment-transactions\", data)\n        .then(resp => resp.data.data)\n    },\n  }\n}\n\nexport default function Payments({\n  trip,\n}: { trip: ITrip } & RouteComponentProps) {\n  const { customer_payments, hotel_payments, cab_payments } = trip\n  return (\n    <section className=\"bg-white p-4\">\n      {customer_payments ? (\n        <CustomerPayments payments={customer_payments} />\n      ) : null}\n      {hotel_payments ? <HotelPayments payments={hotel_payments} /> : null}\n      {cab_payments ? <CabPayments payments={cab_payments} /> : null}\n    </section>\n  )\n}\n\nfunction InstalmentStatus({\n  dueAmount,\n  dueDate,\n}: {\n  dueAmount: number\n  dueDate: string\n}) {\n  let state: \"Due\" | \"Paid\" | \"Overdue\" = \"Due\"\n  if (dueAmount <= 0) {\n    state = \"Paid\"\n  } else {\n    const due_date = moment.utc(dueDate).local()\n    const today = moment()\n    if (due_date.isBefore(today)) {\n      state = \"Overdue\"\n    }\n  }\n  if (state === \"Due\") {\n    return null\n  }\n  return (\n    <Badge\n      className={classNames(\n        state === \"Paid\" &&\n          \"bg-green-200 text-green-800 border border-green-300\",\n        state === \"Overdue\" && \"bg-red-200 text-red-800 border border-red-300\"\n      )}\n    >\n      {state}\n    </Badge>\n  )\n}\n\nfunction DateString({ date }: { date: string }) {\n  return (\n    <span>\n      {moment\n        .utc(date)\n        .local()\n        .format(\"DD MMM, YYYY\")}\n    </span>\n  )\n}\nfunction Amount({ amount }: { amount: number }) {\n  return <span>{numberToLocalString(amount)}</span>\n}\n\nfunction Due({ date, amount }: { date: string; amount: number }) {\n  return (\n    <div>\n      <DateString date={date} />\n      <br />\n      <InstalmentStatus dueAmount={amount} dueDate={date} />\n    </div>\n  )\n}\n\nfunction Transactions({\n  instalment,\n}: {\n  instalment: paymentStore.IInstalment\n}) {\n  return (\n    <div>\n      {instalment.transactions && instalment.transactions.length ? (\n        <div>\n          {instalment.transactions.map(transaction => (\n            <div key={transaction.id}>\n              {moment\n                .utc(transaction.date)\n                .local()\n                .format(\"DD MMM, YYYY [at] hh:mm A\")}\n              {\" - \"}\n              {numberToLocalString(transaction.amount)} /-\n              {transaction.comments ? (\n                <blockquote>{transaction.comments}</blockquote>\n              ) : null}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>Nothing yet</p>\n      )}\n      {instalment.due_amount > 0 ? (\n        <LogTransaction instalment={instalment} />\n      ) : null}\n    </div>\n  )\n}\nfunction CabPayments({\n  payments,\n}: {\n  payments: $PropertyType<ITrip, \"cab_payments\">\n}) {\n  return payments && payments.length ? (\n    <Table\n      caption=\"Payments for Transportation\"\n      headers={[\n        \"Transportation\",\n        \"Due Date\",\n        \"Due\",\n        \"Total\",\n        \"Paid\",\n        \"Transactions\",\n      ]}\n      striped={false}\n      bordered\n      autoWidth\n    >\n      <tbody>\n        {payments.map(payment => {\n          const cabType = payment.paymentable.cab_type\n          const transportService = payment.paymentable.transport_service\n          return (\n            <Fragment key={payment.id}>\n              {payment.instalments.map((instalment, i, instalments) => (\n                <tr key={instalment.id}>\n                  {i === 0 ? (\n                    <td\n                      rowSpan={instalments.length}\n                      className=\"vertical-align-middle\"\n                    >\n                      <b>{transportService.name}</b>\n                      <br />\n                      <small>{cabType.name}</small>\n                    </td>\n                  ) : null}\n                  <td>\n                    <Due\n                      date={instalment.due_date}\n                      amount={instalment.due_amount}\n                    />\n                  </td>\n                  <td>\n                    <Amount amount={instalment.due_amount} />\n                  </td>\n                  <td>\n                    <Amount amount={instalment.amount} />\n                  </td>\n                  <td>\n                    <Amount amount={instalment.paid_amount} />\n                  </td>\n                  <td>\n                    <Transactions instalment={instalment} />\n                  </td>\n                </tr>\n              ))}\n            </Fragment>\n          )\n        })}\n      </tbody>\n    </Table>\n  ) : null\n}\n\nfunction CustomerPayments({\n  payments,\n}: {\n  payments: $PropertyType<ITrip, \"customer_payments\">\n}) {\n  return payments && payments.length ? (\n    <Table\n      autoWidth\n      caption={\"Payments towards customer\"}\n      headers={[\"Due Date\", \"Due\", \"Total\", \"Paid\", \"Transactions\"]}\n      alignCols={{ 2: \"right\", 3: \"right\" }}\n      bordered\n      rows={payments\n        .reduce(\n          (\n            instalments: Array<paymentStore.IInstalment>,\n            payment\n          ): Array<paymentStore.IInstalment> =>\n            instalments.concat(payment.instalments),\n          []\n        )\n        .map(instalment => [\n          <Due date={instalment.due_date} amount={instalment.due_amount} />,\n          <Amount amount={instalment.due_amount} />,\n          <Amount amount={instalment.amount} />,\n          <Amount amount={instalment.paid_amount} />,\n          <Transactions instalment={instalment} />,\n        ])}\n    />\n  ) : null\n}\nfunction HotelPayments({\n  payments,\n}: {\n  payments: $PropertyType<ITrip, \"hotel_payments\">\n}) {\n  return payments && payments.length ? (\n    <Table\n      caption=\"Payments for accomodation\"\n      headers={[\n        \"Hotel\",\n        \"Due Date\",\n        \"Due Amount\",\n        \"Total Amount\",\n        \"Paid Amount\",\n        \"Transactions\",\n      ]}\n      striped={false}\n      bordered\n      autoWidth\n    >\n      <tbody>\n        {payments.map(payment => {\n          const hotel = payment.paymentable.hotel\n          return (\n            <Fragment key={payment.id}>\n              {payment.instalments.map((instalment, i, instalments) => (\n                <tr key={instalment.id}>\n                  {i === 0 ? (\n                    <td\n                      rowSpan={instalments.length}\n                      className=\"vertical-align-middle\"\n                    >\n                      <b>{hotel.name}</b>\n                      <br />\n                      <small>\n                        {hotel.location.short_name}, {hotel.stars} Star\n                      </small>\n                    </td>\n                  ) : null}\n                  <td>\n                    <Due\n                      date={instalment.due_date}\n                      amount={instalment.due_amount}\n                    />\n                  </td>\n                  <td>\n                    <Amount amount={instalment.due_amount} />\n                  </td>\n                  <td>\n                    <Amount amount={instalment.amount} />\n                  </td>\n                  <td>\n                    <Amount amount={instalment.amount} />\n                  </td>\n                  <td>\n                    <Transactions instalment={instalment} />\n                  </td>\n                </tr>\n              ))}\n            </Fragment>\n          )\n        })}\n      </tbody>\n    </Table>\n  ) : null\n}\n\nconst LogTransaction = withXHR(function LogTransaction({\n  instalment,\n  xhr,\n}: XHRProps & { instalment: paymentStore.IInstalment }) {\n  const [dialogOpen, open, close] = useDialog()\n  return (\n    <>\n      <Button onClick={open}>Add</Button>\n      <Dialog open={dialogOpen} onClose={close} closeButton>\n        <Dialog.Header>\n          <Dialog.Title>Log Transaction</Dialog.Title>\n        </Dialog.Header>\n        <Dialog.Body>\n          <p>\n            <mark>INR {numberToLocalString(instalment.due_amount)}</mark> is due\n            by\n            <mark>\n              {moment\n                .utc(instalment.due_date)\n                .local()\n                .format(\"DD MMM, YYYY\")}\n            </mark>\n          </p>\n          <Formik\n            initialValues={{\n              amount: instalment.due_amount,\n              payment_mode: \"netbanking\",\n              comments: \"\",\n            }}\n            onSubmit={({ amount, comments, payment_mode }, actions) => {\n              actions.setStatus()\n              XHR(xhr)\n                .logTransaction({\n                  instalment_id: instalment.id,\n                  amount,\n                  payment_mode,\n                  comments,\n                })\n                .then(() => {\n                  actions.setSubmitting(false)\n                  window.location = window.location\n                })\n                .catch(e => {\n                  actions.setStatus(e.message)\n                  if (e.formikErrors) {\n                    actions.setErrors(e.formikErrors)\n                  }\n                  actions.setSubmitting(false)\n                })\n            }}\n            render={({ isSubmitting, status }) => (\n              <Form noValidate>\n                {status ? <p className=\"error\">{status}</p> : null}\n                <InputField name=\"amount\" label=\"Paid Amount (INR)\" required />\n                <InputField\n                  as=\"select\"\n                  name=\"payment_mode\"\n                  label=\"Payment Mode\"\n                  required\n                >\n                  <option value=\"cash\">Cash</option>\n                  <option value=\"netbanking\">Netbanking</option>\n                  <option value=\"upi\">UPI</option>\n                  <option value=\"others\">Others</option>\n                </InputField>\n                <InputField\n                  name=\"comments\"\n                  as=\"textarea\"\n                  label=\"Comments\"\n                  placeholder=\"Any comments consisting reference id or payment details\"\n                />\n                <Dialog.Footer>\n                  <Button primary disabled={isSubmitting} type=\"submit\">\n                    Update\n                  </Button>\n                  <Button onClick={close}>Cancel</Button>\n                </Dialog.Footer>\n              </Form>\n            )}\n          />\n        </Dialog.Body>\n      </Dialog>\n    </>\n  )\n})\n","import React, { useEffect } from \"react\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\nimport { Icons, Button, useFetchState, Dialog, useDialog } from \"@tourepedia/ui\"\nimport { Formik, Form, FormikProps, FormikActions, FieldArray } from \"formik\"\nimport * as Validator from \"yup\"\n\nimport { InputField } from \"./../Shared/InputField\"\nimport { ITrip } from \"./store\"\nimport { Quote } from \"./Quotes\"\nimport { GivenQuote, XHR as GiveQuotesXHR, IInstalment } from \"./GivenQuotes\"\nimport { useXHR } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport Spinner from \"../Shared/Spinner\"\nimport { numberToLocalString } from \"./../utils\"\nimport { RouteComponentProps } from \"@reach/router\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async convertTrip(data: any): Promise<ITrip> {\n      return xhr.post(\"/converted-trips\", data).then(resp => resp.data.data)\n    },\n  }\n}\n\nfunction LatestGivenQuote({ trip }: { trip: ITrip } & RouteComponentProps) {\n  const xhr = useXHR()\n  const [isConvertVisible, showConvert, hideConvert] = useDialog()\n  const { latest_given_quote, converted_at } = trip\n  return latest_given_quote ? (\n    <div className=\"p-4 bg-white rounded-b\">\n      <h4 className=\"mb-4 pb-2 text-gray-600 border-b\">\n        {converted_at ? \"Quote used for conversion\" : \"Latest Given Quote\"}\n      </h4>\n      <GivenQuote\n        givenQuote={latest_given_quote}\n        readOnly={!!converted_at}\n        showHotelBookingStatus={!!converted_at}\n      />\n      <ConvertTrip\n        trip={trip}\n        isConvertVisible={isConvertVisible}\n        hideConvert={hideConvert}\n        onConvert={(data: any) => XHR(xhr).convertTrip(data)}\n      />\n      {converted_at ? null : (\n        <footer>\n          <Button onClick={showConvert} primary>\n            Mark as converted\n          </Button>\n        </footer>\n      )}\n    </div>\n  ) : null\n}\n\nconst tripConversionValidationSchema = Validator.object()\n  .shape({\n    instalments: Validator.array()\n      .of(\n        Validator.object().shape({\n          due_date: Validator.string().required(\n            \"Instalment due date is required\"\n          ),\n          amount: Validator.number()\n            .positive(\"Instalment amount should a positive number\")\n            .required(\"Instalment amount is required\"),\n          percentage: Validator.number()\n            .positive(\"Percentage should be a positive number\")\n            .required(\"Percentage field is required\"),\n        })\n      )\n      .min(1, \"Atleast one instalment should is required\"),\n    comments: Validator.string(),\n    details_verified: Validator.boolean().required(\n      \"Please verify the details before conversion\"\n    ),\n  })\n  .required(\"Conversion fields are required\")\n\ninterface ITripConversionSchema {\n  details_verified: boolean\n  instalments: { percentage: number; amount: number; due_date: string }[]\n  comments: string\n}\n\nfunction ConvertTrip({\n  trip,\n  isConvertVisible,\n  hideConvert,\n  onConvert,\n}: {\n  trip: ITrip\n  isConvertVisible: boolean\n  hideConvert: () => void\n  onConvert: (data: any) => Promise<any>\n}) {\n  const {\n    id,\n    locations,\n    latest_given_quote,\n    start_date,\n    end_date,\n    no_of_adults,\n    children,\n  } = trip\n  const xhr = useXHR()\n  const [\n    instalments,\n    fetchInstalments,\n    { isFetching: isFetchingInstalments },\n  ] = useFetchState<IInstalment[]>(\n    async () => {\n      if (!latest_given_quote) {\n        return Promise.reject(\"No given quote for the trip\")\n      }\n      return GiveQuotesXHR(xhr)\n        .getInstalments(latest_given_quote.id)\n        .then(resp => resp.data)\n    },\n    {\n      isFetching: true,\n    }\n  )\n  useEffect(() => {\n    if (isConvertVisible) {\n      fetchInstalments()\n    }\n  }, [isConvertVisible])\n  if (!latest_given_quote) return null\n  return (\n    <Dialog open={isConvertVisible} onClose={hideConvert}>\n      <Dialog.Header>\n        <Dialog.Title>Trip Conversion</Dialog.Title>\n      </Dialog.Header>\n      <Dialog.Body>\n        {isFetchingInstalments ? (\n          <Spinner />\n        ) : (\n          <Formik\n            initialValues={{\n              comments: \"\",\n              details_verified: false,\n              instalments: (instalments || []).map(({ amount, due_date }) => ({\n                amount: parseFloat(amount.toFixed(2)),\n                due_date: moment\n                  .utc(due_date)\n                  .local()\n                  .format(\"YYYY-MM-DD\"),\n                percentage: parseFloat(\n                  ((amount * 100) / latest_given_quote.given_price).toFixed(2)\n                ),\n              })),\n            }}\n            validationSchema={tripConversionValidationSchema}\n            onSubmit={(\n              {\n                details_verified,\n                instalments,\n                comments,\n              }: ITripConversionSchema,\n              actions: FormikActions<ITripConversionSchema>\n            ) => {\n              const { given_price } = latest_given_quote\n              actions.setStatus()\n              if (!details_verified) {\n                actions.setStatus(\n                  \"Please verify the details and select the checkbox when done.\"\n                )\n                actions.setSubmitting(false)\n                return\n              }\n              const totalInstalmentAmount = instalments.reduce(\n                (totalAmount, { amount }) => totalAmount + amount,\n                0\n              )\n              if (totalInstalmentAmount < given_price) {\n                actions.setStatus(\n                  `Instalments doesn't sumup(Rs: ${totalInstalmentAmount} /-) with given quote's price (Rs: ${given_price}) /-`\n                )\n                actions.setSubmitting(false)\n                return\n              }\n              if (\n                window.confirm(\n                  `${\n                    totalInstalmentAmount > given_price\n                      ? \"Total instalment is greater then given quote's amount. \"\n                      : \"\"\n                  }Are you sure you want to mark this trip as converted ?`\n                )\n              ) {\n                onConvert({\n                  instalments: instalments.map(\n                    ({ percentage, ...otherData }) => otherData\n                  ),\n                  comments,\n                  trip_id: id,\n                })\n                  .then(() => {\n                    actions.setSubmitting(false)\n                    hideConvert()\n                  })\n                  .catch(error => {\n                    actions.setStatus(error.message)\n                    if (error.formikErrors) {\n                      actions.setErrors(error.formikErrors)\n                    }\n                    actions.setSubmitting(false)\n                    return Promise.reject(error)\n                  })\n              } else {\n                actions.setSubmitting(false)\n              }\n            }}\n            render={({\n              isSubmitting,\n              values,\n              setFieldValue,\n              status,\n            }: FormikProps<ITripConversionSchema>) => (\n              <Form noValidate>\n                <fieldset>\n                  <legend>\n                    <b>Please verify following details with the customer</b>\n                  </legend>\n                  <p>\n                    <b>\n                      Trip to{\" \"}\n                      <mark>{locations.map(l => l.short_name).join(\", \")}</mark>{\" \"}\n                      from{\" \"}\n                      <mark>\n                        {moment\n                          .utc(start_date)\n                          .local()\n                          .format(\"DD MMM, YYYY\")}\n                      </mark>{\" \"}\n                      to{\" \"}\n                      <mark>\n                        {moment\n                          .utc(end_date)\n                          .local()\n                          .format(\"DD MMM, YYYY\")}\n                      </mark>{\" \"}\n                      with{\" \"}\n                      <mark>\n                        {no_of_adults} Adults\n                        {children ? ` and ${children} children` : \"\"}\n                      </mark>{\" \"}\n                      where the package cost is{\" \"}\n                      <mark>\n                        <Icons.RupeeIcon />{\" \"}\n                        {numberToLocalString(latest_given_quote.given_price)} /-\n                      </mark>\n                      .\n                    </b>\n                  </p>\n                  <h5>Given Quote Details</h5>\n                  <hr />\n                  <h6>\n                    Given Price:{\" \"}\n                    <mark>\n                      <Icons.RupeeIcon />{\" \"}\n                      {numberToLocalString(latest_given_quote.given_price)} /-\n                    </mark>\n                  </h6>\n                  <blockquote>\n                    {latest_given_quote.comments ? (\n                      <p>{latest_given_quote.comments}</p>\n                    ) : null}\n                    <em>\n                      on{\" \"}\n                      {moment\n                        .utc(latest_given_quote.created_at)\n                        .local()\n                        .format(\"DD MMM, YYYY [at] hh:mm A\")}{\" \"}\n                      by {latest_given_quote.created_by.name}&lt;\n                      {latest_given_quote.created_by.email}&gt;\n                    </em>\n                  </blockquote>\n                  <Quote quote={latest_given_quote.quote} readOnly />\n                </fieldset>\n                <hr />\n                <fieldset>\n                  <legend>Customer Instalments</legend>\n                  <FieldArray\n                    name=\"instalments\"\n                    render={({ name, push, remove }) => (\n                      <>\n                        <ul className=\"list\">\n                          {values.instalments.map(\n                            (instalment, index, instalments) => (\n                              <li key={index}>\n                                <Grid>\n                                  <Col>\n                                    <InputField\n                                      name={`${name}.${index}.due_date`}\n                                      label=\"Date\"\n                                      type=\"date\"\n                                    />\n                                  </Col>\n                                  <Col>\n                                    <InputField\n                                      label=\"Percentage\"\n                                      name={`${name}.${index}.percentage`}\n                                      onChange={(\n                                        e: React.ChangeEvent<HTMLInputElement>\n                                      ) => {\n                                        setFieldValue(\n                                          `${name}.${index}.amount`,\n                                          (latest_given_quote.given_price *\n                                            parseFloat(\n                                              e.currentTarget.value || \"0\"\n                                            )) /\n                                            100\n                                        )\n                                        setFieldValue(\n                                          e.currentTarget.name,\n                                          e.currentTarget.value\n                                        )\n                                      }}\n                                      type=\"number\"\n                                    />\n                                  </Col>\n                                  <Col>\n                                    <InputField\n                                      label=\"Amount\"\n                                      name={`${name}.${index}.amount`}\n                                      onChange={(\n                                        e: React.ChangeEvent<HTMLInputElement>\n                                      ) => {\n                                        setFieldValue(\n                                          `${name}.${index}.percentage`,\n                                          (100 *\n                                            parseFloat(\n                                              e.currentTarget.value || \"0\"\n                                            )) /\n                                            latest_given_quote.given_price\n                                        )\n                                        setFieldValue(\n                                          e.currentTarget.name,\n                                          e.currentTarget.value\n                                        )\n                                      }}\n                                      type=\"number\"\n                                    />\n                                  </Col>\n                                  <Col className=\"d-flex align-items-center\">\n                                    <div className=\"button-group\">\n                                      <Button\n                                        className=\"btn--secondary\"\n                                        onClick={() => push(instalment)}\n                                      >\n                                        + Duplicate\n                                      </Button>\n                                      {instalments.length > 1 ? (\n                                        <Button\n                                          className=\"btn--secondary\"\n                                          onClick={() => remove(index)}\n                                        >\n                                          &times; Remove\n                                        </Button>\n                                      ) : null}\n                                    </div>\n                                  </Col>\n                                </Grid>\n                              </li>\n                            )\n                          )}\n                        </ul>\n                        <footer>\n                          <Button\n                            className=\"btn--secondary\"\n                            onClick={() => {\n                              const remainingPercentage = Math.max(\n                                100 -\n                                  values.instalments.reduce(\n                                    (totalPercentage, { percentage }) =>\n                                      totalPercentage + percentage,\n                                    0\n                                  ),\n                                0\n                              )\n                              push({\n                                due_date: \"\",\n                                amount:\n                                  (latest_given_quote.given_price *\n                                    remainingPercentage) /\n                                  100,\n                                percentage: remainingPercentage,\n                              })\n                            }}\n                          >\n                            + Add More Instalments\n                          </Button>\n                        </footer>\n                      </>\n                    )}\n                  />\n                </fieldset>\n                <InputField\n                  name=\"comments\"\n                  label=\"Comments\"\n                  as=\"textarea\"\n                  placeholder=\"Any comments regarding verification or prices etc..\"\n                />\n                <InputField\n                  name=\"details_verified\"\n                  type=\"checkbox\"\n                  label=\"Verified travel details with customer ?\"\n                />\n                {status ? <p className=\"error\">{status}</p> : null}\n                <Dialog.Footer>\n                  <Button primary type=\"submit\" disabled={isSubmitting}>\n                    Mark as converted\n                  </Button>\n                  <Button onClick={hideConvert}>Cancel</Button>\n                </Dialog.Footer>\n              </Form>\n            )}\n          />\n        )}\n      </Dialog.Body>\n    </Dialog>\n  )\n}\n\nexport default LatestGivenQuote\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IModelState,\n  IMeta,\n  createReducer,\n} from \"./../model\"\n\nexport const key = \"HOTEL_BOOKING_STAGES_STATE\"\n\nexport interface IHotelBookingStage extends IBaseItem {\n  id: number\n  name: string\n  description: string\n}\n\nexport interface IHotelBookingStages extends IBaseState<IHotelBookingStage> {}\n\nexport interface IState extends IModelState<IHotelBookingStage> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<IHotelBookingStage>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@HOTEL_BOOKING_STAGES/LIST_FETCH_REQUEST\",\n    \"@HOTEL_BOOKING_STAGES/LIST_FETCH_SUCCESS\",\n    \"@HOTEL_BOOKING_STAGES/LIST_FETCH_FAILED\"\n  )<undefined, { data: IHotelBookingStage[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<IHotelBookingStage, IState>(\n  INITIAL_STATE,\n  actions as any\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model<IHotelBookingStage>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { useSelector } from \"react-redux\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { IHotelBookingStage, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getHotelBookingStages(\n      params?: any\n    ): Promise<{ data: IHotelBookingStage[]; meta: any }> {\n      return xhr\n        .get(\"/hotel-booking-stages\", { params })\n        .then(resp => resp.data)\n    },\n  }\n}\n\nexport const getHotelBookingStagesAction = (\n  params?: any\n): ThunkAction<Promise<IHotelBookingStage[]>> => async (\n  dispatch,\n  _,\n  { xhr }\n) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getHotelBookingStages(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useHotelBookingStagesState() {\n  interface StateProps extends IPaginate {\n    hotelBookingStages: IHotelBookingStage[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const hotelBookingStagesSelector = selectors(state)\n    return {\n      ...hotelBookingStagesSelector.meta,\n      isFetching: hotelBookingStagesSelector.isFetching,\n      hotelBookingStages: hotelBookingStagesSelector.get(),\n    }\n  })\n}\n\nfunction useHotelBookingStagesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback(\n    (params?: any) => dispatch(getHotelBookingStagesAction(params)),\n    [dispatch]\n  )\n}\n\nexport function useHotelBookingStages() {\n  return {\n    ...useHotelBookingStagesState(),\n    fetchHotelBookingStages: useHotelBookingStagesFetch(),\n  }\n}\n\nexport default function List(_: RouteComponentProps) {\n  const {\n    hotelBookingStages,\n    total,\n    from,\n    to,\n    isFetching,\n    currentPage,\n    lastPage,\n    fetchHotelBookingStages: getHotelBookingStages,\n  } = useHotelBookingStages()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getHotelBookingStages({ page: currentPage })\n  }, [getHotelBookingStages])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Hotel Booking Stages</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getHotelBookingStages({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getHotelBookingStages({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          bordered\n          striped\n          headers={[\"Name\", \"Description\"]}\n          rows={hotelBookingStages.map(hotelBookingStage => [\n            hotelBookingStage.name,\n            hotelBookingStage.description,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectHotelBookingStageProps\n  extends XHRProps,\n    Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectHotelBookingStages = withXHR<SelectHotelBookingStageProps>(\n  function SelectHotelBookingStages({\n    xhr,\n    ...otherProps\n  }: SelectHotelBookingStageProps) {\n    return (\n      <Async\n        multiple\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getHotelBookingStages({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, Form, FormikProps, FormikActions } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\n\nconst validationSchema = Validator.object().shape({\n  name: Validator.string().required(\"Name field is required\"),\n  description: Validator.string().required(\"Description field is required\"),\n})\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n}\ntype NewItemCredentials = typeof initialValues\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\n\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Hotel Booking Stage</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          xhr\n            .post(\"/hotel-booking-stages\", values)\n            .then(() => {\n              navigate && navigate(`..`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setSubmitting(false)\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<NewItemCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add New Hotel Booking Stage</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                placeholder=\"Booked\"\n                required\n              />\n              <InputField\n                label=\"Description\"\n                name=\"description\"\n                placeholder=\"Hotel Booked\"\n                required\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\nexport default function MealPlansModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Grid>\n        <Col>\n          <h2 className=\"white-space-pre\">Hotel Booking Stages</h2>\n        </Col>\n        <Col className=\"d-flex align-items-center justify-content-end\">\n          <Link to=\"new\" className=\"btn\">\n            New Hotel Booking Stage\n          </Link>\n        </Col>\n      </Grid>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React, { useMemo, useState, Fragment } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport moment from \"moment\"\nimport { Table, Button, Badge, Icons, Dialog } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\nimport { Formik, Form } from \"formik\"\nimport { AxiosInstance } from \"axios\"\nimport pluralize from \"pluralize\"\n\nimport { ITrip, isTripConverted, IQuoteHotel, IGivenQuote } from \"./store\"\nimport {\n  numberToLocalString,\n  joinAttributes,\n  copyNodeToClipboard,\n} from \"../utils\"\nimport { useXHR, XHRLink } from \"../xhr\"\nimport { FormikFormGroup, InputField } from \"./../Shared/InputField\"\nimport { SelectHotelBookingStages } from \"../HotelBookingStages\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport Component from \"../Shared/Component\"\nimport { useAuthUser } from \"../Auth\"\nimport { store as hotelStore } from \"../Hotels\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async changeHotelBookingStage(\n      quoteHotelIds: Array<number>,\n      stageId: number\n    ): Promise<any> {\n      return xhr.patch(\"/quote-hotel-booking-stages\", {\n        items: quoteHotelIds,\n        stage: stageId,\n      })\n    },\n  }\n}\n\nconst quoteHotelStageChangeValidationSchema = Validator.object().shape({\n  stage: Validator.object()\n    .required(\"Stage field is required\")\n    .typeError(\"Stage field is required\"),\n})\n\nexport function QuoteHotelBookingStage({\n  quoteHotels,\n}: {\n  quoteHotels: Array<IQuoteHotel>\n}) {\n  const xhr = useXHR()\n  const quoteHotel = quoteHotels[0]\n  const { latest_booking_stage } = quoteHotel\n  const [showEdit, setShowEdit] = useState<boolean>(false)\n  if (showEdit) {\n    return (\n      <div className=\"text-left\">\n        <Formik\n          initialValues={{ stage: latest_booking_stage }}\n          validationSchema={quoteHotelStageChangeValidationSchema}\n          onSubmit={(values, actions) => {\n            if (!values.stage) {\n              actions.setStatus(\"Stage field is required\")\n              actions.setSubmitting(false)\n              return\n            }\n            actions.setStatus(false)\n            XHR(xhr)\n              .changeHotelBookingStage(\n                quoteHotels.map(quoteHotel => quoteHotel.id),\n                values.stage.id\n              )\n              .then(() => {\n                window.location = window.location\n              })\n              .catch(e => {\n                actions.setStatus(e.message)\n                if (e.formikErrors) {\n                  actions.setErrors(e.formikErrors)\n                }\n                actions.setSubmitting(false)\n              })\n          }}\n          render={({ isSubmitting, setFieldValue }) => (\n            <Form noValidate>\n              <fieldset>\n                <legend>Change Booking Stage</legend>\n                <FormikFormGroup\n                  name=\"stage\"\n                  render={({ field }) => (\n                    <SelectHotelBookingStages\n                      {...field}\n                      label=\"Select the booking stage\"\n                      multiple={false}\n                      fetchOnMount\n                      onChange={(value, name) => setFieldValue(name, value)}\n                    />\n                  )}\n                />\n                <footer>\n                  <Button disabled={isSubmitting} primary type=\"submit\">\n                    Save\n                  </Button>\n                  <Button\n                    className=\"btn--secondary\"\n                    onClick={() => setShowEdit(false)}\n                  >\n                    Cancel\n                  </Button>\n                </footer>\n              </fieldset>\n            </Form>\n          )}\n        />\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div className=\"flex items-center\">\n        <h4>{latest_booking_stage ? latest_booking_stage.name : \"Pending\"}</h4>\n        <button className=\"ml-2\" onClick={() => setShowEdit(true)}>\n          &#9998;\n        </button>\n      </div>\n      {latest_booking_stage ? (\n        <div className=\"text-sm text-gray-600\">\n          {joinAttributes(\n            `by ${latest_booking_stage.pivot.created_by.name}`,\n            moment\n              .utc(latest_booking_stage.pivot.created_at)\n              .local()\n              .fromNow()\n          )}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport function groupByHotel(quote?: IGivenQuote): IQuoteHotel[][] {\n  if (!quote) return []\n  const {\n    quote: { hotels: quoteHotels },\n  } = quote\n  const byHotelId = quoteHotels.reduce<{ [key: string]: Array<IQuoteHotel> }>(\n    (byHotelId, quoteHotel) => {\n      const { hotel } = quoteHotel\n      if (!byHotelId[hotel.id]) {\n        byHotelId[hotel.id] = []\n      }\n      byHotelId[hotel.id].push(quoteHotel)\n      return byHotelId\n    },\n    {}\n  )\n  return Object.keys(byHotelId).reduce<IQuoteHotel[][]>(\n    (groupedQuoteHotels, hotelId: string) => {\n      groupedQuoteHotels.push(byHotelId[hotelId])\n      return groupedQuoteHotels\n    },\n    []\n  )\n}\n\nexport function groupByCheckinCheckout(quoteHotels: Array<IQuoteHotel>) {\n  const mergedQuoteHotels = quoteHotels.reduce<{\n    [key: string]: Array<IQuoteHotel>\n  }>((byCheckinCheckout, quoteHotel) => {\n    const { checkin, checkout } = quoteHotel\n    if (!byCheckinCheckout[`${checkin}-${checkout}`]) {\n      byCheckinCheckout[`${checkin}-${checkout}`] = []\n    }\n    byCheckinCheckout[`${checkin}-${checkout}`].push(quoteHotel)\n    return byCheckinCheckout\n  }, {})\n  return Object.keys(mergedQuoteHotels).reduce<IQuoteHotel[][]>(\n    (groupedQuoteHotels, hotelId: string) => {\n      groupedQuoteHotels.push(mergedQuoteHotels[hotelId])\n      return groupedQuoteHotels\n    },\n    []\n  )\n}\n\nfunction ComposeEmail({\n  // quoteHotels that grouped by checkin and checkout dates for a hotel\n  quoteHotels,\n  trip,\n}: {\n  quoteHotels: IQuoteHotel[][]\n  trip: ITrip\n}) {\n  const { user } = useAuthUser()\n  if (!quoteHotels.length || !user) return null\n  const quoteHotel = quoteHotels[0][0]\n  const { hotel } = quoteHotel\n  const total_given_price = quoteHotels.reduce(\n    (price, quoteHotels) =>\n      price +\n      Number(\n        quoteHotels.reduce(\n          (price, quoteHotel) => price + Number(quoteHotel.given_price),\n          0\n        )\n      ),\n    0\n  )\n  const { tenant } = user\n  return (\n    <Component initialState={false}>\n      {({ state, setState }) => (\n        <Fragment>\n          <Button onClick={() => setState(true)}>Compose Email</Button>\n          <Dialog closeButton open={state} onClose={() => setState(false)}>\n            <Dialog.Header>\n              <h4 className=\"mb-2 font-semibold\">{hotel.name}</h4>\n              <div className=\"text-sm text-gray-600\">\n                {joinAttributes(\n                  hotel.location.short_name,\n                  `${hotel.stars} Star`\n                )}\n              </div>\n            </Dialog.Header>\n            <Dialog.Body>\n              <p className=\"mb-4 text-gray-600 text-sm\">\n                Copy this email content to your composer and edit any\n                information before send\n              </p>\n              <div>\n                <Button\n                  primary\n                  className=\"float-right\"\n                  onClick={() => {\n                    copyNodeToClipboard(\"#hotel_email\")\n                  }}\n                >\n                  Copy to Clipboard\n                </Button>\n              </div>\n              <div\n                id=\"hotel_email\"\n                className=\"p-2 border rounded\"\n                style={{\n                  fontFamily: \"Verdana, sans-serif\",\n                  fontWeight: \"normal\",\n                  fontSize: \"small\",\n                }}\n              >\n                <div>Dear Sir/Mam,</div>\n                <br />\n                {tenant ? (\n                  <Fragment>\n                    <div>Greetings from {tenant.name}.</div>\n                    <br />\n                  </Fragment>\n                ) : null}\n                <div>\n                  We are pleased to inform you that we have a new booking with\n                  the following details:\n                </div>\n                <br />\n                <div style={{ marginBottom: \"10px\" }}>\n                  <small>Hotel</small>\n                </div>\n                <div>\n                  <b>\n                    {hotel.name}, {hotel.location.short_name} ({hotel.stars}{\" \"}\n                    Star)\n                  </b>\n                </div>\n                <br />\n                <div style={{ marginBottom: \"10px\" }}>\n                  <small>Guest Details</small>\n                </div>\n                <div>\n                  <b>{trip.contacts.map(c => c.name).join(\", \")}</b>\n                </div>\n                <div>\n                  <b>\n                    {trip.no_of_adults} Adults\n                    {trip.children ? `, ${trip.children} children` : \"\"}\n                  </b>\n                </div>\n                <br />\n                <div style={{ marginBottom: \"10px\" }}>\n                  <small>Room Details</small>\n                </div>\n                <ul\n                  style={{\n                    listStyle: \"circle\",\n                    paddingLeft: \"20px\",\n                  }}\n                >\n                  {quoteHotels.map(quoteHotels => {\n                    if (!quoteHotels.length) return null\n                    const quoteHotel = quoteHotels[0]\n                    const checkin = moment.utc(quoteHotel.checkin).local()\n                    const checkout = moment.utc(quoteHotel.checkout).local()\n                    const no_of_nights = checkout.diff(checkin, \"days\") + 1\n                    const formatedCheckin = checkin.format(\"Do MMM, YYYY\")\n                    const total_given_price = quoteHotels.reduce<number>(\n                      (total_given_price, quoteHotel) =>\n                        total_given_price + Number(quoteHotel.given_price),\n                      0\n                    )\n                    return (\n                      <li\n                        key={`${quoteHotel.id}-${formatedCheckin}`}\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <div>\n                          <b>\n                            {formatedCheckin} -{\" \"}\n                            {pluralize(\"Night\", no_of_nights, true)}\n                            {\"  (INR \"}\n                            {numberToLocalString(total_given_price)} /-)\n                          </b>\n                        </div>\n                        {quoteHotels.map((quoteHotel, i) => {\n                          const {\n                            meal_plan,\n                            room_type,\n                            no_of_rooms,\n                            adults_with_extra_bed,\n                            children_with_extra_bed,\n                            children_without_extra_bed,\n                          } = quoteHotel\n                          return (\n                            <div\n                              key={`${quoteHotel.id}-${formatedCheckin}-${i}`}\n                            >\n                              <b>\n                                {meal_plan.name} - {no_of_rooms}{\" \"}\n                                {room_type.name}\n                              </b>\n                              {adults_with_extra_bed ||\n                              children_with_extra_bed ||\n                              children_without_extra_bed ? (\n                                <small>\n                                  {\" \"}\n                                  (\n                                  {[\n                                    adults_with_extra_bed\n                                      ? `${pluralize(\n                                          \"Adult\",\n                                          adults_with_extra_bed,\n                                          true\n                                        )} with EB`\n                                      : undefined,\n                                    children_with_extra_bed\n                                      ? `${pluralize(\n                                          \"Child\",\n                                          children_with_extra_bed,\n                                          true\n                                        )} with EB`\n                                      : undefined,\n                                    children_without_extra_bed\n                                      ? `${pluralize(\n                                          \"Child\",\n                                          children_without_extra_bed,\n                                          true\n                                        )} without EB`\n                                      : undefined,\n                                  ]\n                                    .filter(str => str)\n                                    .join(\", \")}\n                                  )\n                                </small>\n                              ) : null}\n                            </div>\n                          )\n                        })}\n                      </li>\n                    )\n                  })}\n                </ul>\n                <br />\n                <div>\n                  <span>Total Price:</span>{\" \"}\n                  <b>INR {numberToLocalString(total_given_price)} /-</b>\n                </div>\n                <br />\n                <div>\n                  <strong>Please confirm this booking.</strong>\n                </div>\n              </div>\n            </Dialog.Body>\n            <Dialog.Footer>\n              <Button\n                className=\"btn--secondary\"\n                onClick={() => setState(false)}\n              >\n                Close\n              </Button>\n            </Dialog.Footer>\n          </Dialog>\n        </Fragment>\n      )}\n    </Component>\n  )\n}\n\nfunction GenerateVoucher({\n  hotel,\n  quoteId,\n  isBooked,\n}: {\n  hotel: hotelStore.IHotel\n  quoteId: number\n  isBooked: boolean\n}) {\n  return (\n    <Component initialState={false}>\n      {({ state, setState }) => {\n        return (\n          <Fragment>\n            <Button onClick={() => setState(true)} primary={isBooked}>\n              Generate Voucher\n            </Button>\n            <Dialog open={state} onClose={() => setState(false)} closeButton>\n              <Formik\n                initialValues={{\n                  hotel_confirmation_number: \"\",\n                  voucher_number: \"\",\n                }}\n                onSubmit={() => {}}\n                render={({ values }) => (\n                  <Fragment>\n                    <Dialog.Header>\n                      <Dialog.Title>\n                        Generate Voucher for {hotel.name}\n                      </Dialog.Title>\n                    </Dialog.Header>\n                    <Dialog.Body>\n                      <InputField\n                        type=\"text\"\n                        name=\"hotel_confirmation_number\"\n                        label=\"Hotel Confirmation Number (optional)\"\n                        placeholder=\"TSK123\"\n                      />\n                      <InputField\n                        type=\"text\"\n                        name=\"voucher_number\"\n                        label=\"Voucher Number (optional)\"\n                        placeholder=\"6525\"\n                      />\n                    </Dialog.Body>\n                    <Dialog.Footer>\n                      <XHRLink\n                        href=\"/hotel-voucher-pdf\"\n                        query={{\n                          hotel: hotel.id,\n                          to: new Date().getTimezoneOffset(),\n                          quote: quoteId,\n                          hcn: values.hotel_confirmation_number,\n                          vn: values.voucher_number,\n                        }}\n                        target=\"_blank\"\n                        className=\"btn btn-primary\"\n                      >\n                        Generate Voucher\n                      </XHRLink>{\" \"}\n                      <Button\n                        className=\"btn--secondary\"\n                        onClick={() => setState(false)}\n                      >\n                        Close\n                      </Button>\n                    </Dialog.Footer>\n                  </Fragment>\n                )}\n              />\n            </Dialog>\n          </Fragment>\n        )\n      }}\n    </Component>\n  )\n}\n\ninterface IHotelBookings extends RouteComponentProps {\n  trip: ITrip\n}\n\nexport default function HotelBookings({ trip }: IHotelBookings) {\n  const { latest_given_quote } = trip\n  const isConverted = isTripConverted(trip)\n  const mergedByHotel = useMemo(() => {\n    if (!latest_given_quote) return []\n    return groupByHotel(latest_given_quote)\n  }, [latest_given_quote])\n  if (!isConverted || !latest_given_quote) {\n    return <div>Trip not converted Yet</div>\n  }\n  return (\n    <div className=\"rounded-b bg-white\">\n      {mergedByHotel.map(mergedQuoteHotels => {\n        if (!mergedQuoteHotels.length) return null\n        const quoteHotel = mergedQuoteHotels[0]\n        const { hotel } = quoteHotel\n        const total_given_price = mergedQuoteHotels.reduce(\n          (price, quoteHotel) => price + Number(quoteHotel.given_price),\n          0\n        )\n        const mergedQuoteHotelsByCheckinCheckout = groupByCheckinCheckout(\n          mergedQuoteHotels\n        )\n        return (\n          <div key={hotel.id} className=\"p-4 border-b\">\n            <Grid>\n              <Col>\n                <div className=\"mb-4\">\n                  <h4 className=\"mb-2 font-semibold\">{hotel.name}</h4>\n                  <div className=\"text-sm text-gray-600\">\n                    {joinAttributes(\n                      hotel.location.short_name,\n                      `${hotel.stars} Star`\n                    )}\n                  </div>\n                  <div className=\"mt-2\">\n                    <Badge>\n                      <Icons.RupeeIcon />{\" \"}\n                      {numberToLocalString(total_given_price)}\n                    </Badge>\n                  </div>\n                </div>\n                <div className=\"mb-4\">\n                  <QuoteHotelBookingStage quoteHotels={mergedQuoteHotels} />\n                </div>\n                <div className=\"btn-group\">\n                  <ComposeEmail\n                    quoteHotels={mergedQuoteHotelsByCheckinCheckout}\n                    trip={trip}\n                  />\n                  <GenerateVoucher\n                    hotel={hotel}\n                    quoteId={latest_given_quote.quote.id}\n                    isBooked={!!quoteHotel.booked_at}\n                  />\n                </div>\n              </Col>\n              <Col>\n                <div>\n                  <Table\n                    striped\n                    bordered\n                    responsive\n                    headers={[\"Date\", \"Meal Plan and Rooms\", \"Given Price\"]}\n                    alignCols={{ 2: \"right\" }}\n                    rows={mergedQuoteHotelsByCheckinCheckout.map(\n                      quoteHotels => {\n                        if (!quoteHotels.length) return []\n                        const quoteHotel = quoteHotels[0]\n                        const checkin = moment.utc(quoteHotel.checkin).local()\n                        const checkout = moment.utc(quoteHotel.checkout).local()\n                        const no_of_nights = checkout.diff(checkin, \"days\") + 1\n                        const formatedCheckin = checkin.format(\"Do MMM, YYYY\")\n                        const total_given_price = quoteHotels.reduce<number>(\n                          (total_given_price, quoteHotel) =>\n                            total_given_price + Number(quoteHotel.given_price),\n                          0\n                        )\n                        return [\n                          <span className=\"whitespace-pre\">\n                            {formatedCheckin}\n                            <br />\n                            <small>\n                              {pluralize(\"Night\", no_of_nights, true)}\n                            </small>\n                          </span>,\n                          <div>\n                            {quoteHotels.map((quoteHotel, i) => {\n                              const {\n                                meal_plan,\n                                room_type,\n                                no_of_rooms,\n                                comments,\n                                given_price,\n                                adults_with_extra_bed,\n                                children_with_extra_bed,\n                                children_without_extra_bed,\n                              } = quoteHotel\n                              return (\n                                <div\n                                  key={`${\n                                    quoteHotel.id\n                                  }-${formatedCheckin}-${i}`}\n                                >\n                                  <div>\n                                    {joinAttributes(\n                                      meal_plan.name,\n                                      `${no_of_rooms} ${room_type.name}`,\n                                      [\n                                        !!adults_with_extra_bed,\n                                        `${adults_with_extra_bed} AWEB`,\n                                      ],\n                                      [\n                                        !!children_with_extra_bed,\n                                        `${children_with_extra_bed} CWEB`,\n                                      ],\n                                      [\n                                        !!children_without_extra_bed,\n                                        `${children_without_extra_bed} CWoEB`,\n                                      ]\n                                    )}{\" \"}\n                                    ({numberToLocalString(given_price)})\n                                  </div>\n                                  {comments ? (\n                                    <blockquote>{comments}</blockquote>\n                                  ) : null}\n                                </div>\n                              )\n                            })}\n                          </div>,\n                          numberToLocalString(total_given_price),\n                        ]\n                      }\n                    )}\n                  />\n                </div>\n              </Col>\n            </Grid>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import React, { useEffect, useCallback, Fragment } from \"react\"\nimport { RouteComponentProps, Router, Link } from \"@reach/router\"\nimport { AxiosInstance } from \"axios\"\nimport moment from \"moment\"\nimport Helmet from \"react-helmet-async\"\nimport { Icons, Button, Badge, BadgeList, Table } from \"@tourepedia/ui\"\nimport pluralize from \"pluralize\"\n\nimport { ITrip, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport Quotes from \"./Quotes\"\nimport GivenQuotes from \"./GivenQuotes\"\nimport NewQuote from \"./NewQuote\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport Spinner from \"../Shared/Spinner\"\nimport { useThunkDispatch, joinAttributes } from \"./../utils\"\nimport NavLink from \"../Shared/NavLink\"\nimport Component from \"../Shared/Component\"\nimport EditTags from \"../Tags/EditTags\"\nimport EditOwners from \"./EditOwners\"\nimport { useSelector } from \"react-redux\"\nimport Payments from \"./Payments\"\nimport LatestGivenQuote from \"./LatestGivenQuote\"\nimport { SelectTripStages } from \"../TripStages\"\nimport { Formik, Form } from \"formik\"\nimport { FormikFormGroup } from \"../Shared/InputField\"\nimport { useXHR } from \"../xhr\"\nimport { useCheckPermissions, PERMISSIONS } from \"../Auth\"\nimport HotelBookings from \"./HotelBookings\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTrip(tripId: string): Promise<ITrip> {\n      return xhr.get(`/trips/${tripId}`).then(resp => resp.data.data)\n    },\n    async convertTrip(data: any): Promise<ITrip> {\n      return xhr.post(\"/converted-trips\", data).then(resp => resp.data.data)\n    },\n    async changeTripStage(data: any): Promise<ITrip[]> {\n      return xhr.put(\"/trip-active-stages\", data).then(resp => resp.data.data)\n    },\n  }\n}\n\nexport const getTripAction = (\n  tripId: string\n): ThunkAction<Promise<ITrip>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.item.request())\n  return XHR(xhr)\n    .getTrip(tripId)\n    .then(trip => {\n      dispatch(actions.item.success(trip))\n      return trip\n    })\n    .catch(error => {\n      dispatch(actions.item.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction Breadcrumbs({ trip }: { trip: ITrip }) {\n  const { trip_id, id } = trip\n  return (\n    <nav className=\"flex items-center mb-2\">\n      <Link to=\"/\" className=\"text-gray-600\">\n        Home\n      </Link>\n      <Icons.ChevronDownIcon className=\"rotate-270 text-gray-500 text-sm\" />\n      <Link to=\"/trips\" className=\"text-gray-600\">\n        Trips\n      </Link>\n      <Icons.ChevronDownIcon className=\"rotate-270 text-gray-500 text-sm\" />\n      <Link to={`/trips/${id}`} className=\"text-gray-500\">\n        {trip_id}\n      </Link>\n    </nav>\n  )\n}\n\nexport function BasicDetails({ trip }: { trip: ITrip }) {\n  const { hasPermission } = useCheckPermissions()\n  const xhr = useXHR()\n  const {\n    id,\n    locations,\n    no_of_adults,\n    children,\n    trip_source,\n    trip_id,\n    contacts,\n    tags,\n    latest_stage,\n    created_by,\n    created_at,\n    latest_given_quote,\n    sales_team = [],\n    operations_team = [],\n  } = trip\n  const start_date = moment.utc(trip.start_date).local()\n  const end_date = moment.utc(trip.end_date).local()\n  const no_of_nights = end_date.diff(moment.utc(start_date), \"days\")\n  return (\n    <section>\n      <header className=\"px-4 py-2 rounded-t bg-white\">\n        <Grid>\n          <Col className=\"my-2\">\n            <h3 className=\"text-2xl m-0\">\n              {locations.map(l => l.short_name)}\n              {latest_given_quote ? (\n                <span className=\"ml-1\">\n                  (\n                  {latest_given_quote.locations\n                    .map(l => l.short_name)\n                    .join(\"-\")}\n                  )\n                </span>\n              ) : null}\n            </h3>\n            <div className=\"text-sm text-gray-600\">\n              {trip_id || id}-{trip_source.short_name}\n            </div>\n            <div className=\"mt-2\">\n              <div className=\"flex items-center py-1\">\n                <Icons.CalendarIcon className=\"mr-2\" />\n                <div className=\"whitespace-pre\">\n                  {joinAttributes(\n                    start_date.format(\"DD MMM, YYYY\"),\n                    `${pluralize(\"Night\", no_of_nights, true)}, ${pluralize(\n                      \"Day\",\n                      no_of_nights + 1,\n                      true\n                    )}`\n                  )}\n                </div>\n              </div>\n              <div className=\"flex items-center py-1\">\n                <Icons.UsersIcon className=\"mr-2\" />\n                <div>\n                  {pluralize(\"Adult\", no_of_adults, true)}\n                  {children ? <span> with {children} Children</span> : \"\"}\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col className=\"my-2\">\n            <div className=\"mb-1 uppercase text-gray-600 font-bold text-sm tracking-wide\">\n              Guest\n            </div>\n            <div>\n              {contacts.map(contact => (\n                <div key={contact.id}>\n                  <div className=\"mb-1\">{contact.name}</div>\n                  <div className=\"text-sm\">\n                    {contact.phone_number ? (\n                      <div>\n                        <a\n                          href={`tel:${contact.phone_number}`}\n                          className=\"text-gray-600\"\n                        >\n                          {contact.phone_number}\n                        </a>\n                      </div>\n                    ) : null}\n                    {contact.email ? (\n                      <div>\n                        <a\n                          href={`mailto:${contact.email}`}\n                          className=\"text-gray-600\"\n                        >\n                          {contact.email}\n                        </a>\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Col>\n          <Col className=\"my-2\">\n            <Component initialState={false}>\n              {({ state: isEditing, setState: setIsEditing }) => (\n                <div>\n                  {!isEditing ? (\n                    <header>\n                      <div className=\"mb-1 uppercase text-gray-600 font-bold text-sm tracking-wide\">\n                        Stage\n                        <button\n                          onClick={() => setIsEditing(true)}\n                          className=\"ml-2\"\n                        >\n                          <span className=\"rotate-90 inline-block\">\n                            &#9998;\n                          </span>\n                        </button>\n                      </div>\n                    </header>\n                  ) : null}\n                  {isEditing ? (\n                    <Formik\n                      initialValues={{\n                        stage: latest_stage,\n                      }}\n                      onSubmit={(values, actions) => {\n                        const { stage } = values\n                        XHR(xhr)\n                          .changeTripStage({\n                            trips: [id],\n                            stage: stage ? stage.id : null,\n                          })\n                          .then(() => {\n                            actions.setSubmitting(false)\n                            setIsEditing(false)\n                          })\n                          .catch(error => {\n                            actions.setStatus(error.message)\n                            if (error.formikErrors) {\n                              actions.setErrors(error.formikErrors)\n                            }\n                            actions.setSubmitting(false)\n                            return Promise.reject(error)\n                          })\n                      }}\n                      render={({ setFieldValue, isSubmitting, status }) => (\n                        <Form noValidate>\n                          <fieldset>\n                            <legend>Edit Trip Stage</legend>\n                            {status ? (\n                              <p className=\"text-red-700 mb-2\">{status}</p>\n                            ) : null}\n                            <FormikFormGroup\n                              name=\"stage\"\n                              render={({ field }) => (\n                                <SelectTripStages\n                                  {...field}\n                                  label=\"Select next stage for the trip*\"\n                                  fetchOnMount\n                                  multiple={false}\n                                  onChange={(value, name) =>\n                                    setFieldValue(name, value)\n                                  }\n                                />\n                              )}\n                            />\n                            <footer>\n                              <Button\n                                disabled={isSubmitting}\n                                type=\"submit\"\n                                primary\n                              >\n                                Update\n                              </Button>{\" \"}\n                              <Button\n                                disabled={isSubmitting}\n                                onClick={() => setIsEditing(false)}\n                              >\n                                Cancel\n                              </Button>\n                            </footer>\n                          </fieldset>\n                        </Form>\n                      )}\n                    />\n                  ) : (\n                    <div>\n                      <div className=\"mb-1\">\n                        {latest_stage ? latest_stage.name : \"Initiated\"}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        <div>\n                          by{\" \"}\n                          {latest_stage\n                            ? latest_stage.pivot.created_by.name\n                            : created_by.name}\n                        </div>\n                        <div>\n                          {moment\n                            .utc(\n                              latest_stage\n                                ? latest_stage.pivot.created_at\n                                : created_at\n                            )\n                            .local()\n                            .fromNow()}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </Component>\n          </Col>\n          <Col className=\"my-2\">\n            <Component initialState={false}>\n              {({ state: isEditing, setState: setIsEditing }) => (\n                <div>\n                  {!isEditing ? (\n                    <header className=\"mb-2\">\n                      <div className=\"mb-1 uppercase text-gray-600 font-bold text-sm tracking-wide\">\n                        Tags\n                        <button\n                          className=\"ml-2\"\n                          onClick={() => {\n                            setIsEditing(true)\n                          }}\n                        >\n                          <span className=\"rotate-90 inline-block\">\n                            &#9998;\n                          </span>\n                        </button>\n                      </div>\n                    </header>\n                  ) : null}\n                  {isEditing ? (\n                    <EditTags\n                      type=\"trip\"\n                      tags={tags}\n                      itemId={trip.id}\n                      onSuccess={() => {\n                        setIsEditing(false)\n                      }}\n                      onCancel={() => {\n                        setIsEditing(false)\n                      }}\n                    />\n                  ) : (\n                    <div>\n                      {tags && tags.length ? (\n                        <BadgeList style={{ marginLeft: \"-5px\" }}>\n                          {tags.map(t => (\n                            <Badge key={t.id}>{t.name}</Badge>\n                          ))}\n                        </BadgeList>\n                      ) : (\n                        <div\n                          className=\"text-gray-600 text-sm\"\n                          title={`Tag trips to quickly indentify and group trips`}\n                        >\n                          No Tags\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )}\n            </Component>\n          </Col>\n        </Grid>\n      </header>\n      <footer className=\"px-4 py-2 text-sm bg-gray-200 rounded-b\">\n        <Grid>\n          <Col className=\"py-1\">\n            <div className=\"flex items-center\">\n              <span className=\"text-gray-600\">Sales Team: </span>\n              <div className=\"ml-2\">\n                <div className=\"flex items-center\">\n                  <span>{sales_team.map(user => user.name)}</span>\n                  {hasPermission(PERMISSIONS.MANAGE_TRIP_OWNERS) ? (\n                    <Component initialState={false}>\n                      {({ state: isEditing, setState: setIsEditing }) => (\n                        <div className=\"ml-2\">\n                          {!isEditing ? (\n                            <button\n                              className=\"text-sm\"\n                              onClick={() => {\n                                setIsEditing(true)\n                              }}\n                            >\n                              <span className=\"rotate-90 inline-block mr-1\">\n                                &#9998;\n                              </span>\n                            </button>\n                          ) : null}\n                          {isEditing ? (\n                            <EditOwners\n                              type=\"sales_team\"\n                              users={sales_team}\n                              itemId={trip.id}\n                              onSuccess={() => {\n                                setIsEditing(false)\n                              }}\n                              onCancel={() => {\n                                setIsEditing(false)\n                              }}\n                            />\n                          ) : null}\n                        </div>\n                      )}\n                    </Component>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col className=\"py-1\">\n            <div className=\"flex items-center\">\n              <span className=\"text-gray-600\">Operations Team: </span>\n              <div className=\"ml-2\">\n                <div className=\"flex items-center\">\n                  <span>{sales_team.map(user => user.name)}</span>\n                  {hasPermission(PERMISSIONS.MANAGE_TRIP_OWNERS) ? (\n                    <Component initialState={false}>\n                      {({ state: isEditing, setState: setIsEditing }) => (\n                        <div className=\"ml-2\">\n                          {!isEditing ? (\n                            <button\n                              className=\"text-sm\"\n                              onClick={() => {\n                                setIsEditing(true)\n                              }}\n                            >\n                              <span className=\"rotate-90 inline-block mr-1\">\n                                &#9998;\n                              </span>\n                            </button>\n                          ) : null}\n                          {isEditing ? (\n                            <EditOwners\n                              type=\"operations_team\"\n                              users={operations_team}\n                              itemId={trip.id}\n                              onSuccess={() => {\n                                setIsEditing(false)\n                              }}\n                              onCancel={() => {\n                                setIsEditing(false)\n                              }}\n                            />\n                          ) : null}\n                        </div>\n                      )}\n                    </Component>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Grid>\n      </footer>\n    </section>\n  )\n}\n\nfunction Activities({ trip }: { trip: ITrip } & RouteComponentProps) {\n  const { activity_logs } = trip\n  return (\n    <div className=\"p-4 bg-white rounded-b\">\n      {activity_logs && trip.total_quotes ? (\n        <div>\n          <h5>Activities</h5>\n          <ol className=\"list-disc pl-4\">\n            {activity_logs.map(activity => (\n              <li key={activity.id} className=\"py-2\">\n                <span>{activity.description}</span> <br />\n                {activity.causer ? (\n                  <small className=\"text-gray-600\">\n                    {\" \"}\n                    by {activity.causer.name} •{\" \"}\n                    {moment\n                      .utc(activity.created_at)\n                      .local()\n                      .fromNow()}\n                  </small>\n                ) : null}\n              </li>\n            ))}\n          </ol>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nfunction useTripState(tripId?: string | number) {\n  interface StateProps {\n    isFetching: boolean\n    trip?: ITrip\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const tripSelector = selectors(state)\n    return {\n      isFetching: tripSelector.isFetching,\n      trip: tripSelector.getItem(tripId),\n    }\n  })\n}\n\nfunction useTripFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((tripId: string) => dispatch(getTripAction(tripId)), [\n    dispatch,\n  ])\n}\n\nexport function useTrip(tripId?: string, shouldFetch: boolean = false) {\n  const state = useTripState(tripId)\n  const fetchTrip = useTripFetch()\n  useEffect(() => {\n    if (shouldFetch) {\n      tripId && fetchTrip(tripId)\n    }\n  }, [shouldFetch, tripId, fetchTrip])\n  return {\n    ...state,\n    fetchTrip,\n  }\n}\n\nexport default function Item({\n  tripId,\n  navigate,\n}: RouteComponentProps<{ tripId: string }>) {\n  const { trip, isFetching } = useTrip(tripId, true)\n  if (!tripId) {\n    navigate && navigate(\"..\")\n    return null\n  }\n  if (isFetching)\n    return (\n      <div className=\"text-center\">\n        <Spinner />\n      </div>\n    )\n  if (!trip) {\n    return null\n  }\n  const { locations, latest_given_quote, trip_id, trip_source } = trip\n  return (\n    <Fragment>\n      <Helmet>\n        <title>\n          {`${locations.map(l => l.short_name)} (${\n            latest_given_quote\n              ? latest_given_quote.locations.map(l => l.short_name).join(\"-\")\n              : \"\"\n          }) | ${trip_id}-${trip_source.short_name}`}\n        </title>\n      </Helmet>\n      <div className=\"mb-16\">\n        <Breadcrumbs trip={trip} />\n        <BasicDetails trip={trip} />\n      </div>\n      {!trip.total_quotes ? (\n        <div className=\"my-4 text-center\">\n          <Link to=\"new-quote\" className=\"btn btn-primary px-3 py-2 text-lg\">\n            Create Quote\n          </Link>\n        </div>\n      ) : (\n        <ul className=\"tabs bg-gray-200 border-b border-gray-400\">\n          {trip.converted_at ? (\n            <NavLink to=\"hotel-bookings\">Hotel Bookings</NavLink>\n          ) : null}\n          {trip.converted_at ? <NavLink to=\"payments\">Payments</NavLink> : null}\n          <NavLink to=\"\">Latest Given Quote</NavLink>\n          {trip.latest_given_quote ? (\n            <NavLink to=\"given-quotes\">Given Quotes</NavLink>\n          ) : null}\n          {trip.total_quotes && !trip.converted_at ? (\n            <NavLink to=\"quotes\">Quotes</NavLink>\n          ) : null}\n          {!trip.converted_at ? (\n            <NavLink to=\"new-quote\">New Quote</NavLink>\n          ) : null}\n          <NavLink to=\"activities\">Activities</NavLink>\n        </ul>\n      )}\n      <Router>\n        <LatestGivenQuote path=\"/\" trip={trip} />\n        <GivenQuotes path=\"given-quotes\" trip={trip} />\n        <Quotes path=\"quotes\" trip={trip} />\n        <NewQuote path=\"new-quote\" trip={trip} />\n        <Payments path=\"payments\" trip={trip} />\n        <HotelBookings path=\"hotel-bookings\" trip={trip} />\n        <Activities path=\"activities\" trip={trip} />\n      </Router>\n    </Fragment>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IModelState,\n  createReducer,\n  IMeta,\n} from \"./../model\"\n\nexport const key = \"TRIP_SOURCES_STATE\"\n\nexport interface ITripSource extends IBaseItem {\n  id: number\n  name: string\n  short_name: string\n}\n\nexport interface ITripSources extends IBaseState<ITripSource> {}\n\nexport interface IState extends IModelState<ITripSource> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ITripSource>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@TRIP_SOURCES/LIST_FETCH_REQUEST\",\n    \"@TRIP_SOURCES/LIST_FETCH_SUCCESS\",\n    \"@TRIP_SOURCES/LIST_FETCH_FAILED\"\n  )<undefined, { data: ITripSource[]; meta: IMeta }, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer(INITIAL_STATE, actions as any)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { Fragment, useEffect, useCallback } from \"react\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport { Omit } from \"utility-types\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\n\nimport { ITripSource, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { IPaginate } from \"../model\"\nimport { useSelector } from \"react-redux\"\nimport { useThunkDispatch } from \"../utils\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTripSources(\n      params?: any\n    ): Promise<{ data: ITripSource[]; meta: any }> {\n      return xhr.get(\"/trip-sources\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getTripSourcesAction = (\n  params?: any\n): ThunkAction<Promise<ITripSource[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getTripSources(params)\n    .then(tripSources => {\n      dispatch(actions.list.success(tripSources))\n      return tripSources.data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useTripSourcesState() {\n  interface StateProps extends IPaginate {\n    tripSources: ITripSource[]\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const tripSourcesSelector = selectors(state)\n    return {\n      ...tripSourcesSelector.meta,\n      isFetching: tripSourcesSelector.isFetching,\n      tripSources: tripSourcesSelector.get(),\n    }\n  })\n}\n\nfunction useTripSourcesFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback(\n    (params?: any) => {\n      dispatch(getTripSourcesAction(params))\n    },\n    [dispatch]\n  )\n}\n\nfunction useTripSources() {\n  return {\n    ...useTripSourcesState(),\n    fetchTripSources: useTripSourcesFetch(),\n  }\n}\n\nexport default function List({  }: RouteComponentProps) {\n  const {\n    fetchTripSources: getTripSources,\n    tripSources,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useTripSources()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getTripSources({ page: currentPage })\n  }, [getTripSources])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Trip Sources List</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getTripSources({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            lastPage={lastPage}\n            currentPage={currentPage}\n            isFetching={isFetching}\n            onChange={page => getTripSources({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <Listable total={total} isFetching={isFetching}>\n        <Table\n          striped\n          bordered\n          headers={[\"Name\", \"Short Name\"]}\n          rows={tripSources.map(tripSource => [\n            tripSource.name,\n            tripSource.short_name,\n          ])}\n        />\n      </Listable>\n    </Fragment>\n  )\n}\n\ninterface SelectTripSourcesProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {}\n\nexport const SelectTripSources = withXHR<SelectTripSourcesProps>(\n  function SelectTripSources({ xhr, ...otherProps }: SelectTripSourcesProps) {\n    return (\n      <Async\n        multiple\n        {...otherProps}\n        fetch={q =>\n          XHR(xhr)\n            .getTripSources({ q })\n            .then(resp => resp.data)\n        }\n      />\n    )\n  }\n)\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, Form, FormikProps, FormikActions } from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport Helmet from \"react-helmet-async\"\nimport * as Validator from \"yup\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\n\nconst validationSchema = Validator.object().shape({\n  name: Validator.string().required(\"Name field is required\"),\n  short_name: Validator.string().required(\"Short name field is required\"),\n})\nconst initialValues = {\n  name: \"\",\n  short_name: \"\",\n}\ntype NewItemCredentials = typeof initialValues\n\ninterface NewItemProps extends RouteComponentProps, XHRProps {}\n\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>New Trip Source</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: NewItemCredentials,\n          actions: FormikActions<NewItemCredentials>\n        ) => {\n          actions.setStatus()\n          return xhr\n            .post(\"/trip-sources\", values)\n            .then(({ data }) => {\n              navigate && navigate(`..`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setSubmitting(false)\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n        }}\n        render={({ isSubmitting, status }: FormikProps<NewItemCredentials>) => (\n          <Form noValidate>\n            {status ? <div>{status}</div> : null}\n            <fieldset>\n              <legend>Add New Source of Trips</legend>\n              <InputField\n                label=\"Name\"\n                name=\"name\"\n                placeholder=\"Travel Triangle\"\n                required\n              />\n              <InputField\n                label=\"Short name\"\n                name=\"short_name\"\n                placeholder=\"TT\"\n                required\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Save\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </Fragment>\n  )\n}\n\nexport default withXHR<NewItemProps>(NewItem)\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport NewItem from \"./NewItem\"\n\nexport default function TripSourcesModule(props: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"float-right btn\">\n        New Trip Source\n      </Link>\n      <h2>Trip Sources</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  FieldArray,\n  FieldProps,\n} from \"formik\"\nimport { Button } from \"@tourepedia/ui\"\nimport * as Validator from \"yup\"\nimport moment from \"moment\"\n\nimport { InputField, FormikFormGroup } from \"./../Shared/InputField\"\nimport {\n  SelectLocations,\n  // SelectCountries,\n  store as locationStore,\n} from \"./../Locations\"\nimport { SelectTripSources, store as tripSourceStore } from \"./../TripSources\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport DatePicker from \"../Shared/DatePicker\"\nimport { EmptyNumberValidator } from \"../utils\"\n\ntype TChildrenArray = Array<{ count: number; age: number }>\n\nexport function childrenToString(children: TChildrenArray) {\n  return children\n    .map(({ count, age }) => [count, age].join(\"-\"))\n    .map(str => `${str}yo`)\n    .join(\",\")\n}\n\n/**\n * Create an array of children with count and ages\n * @param string children - String of children with ages e.g. 1-3yo,4-5yo\n * @return - An array with count and age for each part of string e.g. [{ count: 1, age: 3}, {count: 4, age: 5}]\n */\nexport function childrenToArray(children: string): TChildrenArray {\n  return children\n    .split(\",\")\n    .map(str => str.slice(0, -2))\n    .map(str => str.split(\"-\"))\n    .map(([count, age]) => ({\n      count: Number(count),\n      age: Number(age),\n    }))\n}\n\nconst validationSchema = Validator.object().shape({\n  trip_id: Validator.string(),\n  start_date: Validator.string().required(\"Start date is required\"),\n  no_of_nights: EmptyNumberValidator()\n    .positive(\"Number of nights should be a positive integer\")\n    .integer(\"Number of nights should be a positive integer\")\n    .required(\"Number of nights is required\"),\n  destinations: Validator.array().min(\n    1,\n    \"Please select atleast one destination\"\n  ),\n  no_of_adults: EmptyNumberValidator()\n    .positive(\"Number of adults should be a positive integer\")\n    .integer(\"Number of adults should be a positive integer\")\n    .required(\"Number of adults field is required\"),\n  children: Validator.array().of(\n    Validator.object().shape({\n      count: EmptyNumberValidator()\n        .positive(\"Number of children should be positive integer\")\n        .integer(\"Number of children should be positive integer\")\n        .required(\"Number of children field is required\"),\n      age: EmptyNumberValidator()\n        .positive(\"Child age should a positive number\")\n        .required(\"Child age is required\"),\n    })\n  ),\n  trip_source: Validator.object().required(\"Trip Source Type is required\"),\n  contact: Validator.object()\n    .shape({\n      name: Validator.string().required(\"Contact name is required.\"),\n      email: Validator.string().email(\"Contact email address in invalid\"),\n      phone_number: EmptyNumberValidator()\n        .typeError(\"Phone number is invalid\")\n        .positive(\"Phone number should be an positive integer\"),\n    })\n    .required(),\n})\n\ninterface NewItemSchema {\n  trip_id?: string\n  start_date: string\n  no_of_nights: number\n  destinations: locationStore.ILocation[]\n  no_of_adults: number\n  trip_source?: tripSourceStore.ITripSource\n  children: TChildrenArray\n  contact: {\n    name: string\n    email: string\n    phone_number?: number\n    country?: locationStore.ICountry\n  }\n}\n\nconst initialValues: NewItemSchema = {\n  trip_id: \"\",\n  start_date: \"\",\n  no_of_nights: 1,\n  destinations: [],\n  no_of_adults: 1,\n  children: [],\n  trip_source: undefined,\n  contact: {\n    name: \"\",\n    email: \"\",\n    phone_number: undefined,\n    country: undefined,\n  },\n}\n\ninterface NewItemProps extends XHRProps, RouteComponentProps {}\nfunction NewItem({ xhr, navigate }: NewItemProps) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(\n        values: NewItemSchema,\n        actions: FormikActions<NewItemSchema>\n      ) => {\n        actions.setStatus()\n        const {\n          start_date,\n          no_of_adults,\n          no_of_nights,\n          children = [],\n          destinations,\n          trip_source,\n          trip_id,\n          contact,\n        } = values\n        if (\n          start_date &&\n          no_of_nights &&\n          no_of_adults &&\n          destinations &&\n          destinations.length\n        ) {\n          const data = {\n            start_date: moment(start_date)\n              .hours(0)\n              .minutes(0)\n              .seconds(0)\n              .utc()\n              .format(\"YYYY-MM-DD HH:mm:ss\"),\n            end_date: moment(start_date)\n              .add(no_of_nights, \"day\")\n              .hours(23)\n              .minutes(59)\n              .seconds(59)\n              .utc()\n              .format(\"YYYY-MM-DD HH:mm:ss\"),\n            no_of_adults,\n            children: children\n              .map(({ count, age }) => `${count}-${age}yo`)\n              .join(\",\"),\n            locations: destinations.map(destination => destination.id),\n            trip_id,\n            trip_source_id: trip_source ? trip_source.id : undefined,\n            contact: {\n              name: contact.name,\n              email: contact.email || undefined,\n              phone_number: contact.phone_number || undefined,\n              country_id: contact.country ? contact.country.id : undefined,\n            },\n          }\n          xhr\n            .post(\"/trips\", data)\n            .then(resp => {\n              const { data: trip } = resp.data\n              navigate && navigate(`../${trip.id}`)\n              actions.setSubmitting(false)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n              actions.setSubmitting(false)\n            })\n        } else {\n          actions.setStatus(\"Please fill the required attributes\")\n          actions.setSubmitting(false)\n        }\n      }}\n      render={({\n        isSubmitting,\n        status,\n        values,\n        setFieldValue,\n      }: FormikProps<NewItemSchema>) => (\n        <Form noValidate>\n          <fieldset>\n            <legend>Add New Trip</legend>\n            {status ? <p className=\"text-red-700\">{status}</p> : null}\n            <Grid>\n              <Col>\n                <FormikFormGroup\n                  name=\"destinations\"\n                  render={({ field }) => (\n                    <SelectLocations\n                      {...field}\n                      label=\"Destinations\"\n                      onChange={(value, name) => setFieldValue(name, value)}\n                    />\n                  )}\n                />\n              </Col>\n              <Col>\n                <DatePicker name=\"start_date\" label=\"Start Date\" required />\n              </Col>\n              <Col>\n                <InputField\n                  name=\"no_of_nights\"\n                  label=\"Number of nights\"\n                  type=\"number\"\n                  min={1}\n                  required\n                />\n              </Col>\n              <Col>\n                <FormikFormGroup\n                  name=\"trip_source\"\n                  render={({ field }: FieldProps<NewItemSchema>) => (\n                    <SelectTripSources\n                      {...field}\n                      label=\"Trip Source\"\n                      required\n                      fetchOnMount\n                      onChange={(value, name) => setFieldValue(name, value)}\n                      multiple={false}\n                    />\n                  )}\n                />\n              </Col>\n              <Col>\n                <InputField\n                  name=\"trip_id\"\n                  label=\"Trip ID\"\n                  placeholder=\"1231231\"\n                />\n              </Col>\n            </Grid>\n            <Grid>\n              <Col>\n                <fieldset>\n                  <legend>Pax Details</legend>\n                  <InputField\n                    name=\"no_of_adults\"\n                    label=\"Number of adults\"\n                    type=\"number\"\n                    min={1}\n                    required\n                  />\n                  <FieldArray\n                    name=\"children\"\n                    render={({ name, remove, push }) => (\n                      <fieldset>\n                        <legend>Children</legend>\n                        <ul className=\"list\">\n                          {values.children.map((_, index) => (\n                            <Grid as=\"li\" key={index}>\n                              <Col xs=\"auto\">\n                                <InputField\n                                  label=\"Age\"\n                                  name={`${name}.${index}.age`}\n                                  type=\"number\"\n                                  min={1}\n                                  max={20}\n                                  required\n                                />\n                              </Col>\n                              <Col xs=\"auto\">\n                                <InputField\n                                  label=\"Count\"\n                                  name={`${name}.${index}.count`}\n                                  type=\"number\"\n                                  min={1}\n                                  max={10000}\n                                  required\n                                />\n                              </Col>\n                              <Col\n                                xs=\"auto\"\n                                className=\"d-flex align-items-center\"\n                              >\n                                <Button\n                                  className=\"btn--secondary\"\n                                  onClick={_ => remove(index)}\n                                >\n                                  &times; Remove\n                                </Button>\n                              </Col>\n                            </Grid>\n                          ))}\n                          <Button onClick={_ => push({ count: 1, age: 6 })}>\n                            + Add Children Details\n                          </Button>\n                        </ul>\n                      </fieldset>\n                    )}\n                  />\n                </fieldset>\n              </Col>\n              <Col sm={6}>\n                <fieldset>\n                  <legend>Contact Details</legend>\n                  <FieldArray\n                    name=\"contact\"\n                    render={({ name }) => (\n                      <Grid>\n                        <Col sm={\"auto\"}>\n                          <InputField\n                            name={`${name}.name`}\n                            label=\"Contact Name\"\n                            required\n                            placeholder=\"Anoop Rai\"\n                          />\n                        </Col>\n                        <Col sm=\"auto\">\n                          <InputField\n                            name={`${name}.email`}\n                            label=\"Email\"\n                            required\n                            type=\"email\"\n                            placeholder=\"user@domain.com\"\n                          />\n                        </Col>\n                        {\n                          // <Col>\n                          //   <FormikFormGroup\n                          //     name={`${name}.country`}\n                          //     render={({ field }) => (\n                          //       <SelectCountries\n                          //         {...field}\n                          //         multiple={false}\n                          //         label=\"Country code\"\n                          //         placeholder=\"Type here... eg India or +91\"\n                          //         required\n                          //         onChange={(value, name) =>\n                          //           setFieldValue(name, value)\n                          //         }\n                          //       />\n                          //     )}\n                          //   />\n                          // </Col>\n                        }\n                        <Col>\n                          <InputField\n                            name={`${name}.phone_number`}\n                            label=\"Phone Number\"\n                            type=\"number\"\n                            required\n                            placeholder=\"9779212232\"\n                          />\n                        </Col>\n                      </Grid>\n                    )}\n                  />\n                </fieldset>\n              </Col>\n            </Grid>\n            <footer>\n              <Button primary type=\"submit\" disabled={isSubmitting}>\n                Save\n              </Button>\n              <Link to=\"..\" className=\"btn\">\n                Cancel\n              </Link>\n            </footer>\n          </fieldset>\n        </Form>\n      )}\n    />\n  )\n}\n\nexport default withXHR(NewItem)\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport moment from \"moment\"\nimport Helmet from \"react-helmet-async\"\nimport { Table, Icons, Paginate, Button, Badge } from \"@tourepedia/ui\"\nimport pluralize from \"pluralize\"\n\nimport Search, { useSearch } from \"../Shared/Search\"\nimport Listable from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { numberToLocalString, joinAttributes } from \"../utils\"\nimport { SelectTags, store as tagStore } from \"../Tags\"\nimport { Formik, Form } from \"formik\"\nimport { FormikFormGroup, OnFormChange, InputField } from \"../Shared/InputField\"\nimport { useTrips } from \"./List\"\nimport { groupByHotel, QuoteHotelBookingStage } from \"./HotelBookings\"\nimport {\n  SelectHotelBookingStages,\n  store as hotelBookingStageStore,\n} from \"../HotelBookingStages\"\nimport { SelectLocations, store as locationStore } from \"../Locations\"\n\ninterface IFilters {\n  q?: string\n  tags?: Array<tagStore.ITag>\n  hotel_booking_stages?: Array<hotelBookingStageStore.IHotelBookingStage>\n  locations?: Array<locationStore.ILocation>\n}\n\nexport default function HotelsBookingPendingList({  }: RouteComponentProps) {\n  const [params, setParams] = useSearch<IFilters>()\n  const {\n    trips,\n    fetchTrips,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n  } = useTrips()\n  const getTrips = useCallback(\n    params => {\n      fetchTrips(params)\n    },\n    [fetchTrips]\n  )\n  useEffect(() => {\n    const {\n      tags = [],\n      hotel_booking_stages = [],\n      locations = [],\n      ...otherParams\n    } = params\n    getTrips({\n      tags: tags.map(t => t.name),\n      hotel_booking_stages: hotel_booking_stages.map(t => t.name),\n      locations: locations.map(t => t.name),\n      hotels_not_booked: 1,\n      ...otherParams,\n      page: 1,\n    })\n  }, [params, getTrips])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Pending Hotel Bookings</title>\n      </Helmet>\n      <div>\n        <h2>Pending Hotel Bookings</h2>\n      </div>\n      <hr />\n      <Search\n        placeholder=\"Search by id, destination...\"\n        onSearch={newParams => {\n          setParams({ ...params, ...newParams })\n        }}\n      />\n      <Grid>\n        <Col md=\"auto\">\n          <Filters\n            onChange={otherParams => {\n              setParams({\n                ...params,\n                ...otherParams,\n              })\n            }}\n          />\n        </Col>\n        <Col>\n          <Listable total={total} isFetching={isFetching}>\n            <Table\n              striped\n              bordered\n              responsive\n              headers={[\"Basic Details\", \"Hotels\"]}\n              rows={trips.map(trip => {\n                const {\n                  id,\n                  trip_source,\n                  trip_id,\n                  locations,\n                  no_of_adults,\n                  children,\n                  contact,\n                  created_by,\n                  created_at,\n                  latest_given_quote,\n                } = trip\n                const start_date = moment.utc(trip.start_date).local()\n                const end_date = moment.utc(trip.end_date).local()\n                const no_of_nights = end_date.diff(start_date, \"days\")\n                const mergedByHotel = groupByHotel(latest_given_quote)\n                return [\n                  <div>\n                    <h4>\n                      <Link to={`${id}`}>\n                        {locations.map(l => l.short_name).join(\" • \")}\n                        {latest_given_quote ? (\n                          <span>\n                            {\" \"}\n                            (\n                            {latest_given_quote.locations\n                              .map(l => l.short_name)\n                              .join(\"-\")}\n                            )\n                          </span>\n                        ) : null}\n                      </Link>\n                    </h4>\n                    <div className=\"flex items-center\">\n                      <div className=\"mr-2\">\n                        <Icons.CalendarIcon />\n                      </div>\n                      <div>\n                        {joinAttributes(\n                          start_date.format(\"Do MMM, YYYY\"),\n                          pluralize(\"Night\", no_of_nights, true),\n                          <span>\n                            {moment.utc().isBefore(start_date)\n                              ? `${moment\n                                  .utc(start_date)\n                                  .local()\n                                  .diff(moment(), \"days\")} days remaining`\n                              : moment.utc().isAfter(end_date)\n                              ? `${moment\n                                  .utc()\n                                  .diff(end_date, \"days\")} days ago`\n                              : \"On Trip\"}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <div className=\"mr-2\">\n                        <Icons.UsersIcon />\n                      </div>\n                      <div>\n                        {joinAttributes(\n                          pluralize(\"Adult\", no_of_adults, true),\n                          [children, `with ${children} children`]\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"text-sm my-3\">\n                      {joinAttributes(\n                        [\n                          latest_given_quote,\n                          <span>\n                            {latest_given_quote ? (\n                              <span>\n                                {joinAttributes(\n                                  <span>\n                                    <Badge>\n                                      <Icons.RupeeIcon />{\" \"}\n                                      {numberToLocalString(\n                                        latest_given_quote.given_price\n                                      )}\n                                    </Badge>{\" \"}\n                                    by {latest_given_quote.created_by.name}\n                                  </span>,\n                                  moment\n                                    .utc(created_at)\n                                    .local()\n                                    .fromNow()\n                                )}\n                              </span>\n                            ) : (\n                              <span>\n                                {joinAttributes(\n                                  `Initiated by ${created_by.name}`,\n                                  moment\n                                    .utc(created_at)\n                                    .local()\n                                    .fromNow()\n                                )}\n                              </span>\n                            )}\n                          </span>,\n                        ],\n                        <Link to={`/trips/${id.toString()}`}>\n                          {trip_id || id}-{trip_source.short_name}\n                        </Link>\n                      )}\n                    </div>\n                    {contact ? (\n                      <div>\n                        <div>{contact.name}</div>\n                        <div className=\"text-sm\">\n                          {joinAttributes(\n                            [\n                              contact.phone_number,\n                              <a\n                                href={`tel:${contact.phone_number}`}\n                                className=\"text-gray-600\"\n                              >\n                                {contact.phone_number}\n                              </a>,\n                            ],\n                            [\n                              contact.email,\n                              <a\n                                href={`mailto:${contact.email}`}\n                                className=\"text-gray-600\"\n                              >\n                                {contact.email}\n                              </a>,\n                            ]\n                          )}\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>,\n                  <div>\n                    {mergedByHotel.map(mergedQuoteHotels => {\n                      if (!mergedQuoteHotels.length) return null\n                      const quoteHotel = mergedQuoteHotels[0]\n                      const { hotel } = quoteHotel\n                      return (\n                        <div key={hotel.id} className=\"mb-4\">\n                          <Grid>\n                            <Col>\n                              <h4 className=\"mb-2 font-semibold\">\n                                {hotel.name}\n                              </h4>\n                              <div className=\"text-sm text-gray-600\">\n                                {joinAttributes(\n                                  hotel.location.short_name,\n                                  `${hotel.stars} Star`\n                                )}\n                              </div>\n                            </Col>\n                            <Col>\n                              <QuoteHotelBookingStage\n                                quoteHotels={mergedQuoteHotels}\n                              />\n                            </Col>\n                          </Grid>\n                        </div>\n                      )\n                    })}\n                  </div>,\n                ]\n              })}\n            />\n          </Listable>\n          <div className=\"text-right mt-8\">\n            <Paginate\n              total={total}\n              from={from}\n              to={to}\n              currentPage={currentPage}\n              lastPage={lastPage}\n              isFetching={isFetching}\n              onChange={page => getTrips({ ...params, page })}\n            />\n          </div>\n        </Col>\n      </Grid>\n    </Fragment>\n  )\n}\n\ninterface FilterProps {\n  label?: string\n  onChange: (filters: IFilters) => void\n}\n\nfunction Filters({ label = \"Filters\", onChange }: FilterProps) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        onChange(values)\n      }}\n      render={({ setFieldValue }) => (\n        <Form noValidate style={{ minWidth: \"250px\" }}>\n          <h5 className=\"mb-4 border-b\">{label}</h5>\n          <FormikFormGroup\n            name=\"hotel_booking_stages\"\n            render={({ field }) => (\n              <SelectHotelBookingStages\n                {...field}\n                fetchOnMount\n                label=\"Hotel Booking Stages\"\n                placeholder=\"Search and select stages...\"\n                onChange={(value, name) => setFieldValue(name, value)}\n              />\n            )}\n          />\n          <FormikFormGroup\n            name=\"locations\"\n            render={({ field }) => (\n              <SelectLocations\n                {...field}\n                label=\"Locations\"\n                placeholder=\"Search for locations...\"\n                onChange={(value, name) => setFieldValue(name, value)}\n              />\n            )}\n          />\n          <FormikFormGroup\n            name=\"tags\"\n            render={({ field }) => (\n              <SelectTags\n                {...field}\n                type=\"trip\"\n                label=\"Tags\"\n                placeholder=\"Search and select tag(s)...\"\n                onChange={(value, name) => setFieldValue(name, value)}\n              />\n            )}\n          />\n          <OnFormChange\n            onChange={({ values }) => {\n              onChange(values)\n            }}\n          />\n          <Button type=\"submit\">Filter</Button>\n        </Form>\n      )}\n    />\n  )\n}\n","import React, { Fragment } from \"react\"\nimport { RouteComponentProps, Router, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { Icons } from \"@tourepedia/ui\"\n\nimport { ITrip } from \"./store\"\nimport Spinner from \"../Shared/Spinner\"\nimport HotelBookings from \"./HotelBookings\"\nimport { BasicDetails, useTrip } from \"./Item\"\n\nfunction Breadcrumbs({ trip }: { trip: ITrip }) {\n  const { trip_id, id } = trip\n  return (\n    <nav className=\"flex items-center mb-2\">\n      <Link to=\"/\" className=\"text-gray-600\">\n        Home\n      </Link>\n      <Icons.ChevronDownIcon className=\"rotate-270 text-gray-500 text-sm\" />\n      <Link to=\"/trips\" className=\"text-gray-600\">\n        Trips\n      </Link>\n      <Icons.ChevronDownIcon className=\"rotate-270 text-gray-500 text-sm\" />\n      <Link to=\"/trips/hotels-booking-pending\" className=\"text-gray-600\">\n        Pending Hotels Booking\n      </Link>\n      <Icons.ChevronDownIcon className=\"rotate-270 text-gray-500 text-sm\" />\n      <Link\n        to={`/trips/hotels-booking-pending/${id}`}\n        className=\"text-gray-500\"\n      >\n        {trip_id}\n      </Link>\n    </nav>\n  )\n}\n\nexport default function Item({\n  tripId,\n  navigate,\n}: RouteComponentProps<{ tripId: string }>) {\n  const { trip, isFetching } = useTrip(tripId, true)\n  if (!tripId) {\n    navigate && navigate(\"..\")\n    return null\n  }\n  if (isFetching)\n    return (\n      <div className=\"text-center\">\n        <Spinner />\n      </div>\n    )\n  if (!trip) {\n    return null\n  }\n  const { locations, latest_given_quote, trip_id, trip_source } = trip\n  return (\n    <Fragment>\n      <Helmet>\n        <title>\n          {`${locations.map(l => l.short_name)} (${\n            latest_given_quote\n              ? latest_given_quote.locations.map(l => l.short_name).join(\"-\")\n              : \"\"\n          }) | ${trip_id}-${trip_source.short_name}`}\n        </title>\n      </Helmet>\n      <div className=\"mb-16\">\n        <Breadcrumbs trip={trip} />\n        <BasicDetails trip={trip} />\n      </div>\n      <Router>\n        <HotelBookings path=\"/\" trip={trip} />\n      </Router>\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { RouteComponentProps, Link, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport List from \"./List\"\nimport Item from \"./Item\"\nimport NewItem from \"./NewItem\"\nimport HotelsBookingPendingList from \"./HotelsBookingPendingList\"\nimport HotelsBookingPendingItem from \"./HotelsBookingPendingItem\"\n\nexport default function Trips(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Router>\n        <List path=\"/\" />\n        <HotelsBookingPendingList path=\"/hotels-booking-pending\" />\n        <HotelsBookingPendingItem path=\"/hotels-booking-pending/:tripId/*\" />\n        <NewItem path=\"/new\" />\n        <Item path=\":tripId/*\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\n\nimport {\n  IBaseItem,\n  IBaseState,\n  IModelState,\n  model,\n  init,\n  createReducer,\n  IMeta,\n} from \"./../model\"\nimport { store as userStore } from \"./../Auth\"\n\nexport const key = \"TRIP_PLAN_REQUEST_LIST_STATE\"\n\nexport interface ITripPlanRequest extends IBaseItem {\n  id: number\n  name: string\n  phone_number: string\n  email?: string\n  destination?: string\n  start_date?: string\n  no_of_days?: number\n  no_of_adults?: number\n  no_of_children?: number\n  hotel_preference?: string\n  comments?: string\n  trip_id?: number\n  owner_id?: number\n  owner?: userStore.IUser\n  assigned_at?: string\n  created_at: string\n}\n\nexport interface ITripPlanRequests extends IBaseState<ITripPlanRequest> {}\n\nexport interface IState extends IModelState<ITripPlanRequest> {\n  readonly isFetching: boolean\n}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ITripPlanRequest>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@TRIP_PLAN_REQUESTS/LIST_FETCH_REQUEST\",\n    \"@TRIP_PLAN_REQUESTS/LIST_FETCH_SUCCESS\",\n    \"@TRIP_PLAN_REQUESTS/LIST_FETCH_FAILED\"\n  )<undefined, { data: ITripPlanRequest[]; meta: IMeta }, Error>(),\n  item: createAsyncAction(\n    \"@TRIP_PLAN_REQUESTS/ITEM_FETCH_REQUEST\",\n    \"@TRIP_PLAN_REQUESTS/ITEM_FETCH_SUCCESS\",\n    \"@TRIP_PLAN_REQUESTS/ITEM_FETCH_FAILED\"\n  )<undefined, ITripPlanRequest, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<ITripPlanRequest, IState>(\n  INITIAL_STATE,\n  actions as any\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState: IState = state[key]\n  return {\n    ...model<ITripPlanRequest>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link, Redirect } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport moment from \"moment\"\n\nimport { ThunkAction } from \"./../types\"\nimport { ITripPlanRequest, actions, IStateWithKey, selectors } from \"./store\"\nimport { useThunkDispatch } from \"../utils\"\n\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async getTripPlanRequest(id: string): Promise<ITripPlanRequest> {\n      return xhr.get(`/trip-plan-requests/${id}`).then(({ data }) => data.data)\n    },\n  }\n}\n\nexport const getCabAction = (\n  id: string\n): ThunkAction<Promise<ITripPlanRequest>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.item.request())\n  return XHR(xhr)\n    .getTripPlanRequest(id)\n    .then(cab => {\n      dispatch(actions.item.success(cab))\n      return cab\n    })\n    .catch(error => {\n      dispatch(actions.item.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useTripPlanRequestState(itemId?: number | string) {\n  interface StateProps {\n    isFetching: boolean\n    item?: ITripPlanRequest\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const selector = selectors(state)\n    return {\n      isFetching: selector.isFetching,\n      item: selector.getItem(itemId),\n    }\n  })\n}\n\nexport function useTripPlanRequestFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback((itemId: string) => dispatch(getCabAction(itemId)), [\n    dispatch,\n  ])\n}\n\nexport function useCab(itemId?: string, shouldFetch: boolean = false) {\n  const state = useTripPlanRequestState(itemId)\n  const fetch = useTripPlanRequestFetch()\n  useEffect(() => {\n    if (shouldFetch) {\n      itemId && fetch(itemId)\n    }\n  }, [itemId, shouldFetch, fetch])\n  return {\n    ...state,\n    fetch,\n  }\n}\n\nexport default function TripPlanRequest({\n  cabId: itemId,\n  navigate,\n}: RouteComponentProps<{ cabId: string }>) {\n  const { item, isFetching } = useCab(itemId, true)\n  if (!itemId) {\n    navigate && navigate(\"/trip-plan-requests\")\n    return null\n  }\n  return (\n    <Fragment>\n      <Helmet>\n        <title>\n          Request from {item ? item.name : \"\"} {item ? item.phone_number : \"\"}\n        </title>\n      </Helmet>\n      <Link to=\"..\">Back to list</Link>\n      {isFetching ? (\n        \"Loading...\"\n      ) : item ? (\n        <div>\n          {item.name} - {item.phone_number} - {item.destination}\n          <br />\n          Created at:{\" \"}\n          {moment\n            .utc(item.created_at)\n            .local()\n            .toLocaleString()}\n          <br />\n        </div>\n      ) : (\n        <Redirect noThrow to=\"/trip-plan-requests\" />\n      )}\n    </Fragment>\n  )\n}\n","import React, { useEffect, Fragment, useCallback, useState } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Omit } from \"utility-types\"\nimport moment from \"moment\"\n\nimport { ThunkAction, ThunkDispatch } from \"./../types\"\nimport { ITripPlanRequest, actions, IStateWithKey, selectors } from \"./store\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport { Search, useSearch } from \"./../Shared/Search\"\nimport { List } from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { Table, Paginate, Button } from \"@tourepedia/ui\"\nimport { IPaginate } from \"./../model\"\nimport { Formik, Form } from \"formik\"\nimport { FormikFormGroup } from \"../Shared/InputField\"\nimport { SelectUsers } from \"../Users\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTripPlanRequests(\n      params?: any\n    ): Promise<{ data: ITripPlanRequest[]; meta: any }> {\n      return xhr.get(\"/trip-plan-requests\", { params }).then(resp => resp.data)\n    },\n    async assignTripRequestsOwner(\n      ownerId: number,\n      requestIds: Array<number>\n    ): Promise<{ data: ITripPlanRequest[]; meta: any }> {\n      return xhr\n        .post(\"/trip-plan-request-owners\", {\n          items: requestIds,\n          owner_id: ownerId,\n        })\n        .then(resp => resp.data)\n    },\n  }\n}\n\nconst Owner = withXHR(function Owner({\n  xhr,\n  request,\n  onUpdate,\n}: XHRProps & { request: ITripPlanRequest; onUpdate?: () => any }) {\n  const { owner, assigned_at } = request\n  const [isEditing, changeIsEditing] = useState(false)\n  return (\n    <span>\n      {owner ? (\n        <span>\n          <Link to={`/users/${owner.id}`}>{owner.name}</Link> on{\" \"}\n          {moment.utc(assigned_at).format(\"Do MMM, YYYY\")}\n        </span>\n      ) : (\n        <span>Not Set</span>\n      )}\n      {isEditing ? (\n        <Formik\n          initialValues={{\n            owner,\n          }}\n          onSubmit={(values, actions) => {\n            actions.setStatus()\n            const { owner } = values\n            if (!owner) return null\n            XHR(xhr)\n              .assignTripRequestsOwner(owner.id, [request.id])\n              .then(data => {\n                actions.setSubmitting(false)\n                changeIsEditing(false)\n                onUpdate && onUpdate()\n                return data\n              })\n              .catch(error => {\n                actions.setStatus(error.message)\n                if (error.formikErrors) {\n                  actions.setErrors(error.formikErrors)\n                }\n                actions.setSubmitting(false)\n                return Promise.reject(error)\n              })\n          }}\n          render={({ isSubmitting, setFieldValue, status }) => (\n            <Form>\n              <fieldset>\n                {status ? <p className=\"text-red-700 my-2\">{status}</p> : null}\n                <FormikFormGroup\n                  name=\"owner\"\n                  render={({ field }) => (\n                    <SelectUsers\n                      {...field}\n                      multiple={false}\n                      label=\"Select Owner\"\n                      onChange={(value, name) => setFieldValue(name, value)}\n                    />\n                  )}\n                />\n                <footer>\n                  <Button primary type=\"submit\" disabled={isSubmitting}>\n                    Assign\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    disabled={isSubmitting}\n                    onClick={() => changeIsEditing(false)}\n                  >\n                    Cancel\n                  </Button>\n                </footer>\n              </fieldset>\n            </Form>\n          )}\n        />\n      ) : (\n        <Button title=\"Edit\" onClick={() => changeIsEditing(true)}>\n          &#9998;\n        </Button>\n      )}\n    </span>\n  )\n})\n\nexport const getTriPlanRequestsAction = (\n  params?: any\n): ThunkAction<Promise<ITripPlanRequest[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getTripPlanRequests(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useTripPlanRequestsState() {\n  interface StateProps extends IPaginate {\n    items: ITripPlanRequest[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const selector = selectors(state)\n    return {\n      ...selector.meta,\n      isFetching: selector.isFetching,\n      items: selector.get(),\n    }\n  })\n}\n\nfunction useTripPlanRequestsFetch() {\n  const dispatch = useDispatch<ThunkDispatch>()\n  return useCallback(\n    (params?: any) => dispatch(getTriPlanRequestsAction(params)),\n    [dispatch]\n  )\n}\n\nexport function useTripPlanRequests() {\n  return {\n    ...useTripPlanRequestsState(),\n    fetch: useTripPlanRequestsFetch(),\n  }\n}\n\nexport default function TripPlanRequests(_: RouteComponentProps) {\n  const {\n    items,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n    fetch,\n  } = useTripPlanRequests()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    fetch({ page: currentPage })\n  }, [fetch])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Trip Plan Requests</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              fetch({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => fetch({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <List isFetching={isFetching} total={total}>\n        <Table\n          headers={[\"Guest\", \"Destination\", \"Pax\", \"Comments\", \"Actions\"]}\n          striped\n          bordered\n          rows={items.map(r => [\n            <span>\n              <h4>{r.name}</h4>\n              {r.phone_number} • {r.email}\n            </span>,\n            <span>\n              <h4>{r.destination}</h4>\n              <span>\n                {r.start_date\n                  ? moment\n                      .utc(r.start_date)\n                      .local()\n                      .format(\"Do MMM, YYYY\")\n                  : null}{\" \"}\n                • {r.no_of_days} Days\n              </span>\n            </span>,\n            <span>\n              {r.no_of_adults} Adults with {r.no_of_children} Children\n            </span>,\n            <span>\n              {r.hotel_preference ? (\n                <span>\n                  Hotel Preference: {r.hotel_preference}\n                  <br />\n                </span>\n              ) : null}\n              <blockquote>{r.comments}</blockquote>\n            </span>,\n            <span>\n              {r.trip_id ? (\n                <Link to={`/trips/${r.trip_id}`}>View Associated Trip</Link>\n              ) : null}\n              <br />\n              Owner:{\" \"}\n              <Owner\n                request={r}\n                onUpdate={() => {\n                  fetch({ page: currentPage, ...params })\n                }}\n              />{\" \"}\n              <br />\n              Created at: {moment.utc(r.created_at).format(\"Do MMM, YYYY\")}\n            </span>,\n          ])}\n        />\n      </List>\n    </Fragment>\n  )\n}\n\ninterface SelectTripPlanRequestsProps\n  extends XHRProps,\n    Omit<AsyncProps, \"fetch\"> {\n  value?: ITripPlanRequest[]\n  onChange: (items: ITripPlanRequest[]) => void\n}\n\nexport const SelectTripPlanRequests = withXHR<SelectTripPlanRequestsProps>(\n  function SelectTripPlanRequests({\n    xhr,\n    ...otherProps\n  }: SelectTripPlanRequestsProps) {\n    return (\n      <Async\n        multiple\n        fetch={q =>\n          XHR(xhr)\n            .getTripPlanRequests({ q })\n            .then(resp => resp.data)\n        }\n        {...otherProps}\n      />\n    )\n  }\n)\n","import React from \"react\"\nimport { RouteComponentProps, Router } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport Item from \"./Item\"\nimport List from \"./List\"\n\nexport default function TripPlanRequests(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <h2>Trip Plan Requests</h2>\n      <hr />\n      <Router>\n        <Item path=\":cabId\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import { createAsyncAction, ActionType } from \"typesafe-actions\"\n\nimport {\n  IBaseItem,\n  IBaseState,\n  IModelState,\n  model,\n  init,\n  createReducer,\n  IMeta,\n} from \"./../model\"\nimport { store as userStore } from \"./../Users\"\n\nexport const key = \"TENANT_LIST_STATE\"\n\nexport interface ITenant extends IBaseItem {\n  id: number\n  name: string\n  description: string\n  address_name: string\n  address_email: string\n  invited_at?: string\n  signup_at?: string\n  users?: Array<userStore.IUser>\n}\n\nexport interface ITenants extends IBaseState<ITenant> {}\n\nexport interface IState extends IModelState<ITenant> {\n  readonly isFetching: boolean\n}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<ITenant>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@TENANTS/LIST_FETCH_REQUEST\",\n    \"@TENANTS/LIST_FETCH_SUCCESS\",\n    \"@TENANTS/LIST_FETCH_FAILED\"\n  )<undefined, { data: ITenant[]; meta: IMeta }, Error>(),\n  item: createAsyncAction(\n    \"@TENANTS/ITEM_FETCH_REQUEST\",\n    \"@TENANTS/ITEM_FETCH_SUCCESS\",\n    \"@TENANTS/ITEM_FETCH_FAILED\"\n  )<undefined, ITenant, Error>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<ITenant, IState>(\n  INITIAL_STATE,\n  actions as any\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState: IState = state[key]\n  return {\n    ...model<ITenant>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link, Redirect } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport moment from \"moment\"\n\nimport { ThunkAction } from \"./../types\"\nimport { ITenant, actions, IStateWithKey, selectors } from \"./store\"\nimport { useThunkDispatch } from \"../utils\"\n\nfunction XHR(xhr: AxiosInstance) {\n  return {\n    async getTenant(id: string): Promise<ITenant> {\n      return xhr.get(`/tenants/${id}`).then(({ data }) => data.data)\n    },\n  }\n}\n\nexport const getTenantAction = (\n  id: string\n): ThunkAction<Promise<ITenant>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.item.request())\n  return XHR(xhr)\n    .getTenant(id)\n    .then(tenant => {\n      dispatch(actions.item.success(tenant))\n      return tenant\n    })\n    .catch(error => {\n      dispatch(actions.item.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport function useTenantState(tenantId?: number | string) {\n  interface StateProps {\n    isFetching: boolean\n    tenant?: ITenant\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const tenantsSelector = selectors(state)\n    return {\n      isFetching: tenantsSelector.isFetching,\n      tenant: tenantsSelector.getItem(tenantId),\n    }\n  })\n}\n\nexport function useTenantFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback(\n    (tenantId: string) => dispatch(getTenantAction(tenantId)),\n    [dispatch]\n  )\n}\n\nexport function useTenant(tenantId?: string, shouldFetch: boolean = false) {\n  const state = useTenantState(tenantId)\n  const fetchTenant = useTenantFetch()\n  useEffect(() => {\n    if (shouldFetch) {\n      tenantId && fetchTenant(tenantId)\n    }\n  }, [tenantId, shouldFetch, fetchTenant])\n  return {\n    ...state,\n    fetchTenant,\n  }\n}\n\nexport default function Tenant({\n  tenantId,\n  navigate,\n}: RouteComponentProps<{ tenantId: string }>) {\n  const { tenant, isFetching } = useTenant(tenantId, true)\n  if (!tenantId) {\n    navigate && navigate(\"/tenants\")\n    return null\n  }\n  return (\n    <Fragment>\n      <Helmet>\n        <title>{tenant ? tenant.name : \"\"}</title>\n      </Helmet>\n      <Link to=\"..\">Back to list</Link>\n      {isFetching ? (\n        \"Loading...\"\n      ) : tenant ? (\n        <div>\n          <h3>{tenant.name}</h3>\n          <p>{tenant.description}</p>\n          <div className=\"float-right\">\n            {tenant.invited_at ? (\n              <b>\n                Invited at:{\" \"}\n                {moment\n                  .utc(tenant.invited_at)\n                  .local()\n                  .toLocaleString()}\n              </b>\n            ) : (\n              \"Not invited yet\"\n            )}\n            <br />\n            {tenant.signup_at ? (\n              <b>\n                Signedup at:{\" \"}\n                {moment\n                  .utc(tenant.signup_at)\n                  .local()\n                  .toLocaleString()}\n              </b>\n            ) : (\n              \"Not invited yet\"\n            )}\n          </div>\n          <h4>Users</h4>\n          <ul>\n            {tenant.users\n              ? tenant.users.map(user => (\n                  <li key={user.id}>\n                    <Link to={`/users/${user.id}`}>{user.name}</Link> -{\" \"}\n                    {user.email} - {user.email_verified_at}\n                  </li>\n                ))\n              : null}\n          </ul>\n        </div>\n      ) : (\n        <Redirect noThrow to=\"/tenants\" />\n      )}\n    </Fragment>\n  )\n}\n","import React, { useEffect, Fragment, useCallback } from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { AxiosInstance } from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Omit } from \"utility-types\"\n\nimport { ThunkAction, ThunkDispatch } from \"./../types\"\nimport { ITenant, actions, IStateWithKey, selectors } from \"./store\"\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { Async, AsyncProps } from \"@tourepedia/select\"\nimport { Search, useSearch } from \"./../Shared/Search\"\nimport { List } from \"./../Shared/List\"\nimport { Grid, Col } from \"../Shared/Layout\"\nimport { Table, Paginate } from \"@tourepedia/ui\"\nimport { IPaginate } from \"./../model\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getTenants(params?: any): Promise<{ data: ITenant[]; meta: any }> {\n      return xhr.get(\"/tenants\", { params }).then(resp => resp.data)\n    },\n  }\n}\n\nexport const getTenantsAction = (\n  params?: any\n): ThunkAction<Promise<ITenant[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getTenants(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nfunction useTenantsState() {\n  interface StateProps extends IPaginate {\n    tenants: ITenant[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const tenantsSelector = selectors(state)\n    return {\n      ...tenantsSelector.meta,\n      isFetching: tenantsSelector.isFetching,\n      tenants: tenantsSelector.get(),\n    }\n  })\n}\n\nfunction useTenantsFetch() {\n  const dispatch = useDispatch<ThunkDispatch>()\n  return useCallback((params?: any) => dispatch(getTenantsAction(params)), [\n    dispatch,\n  ])\n}\n\nexport function useTenants() {\n  return {\n    ...useTenantsState(),\n    fetchTenants: useTenantsFetch(),\n  }\n}\n\nexport default function Tenants(_: RouteComponentProps) {\n  const {\n    tenants,\n    total,\n    from,\n    to,\n    currentPage,\n    lastPage,\n    isFetching,\n    fetchTenants: getTenants,\n  } = useTenants()\n  const [params, setParams] = useSearch()\n  useEffect(() => {\n    getTenants({ page: currentPage })\n  }, [getTenants])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Agents</title>\n      </Helmet>\n      <Grid>\n        <Col>\n          <Search\n            onSearch={params => {\n              setParams(params)\n              getTenants({ ...params, page: 1 })\n            }}\n          />\n        </Col>\n        <Col className=\"text-right\">\n          <Paginate\n            total={total}\n            from={from}\n            to={to}\n            currentPage={currentPage}\n            lastPage={lastPage}\n            isFetching={isFetching}\n            onChange={page => getTenants({ ...params, page })}\n          />\n        </Col>\n      </Grid>\n      <List isFetching={isFetching} total={total}>\n        <Table\n          headers={[\"Name\", \"Description\"]}\n          striped\n          bordered\n          rows={tenants.map(r => [\n            <Link to={r.id.toString()}>{r.name}</Link>,\n            r.description,\n          ])}\n        />\n      </List>\n    </Fragment>\n  )\n}\n\ninterface SelectTenantsProps extends XHRProps, Omit<AsyncProps, \"fetch\"> {\n  value?: ITenant[]\n  onChange: (tenants: ITenant[]) => void\n}\n\nexport const SelectTenants = withXHR<SelectTenantsProps>(\n  function SelectTenants({ xhr, ...otherProps }: SelectTenantsProps) {\n    return (\n      <Async\n        multiple\n        fetch={q =>\n          XHR(xhr)\n            .getTenants({ q })\n            .then(resp => resp.data)\n        }\n        {...otherProps}\n      />\n    )\n  }\n)\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Formik, FormikProps, FormikActions, Form } from \"formik\"\nimport * as Validator from \"yup\"\nimport { Button } from \"@tourepedia/ui\"\n\nimport { withXHR, XHRProps } from \"./../xhr\"\nimport { InputField } from \"./../Shared/InputField\"\nimport { Grid, Col } from \"../Shared/Layout\"\n\nexport interface NewTenantCredentials {\n  name: string\n  description?: string\n  address_name: string\n  address_email: string\n  send_invite: boolean\n  tenant_signup_link: string\n}\nconst newTenantSchema = Validator.object().shape({\n  name: Validator.string()\n    .required(\"Name for the tenant is required.\")\n    .max(299, \"Maximum 299 characters allowed\"),\n  description: Validator.string().max(299, \"Maximum 299 characters allowed\"),\n  address_name: Validator.string().required(\"Addressing name is required\"),\n  address_email: Validator.string()\n    .email(\"Invalid email address\")\n    .required(\"Addressing email is required\"),\n  send_invite: Validator.boolean(),\n})\nconst initialValues = {\n  name: \"\",\n  description: \"\",\n  address_name: \"\",\n  address_email: \"\",\n  send_invite: true,\n  tenant_signup_link: \"\",\n}\n\ninterface NewTenantProps extends RouteComponentProps, XHRProps {}\n\nexport function NewTenant({ xhr, navigate, location }: NewTenantProps) {\n  initialValues.tenant_signup_link = location\n    ? `${location.origin}/tenant-signup`\n    : \"\"\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={newTenantSchema}\n        onSubmit={async (\n          values: NewTenantCredentials,\n          actions: FormikActions<NewTenantCredentials>\n        ) => {\n          actions.setStatus()\n          return xhr\n            .post(\"/tenants\", {\n              ...values,\n              send_invite: +(values.send_invite || false),\n            })\n            .then(({ data }) => {\n              const tenant = data.data\n              navigate && navigate(`../${tenant.id}`)\n            })\n            .catch(error => {\n              actions.setStatus(error.message)\n              if (error.formikErrors) {\n                actions.setErrors(error.formikErrors)\n              }\n            })\n            .then(() => {\n              actions.setSubmitting(false)\n            })\n        }}\n        render={({\n          isSubmitting,\n          status,\n          values,\n        }: FormikProps<NewTenantCredentials>) => (\n          <Form noValidate>\n            {status ? <p className=\"text-red-700 my-2\">{status}</p> : null}\n            <fieldset>\n              <legend>Add New Tenant</legend>\n              <Grid>\n                <Col>\n                  <InputField\n                    label=\"Name\"\n                    name=\"name\"\n                    required\n                    placeholder=\"Tourepedia Holidays\"\n                  />\n                </Col>\n                <Col>\n                  <InputField\n                    label=\"Description\"\n                    name=\"description\"\n                    placeholder=\"Tourepedia provides best tourisum services across India\"\n                  />\n                </Col>\n                <Col>\n                  <InputField\n                    label=\"Addressing Name\"\n                    name=\"address_name\"\n                    placeholder=\"Admin Name\"\n                    required\n                  />\n                </Col>\n                <Col>\n                  <InputField\n                    label=\"Addressing Email\"\n                    name=\"address_email\"\n                    type=\"email\"\n                    placeholder=\"admin@domain.com\"\n                    required\n                  />\n                </Col>\n              </Grid>\n              <InputField\n                label=\"Send Invitation email also\"\n                name=\"send_invite\"\n                type=\"checkbox\"\n                checked={values.send_invite}\n              />\n              <footer>\n                <Button primary type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n                <Link to=\"..\" className=\"btn\">\n                  Cancel\n                </Link>\n              </footer>\n            </fieldset>\n          </Form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default withXHR<NewTenantProps>(NewTenant)\n","import React from \"react\"\nimport { RouteComponentProps, Router, Link } from \"@reach/router\"\n\nimport { RedirectUnlessAuthenticated } from \"./../Auth\"\nimport Item from \"./Item\"\nimport List from \"./List\"\nimport NewItem from \"./New\"\n\nexport default function TenantsModule(_: RouteComponentProps) {\n  return (\n    <RedirectUnlessAuthenticated>\n      <Link to=\"new\" className=\"btn float-right\">\n        Add New Agent\n      </Link>\n      <h2>Agents</h2>\n      <hr />\n      <Router>\n        <NewItem path=\"/new\" />\n        <Item path=\":tenantId\" />\n        <List path=\"/\" />\n      </Router>\n    </RedirectUnlessAuthenticated>\n  )\n}\n","import React from \"react\"\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { Icons } from \"@tourepedia/ui\"\nimport { searchToQuery } from \"./utils\"\n\nexport function EmailVerified({ location }: RouteComponentProps) {\n  const query = searchToQuery(location && location.search)\n  const email = query[\"email\"] || \"\"\n  return (\n    <div className=\"pt-20\">\n      <div className=\"max-w-xl mx-auto text-center text-xl border rounded-lg py-20 px-4\">\n        <div>\n          <div className=\"text-center mb-10\">\n            <div className=\"text-5xl w-20 h-20 rounded-full bg-green-400 inline-block text-white\">\n              <Icons.OkIcon className=\"align-middle\" />\n            </div>\n          </div>\n          <h1>Your Email Verified Successfully.</h1>\n          <p>\n            You can now{\" \"}\n            <Link\n              to={`/login?email=${email}`}\n              className=\"text-blue-600 hover:text-blue-800\"\n            >\n              login\n            </Link>{\" \"}\n            to the Tourepedia Admin Dashboard.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmailVerified\n","import React from \"react\"\nimport { Omit } from \"utility-types\"\nimport classNames from \"classnames\"\n\nimport \"./dropdown.css\"\n\nexport interface DropdownProps\n  extends Omit<React.HTMLProps<HTMLElement>, \"as\"> {\n  as?: React.ReactType\n  alignRight?: boolean\n}\nexport default function Dropdown({\n  as: Component = \"div\",\n  className,\n  alignRight = false,\n  ...otherProps\n}: DropdownProps) {\n  return (\n    <Component\n      className={classNames(\n        \"drop-down\",\n        {\n          \"align-right\": alignRight,\n        },\n        className\n      )}\n      {...otherProps}\n    />\n  )\n}\n","import {\n  createAsyncAction,\n  ActionType,\n  getType,\n  createStandardAction,\n} from \"typesafe-actions\"\nimport {\n  IBaseItem,\n  IBaseState,\n  init,\n  model,\n  IModelState,\n  IMeta,\n  createReducer,\n} from \"./../model\"\n\nexport const key = \"NOTIFICATIONS_STATE\"\n\nexport interface INotification extends IBaseItem {\n  type: \"App\\\\Notifications\\\\TripConverted\"\n  data: { [key: string]: any }\n  read_at: string | null\n  created_at: string\n}\n\nexport interface INotifications extends IBaseState<INotification> {}\n\nexport interface IState extends IModelState<INotification> {}\n\nexport interface IStateWithKey {\n  readonly [key]: IState\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: true,\n  state: init<INotification>(),\n}\n\nexport const actions = {\n  list: createAsyncAction(\n    \"@NOTIFICATIONS/LIST_FETCH_REQUEST\",\n    \"@NOTIFICATIONS/LIST_FETCH_SUCCESS\",\n    \"@NOTIFICATIONS/LIST_FETCH_FAILED\"\n  )<undefined, { data: INotification[]; meta?: IMeta }, Error>(),\n  markAsRead: createAsyncAction(\n    \"@NOTIFICATIONS/MARK_AS_READ_REQUEST\",\n    \"@NOTIFICATIONS/MARK_AS_READ_SUCCESS\",\n    \"@NOTIFICATIONS/MARK_AS_READ_FAILED\"\n  )<undefined, { data: INotification[] }, Error>(),\n  pushNewNotification: createStandardAction(\n    \"@NOTIFICATIONS/PUSH_NEW_NOTIFICATION\"\n  )<INotification>(),\n}\n\nexport type TActions = ActionType<typeof actions>\n\nexport const reducer = createReducer<INotification, IState>(\n  INITIAL_STATE,\n  actions as any,\n  (state: IState, action) => {\n    switch (action.type) {\n      case getType(actions.markAsRead.success):\n        return {\n          ...state,\n          state: model(state.state).insert(action.payload.data),\n        }\n      case getType(actions.pushNewNotification):\n        return {\n          ...state,\n          state: model(state.state).insert([action.payload], undefined, true),\n        }\n    }\n    return state\n  }\n)\n\nexport function selectors<State extends IStateWithKey>(state: State) {\n  const myState = state[key]\n  return {\n    ...model<INotification>(myState.state),\n    get state(): IState {\n      return myState\n    },\n    get isFetching(): boolean {\n      return this.state.isFetching\n    },\n  }\n}\n","import React, { useEffect, useState, useMemo } from \"react\"\nimport Echo from \"laravel-echo\"\nimport Pusher from \"pusher-js\"\nimport { $PropertyType } from \"utility-types\"\n\nimport { getAuthorizationToken } from \"./xhr\"\nimport config from \"./config\"\nimport { withContext } from \"./utils\"\nimport { useAuthUser } from \"./Auth\"\n\nexport function getChannels() {\n  const client = new Pusher(config.pusher.key, {\n    cluster: config.pusher.cluster,\n    forceTLS: true,\n    authEndpoint: config.pusher.authEndpoint,\n    auth: {\n      headers: {\n        Authorization: `Bearer ${getAuthorizationToken()}`,\n      },\n    },\n  })\n\n  const channels = new Echo({\n    broadcaster: \"pusher\",\n    client: client,\n  })\n  return channels\n}\n\n/**\n * Context for Channels\n *\n * Usage: Wrap a component with withXHR (dont forget to extends the XHRProps in the swapped components)\n */\nexport const ChannelContext = React.createContext<Echo | undefined>(undefined)\nexport const withChannels = withContext<Echo | undefined, \"channels\">(\n  ChannelContext,\n  \"channels\"\n)\nexport type ChannelProps = { channels: Echo | undefined }\n\n/**\n * Channel Context Provider\n */\nexport function ChannelContextProvider({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const { user } = useAuthUser()\n  const [channels, setChannels] = useState<\n    $PropertyType<ChannelProps, \"channels\">\n  >(undefined)\n  useEffect(() => {\n    if (user) {\n      setChannels(getChannels())\n    }\n  }, [user])\n  return (\n    <ChannelContext.Provider value={channels}>\n      {children}\n    </ChannelContext.Provider>\n  )\n}\n\n/**\n * Hook to use the channels provided via context\n */\nexport function useChannels() {\n  const channels = React.useContext(ChannelContext)\n  return channels\n}\n","import React, { useCallback, useEffect, useMemo } from \"react\"\nimport { AxiosInstance } from \"axios\"\nimport { Link } from \"@reach/router\"\nimport classNames from \"classnames\"\nimport { Badge, Icons } from \"@tourepedia/ui\"\nimport moment from \"moment\"\nimport { useSelector } from \"react-redux\"\n\nimport { INotification, actions, IStateWithKey, selectors } from \"./store\"\nimport { ThunkAction } from \"./../types\"\nimport { IPaginate } from \"../model\"\nimport { useThunkDispatch } from \"../utils\"\nimport { useChannels } from \"../channels\"\nimport { useAuthUser } from \"./../Auth\"\n\nconst NOTIFICATION_EVENT =\n  \".Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated\"\n\nexport function XHR(xhr: AxiosInstance) {\n  return {\n    async getNotifications(\n      params?: any\n    ): Promise<{ data: INotification[]; meta: any }> {\n      return xhr.get(\"/notifications\", { params }).then(resp => resp.data)\n    },\n    async markAsRead(\n      items: Array<INotification>\n    ): Promise<{ data: INotification[] }> {\n      return xhr.patch(\"/notifications/mark-as-read\", {\n        items: items.map(n => n.id),\n      })\n    },\n  }\n}\n\nexport const getNotificationsAction = (\n  params?: any\n): ThunkAction<Promise<INotification[]>> => async (dispatch, _, { xhr }) => {\n  dispatch(actions.list.request())\n  return XHR(xhr)\n    .getNotifications(params)\n    .then(({ data, meta }) => {\n      dispatch(actions.list.success({ data, meta }))\n      return data\n    })\n    .catch(error => {\n      dispatch(actions.list.failure(error))\n      return Promise.reject(error)\n    })\n}\n\nexport const markNotificationAsReadAction = (\n  notifications: Array<INotification>\n): ThunkAction<Promise<INotification[]>> => async (dispatch, _, { xhr }) => {\n  const afterRead = {\n    data: notifications.map(i => ({\n      ...i,\n      read_at: moment.utc().toString(),\n    })),\n  }\n  dispatch(actions.markAsRead.success(afterRead))\n  return XHR(xhr)\n    .markAsRead(notifications)\n    .then(({ data }) => {\n      return data\n    })\n    .catch(error => {\n      // revert the change\n      const afterRead = {\n        data: notifications.map(i => ({\n          ...i,\n          read_at: null,\n        })),\n      }\n      dispatch(actions.markAsRead.success(afterRead))\n      return Promise.reject(error)\n    })\n}\n\nfunction useNotificationsState() {\n  interface StateProps extends IPaginate {\n    notifications: INotification[]\n    isFetching: boolean\n  }\n  return useSelector<IStateWithKey, StateProps>(state => {\n    const notificationsSelector = selectors(state)\n    return {\n      ...notificationsSelector.meta,\n      isFetching: notificationsSelector.isFetching,\n      notifications: notificationsSelector.get(),\n    }\n  })\n}\n\nfunction useNotificationsFetch() {\n  const dispatch = useThunkDispatch()\n  return useCallback(\n    (params?: any) => dispatch(getNotificationsAction(params)),\n    [dispatch]\n  )\n}\n\nfunction useMarkNotificationsAsRead() {\n  const dispatch = useThunkDispatch()\n  return useCallback(\n    (data: Array<INotification>) =>\n      dispatch(markNotificationAsReadAction(data)),\n    [dispatch]\n  )\n}\n\nfunction useAllMarkNotificationsAsRead() {\n  const dispatch = useThunkDispatch()\n  const { notifications } = useNotificationsState()\n  return useCallback(\n    () =>\n      dispatch(\n        markNotificationAsReadAction(notifications.filter(n => !n.read_at))\n      ),\n    [dispatch, notifications]\n  )\n}\n\nexport function useNotifications() {\n  return {\n    ...useNotificationsState(),\n    fetchNotifications: useNotificationsFetch(),\n    markAllAsRead: useAllMarkNotificationsAsRead(),\n  }\n}\n\nfunction TripConverted({ notification }: { notification: INotification }) {\n  const { data } = notification\n  const { id, price, converted_by } = data\n  return (\n    <div>\n      <div>\n        <div className=\"font-bold mb-1\">\n          <Link to={`/trips/${id}`}>Trip Conversion</Link>\n        </div>\n        <div className=\"text-sm\">\n          <Badge>\n            <Icons.RupeeIcon /> {price}\n          </Badge>{\" \"}\n          by {converted_by}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function Notification({\n  notification,\n}: {\n  notification: INotification\n}) {\n  const { created_at, read_at } = notification\n  const markAsRead = useMarkNotificationsAsRead()\n\n  // content of the notification\n  let Text: React.ComponentType<{ notification: INotification }>\n  switch (notification.type) {\n    case \"App\\\\Notifications\\\\TripConverted\":\n      Text = TripConverted\n      break\n    default:\n      console.warn(`No renderer for '${notification.type}' type notification`)\n      return null\n  }\n  return (\n    <div\n      className={classNames(\"p-3\", {\n        \"bg-gray-100\": read_at,\n      })}\n    >\n      <Text notification={notification} />\n      <footer className=\"mt-1 text-sm text-gray-600\">\n        {moment\n          .utc(created_at)\n          .local()\n          .fromNow()}{\" \"}\n        •{\" \"}\n        {read_at ? (\n          <span>Read</span>\n        ) : (\n          <button\n            className=\"text-primary-600\"\n            onClick={() => markAsRead([notification])}\n          >\n            <Icons.OkIcon title=\"Mark as Read\" />\n          </button>\n        )}\n      </footer>\n    </div>\n  )\n}\n\nexport function useNotificationsChannel(userId?: number) {\n  const channels = useChannels()\n  const notificationsChannel = useMemo(() => {\n    return channels && channels.private(\"users.\" + userId)\n  }, [userId, channels])\n  if (!userId || !channels) return\n  return notificationsChannel\n}\n\nexport function useConnectedNotificationChannel() {\n  const { user } = useAuthUser()\n  const dispatch = useThunkDispatch()\n  const notificationsChannel = useNotificationsChannel(user && user.id)\n  useEffect(() => {\n    if (notificationsChannel) {\n      const pushNewNotification = (notification: INotification) => {\n        dispatch(actions.pushNewNotification(notification))\n      }\n      notificationsChannel.notification(pushNewNotification)\n      return () => {\n        notificationsChannel.stopListening(NOTIFICATION_EVENT)\n      }\n    }\n  }, [dispatch, notificationsChannel])\n}\n","import React, { useEffect } from \"react\"\nimport { Router, Link, Location } from \"@reach/router\"\nimport Helmet from \"react-helmet-async\"\nimport { Icons, Badge } from \"@tourepedia/ui\"\nimport \"@tourepedia/ui/styles/index.css\"\n\nimport {\n  Login,\n  Logout,\n  useAuthUser,\n  InvitedSignup,\n  TenantSignup,\n  useCheckPermissions,\n  PERMISSIONS,\n} from \"./Auth\"\nimport { NavLink } from \"./Shared/NavLink\"\nimport Dashboard from \"./Dashboard\"\nimport NotFound from \"./NotFound\"\nimport Settings from \"./Settings\"\nimport ForgotPassword from \"./ForgotPassword\"\nimport ResetPassword from \"./ResetPassword\"\nimport { Users } from \"./Users\"\nimport { Roles } from \"./Roles\"\nimport { Hotels } from \"./Hotels\"\nimport { MealPlans } from \"./MealPlans\"\nimport { RoomTypes } from \"./RoomTypes\"\nimport { Locations } from \"./Locations\"\nimport { CabTypes } from \"./CabTypes\"\nimport { Cabs } from \"./Cabs\"\nimport { Trips } from \"./Trips\"\nimport { TripSources } from \"./TripSources\"\nimport { TripStages } from \"./TripStages\"\nimport { TransportServices } from \"./TransportServices\"\nimport { TransportServicePrices } from \"./TransportServicePrices\"\nimport { HotelPaymentPreferences } from \"./HotelPaymentPreferences\"\nimport { HotelBookingStages } from \"./HotelBookingStages\"\nimport { TripPlanRequests } from \"./TripPlanRequests\"\nimport { Tenants } from \"./Tenants\"\nimport { HotelPrices } from \"./HotelPrices\"\nimport EmailVerified from \"./EmailVerified\"\nimport { Container } from \"./Shared/Layout\"\nimport Dropdown from \"./Shared/Dropdown\"\n\nimport \"./main.css\"\nimport \"./typography.css\"\nimport {\n  Notification,\n  useNotifications,\n  useConnectedNotificationChannel,\n} from \"./Notifications\"\nimport config from \"./config\"\nimport { ChannelContextProvider } from \"./channels\"\n\nfunction NotificationList() {\n  const { user } = useAuthUser()\n  const {\n    notifications,\n    fetchNotifications,\n    markAllAsRead,\n  } = useNotifications()\n  useConnectedNotificationChannel()\n  useEffect(() => {\n    user && fetchNotifications()\n  }, [user, fetchNotifications])\n  if (!user) return null\n  return notifications && notifications.length ? (\n    <Dropdown as=\"li\" className=\"inline-block\" alignRight>\n      <a href=\"#view-notifications\" className=\"toggler\">\n        <Badge primary>\n          {notifications.filter(n => !n.read_at).length.toString()}\n        </Badge>\n      </a>\n      <ul\n        className=\"menu\"\n        style={{ maxHeight: \"40vh\", minWidth: \"250px\", overflow: \"auto\" }}\n      >\n        <header className=\"px-3 py-2 text-sm border-b flex justify-between\">\n          <span className=\"font-bold \">Notifications</span>\n          <button className=\"text-primary-600\" onClick={markAllAsRead}>\n            Mark All as Read\n          </button>\n        </header>\n        {notifications.map((n, i) => (\n          <li key={n.id} className=\"border-t\">\n            <Notification notification={n} />\n          </li>\n        ))}\n      </ul>\n    </Dropdown>\n  ) : null\n}\n\nexport const Header = function Header() {\n  const { user } = useAuthUser()\n  const { hasPermission, hasAnyPermission } = useCheckPermissions()\n  if (!user) return null\n  const { name, tenant } = user\n  return (\n    <header className=\"mb-4 text-base bg-white border-t-4 border-primary-600\">\n      <nav className=\"sm:flex border-b items-stretch md:justify-between\">\n        <Link to=\"/\" className=\"inline-flex h-16 px-2 mr-4 sm:mr-auto\">\n          <div className=\"flex items-center\">\n            <img\n              alt=\"Tourepedia Logo\"\n              src={config.publicUrl + \"/logo.png\"}\n              className=\"inline-block align-middle rounded-full shadow h-8 w-8 mr-2\"\n            />\n            <h1 className=\"font-normal text-base m-0 md:block\">\n              {tenant ? tenant.name : \"Tourepedia Dashboard\"}\n            </h1>\n          </div>\n        </Link>\n        <ul className=\"flex w-full md:w-auto md:px-4 h-16 items-center justify-between md:justify-end\">\n          <Dropdown as=\"li\" className=\"inline-block\">\n            <Link to=\"/trips\" className=\"inline-block\">\n              Trips\n            </Link>\n            <ul>\n              <NavLink to=\"/trips\">Trips</NavLink>\n              <NavLink to=\"/trips/hotels-booking-pending\">\n                Hotel Bookings\n              </NavLink>\n              {hasAnyPermission(\n                PERMISSIONS.VIEW_TRIP_PLAN_REQUESTS,\n                PERMISSIONS.MANAGE_TRIP_PLAN_REQUESTS\n              ) ? (\n                <NavLink to=\"/trip-plan-requests\">Trip Plan Requests</NavLink>\n              ) : null}\n              <NavLink to=\"/trip-sources\">Trip Sources</NavLink>\n              <NavLink to=\"/trip-stages\">Trip Stages</NavLink>\n            </ul>\n          </Dropdown>\n          <Dropdown as=\"li\" className=\"inline-block\">\n            <Link to=\"/hotels\">Hotels</Link>\n            <ul>\n              <NavLink to=\"/hotels\">Hotels</NavLink>\n              <NavLink to=\"/hotel-prices\">Hotel Prices</NavLink>\n              <NavLink to=\"/meal-plans\">Meal Plans</NavLink>\n              <NavLink to=\"/room-types\">Room Types</NavLink>\n              <NavLink to=\"/hotel-payment-preferences\">\n                Payment Preferences\n              </NavLink>\n              <NavLink to=\"/hotel-booking-stages\">Booking Stages</NavLink>\n            </ul>\n          </Dropdown>\n          <Dropdown as=\"li\" className=\"inline-block\" alignRight>\n            <Link to=\"/transport-services\">Transport</Link>\n            <ul>\n              <NavLink to=\"/transport-services\">Transport Services</NavLink>\n              <NavLink to=\"/cab-types\">Cab Types</NavLink>\n              <NavLink to=\"/transport-service-prices\">\n                Transport Service Prices\n              </NavLink>\n              <NavLink to=\"/locations\">Locations</NavLink>\n              <NavLink to=\"/cabs\">Cabs</NavLink>\n            </ul>\n          </Dropdown>\n          {hasPermission(PERMISSIONS.MANAGE_USERS) ? (\n            <Dropdown as=\"li\" className=\"inline-block\" alignRight>\n              <Link to=\"/users\">Users</Link>\n              <ul className=\"menu\">\n                <NavLink to=\"/users\">Users</NavLink>\n                {hasPermission(PERMISSIONS.MANAGE_ROLES) ? (\n                  <NavLink to=\"/roles\">Roles</NavLink>\n                ) : null}\n                {hasPermission(PERMISSIONS.MANAGE_TENANTS) ? (\n                  <NavLink to=\"/tenants\">Agents</NavLink>\n                ) : null}\n              </ul>\n            </Dropdown>\n          ) : null}\n          <NotificationList />\n          <Dropdown as=\"li\" className=\"inline-block\" alignRight>\n            <a className=\"toggler\" href=\"#profile-and-settings\">\n              <Icons.CogAltIcon title={`Hi ${name}`} />\n            </a>\n            <ul className=\"menu\">\n              <NavLink to=\"/settings\">\n                <Icons.CogAltIcon /> Settings\n              </NavLink>\n              <Location>\n                {({ location }) => (\n                  <NavLink to={`/logout?from=${location.pathname}`}>\n                    <Icons.OffIcon /> Logout\n                  </NavLink>\n                )}\n              </Location>\n            </ul>\n          </Dropdown>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default function App() {\n  return (\n    <ChannelContextProvider>\n      <Helmet titleTemplate=\"%s | Tourepedia\" defaultTitle=\"Tourepedia\" />\n      <Header />\n      <main style={{ minHeight: \"80vh\" }}>\n        <Container fluid>\n          <Router>\n            <Login path=\"/login\" />\n            <InvitedSignup path=\"/invited-signup\" />\n            <TenantSignup path=\"/tenant-signup\" />\n            <ForgotPassword path=\"/forgot-password\" />\n            <ResetPassword path=\"/reset-password\" />\n            <Dashboard path=\"/\" />\n            <Logout path=\"/logout\" />\n            <Settings path=\"/settings/*\" />\n            <Users path=\"/users/*\" />\n            <Roles path=\"/roles/*\" />\n            <Hotels path=\"/hotels/*\" />\n            <MealPlans path=\"/meal-plans/*\" />\n            <RoomTypes path=\"/room-types/*\" />\n            <Locations path=\"/locations/*\" />\n            <CabTypes path=\"/cab-types/*\" />\n            <Cabs path=\"/cabs/*\" />\n            <Trips path=\"/trips/*\" />\n            <TripSources path=\"/trip-sources/*\" />\n            <TripStages path=\"/trip-stages/*\" />\n            <TransportServices path=\"/transport-services/*\" />\n            <TransportServicePrices path=\"/transport-service-prices/*\" />\n            <HotelPaymentPreferences path=\"/hotel-payment-preferences/*\" />\n            <HotelBookingStages path=\"/hotel-booking-stages/*\" />\n            <TripPlanRequests path=\"/trip-plan-requests/*\" />\n            <Tenants path=\"/tenants/*\" />\n            <HotelPrices path=\"/hotel-prices/*\" />\n            <EmailVerified path=\"email-verified\" />\n            <NotFound default />\n          </Router>\n        </Container>\n      </main>\n      <Footer />\n    </ChannelContextProvider>\n  )\n}\n\nfunction Footer() {\n  return (\n    <footer className=\"border-t mt-8\">\n      <Container fluid>\n        <div className=\"py-4\">\n          <span>&copy; 2019 Tourepedia. All rights reserved</span>\n          {\" • \"}\n          <span>v{config.appVersion}</span>\n        </div>\n      </Container>\n    </footer>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nimport appConfig from \"./config\"\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (appConfig.appEnv === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(appConfig.publicUrl, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${appConfig.publicUrl}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import {\n  createStore,\n  applyMiddleware,\n  Middleware,\n  Reducer,\n  StoreEnhancer,\n  Store,\n} from \"redux\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport thunkMiddleware from \"redux-thunk\"\n\nexport function configureStore<TState>(\n  rootReducer: Reducer,\n  {\n    initialState,\n    thunkExtraAgrs,\n  }: { initialState?: TState; thunkExtraAgrs?: any }\n): Store<TState> {\n  const middlewares: Middleware[] = [\n    thunkMiddleware.withExtraArgument(thunkExtraAgrs),\n  ]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n  const enhancers: StoreEnhancer[] = [middlewareEnhancer]\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(...enhancers)\n  )\n  return store\n}\n\nexport default configureStore\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { combineReducers } from \"redux\"\nimport { HelmetProvider } from \"react-helmet-async\"\n\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport configureStore from \"./configureStore\"\nimport { store as authStore, AuthUserProvider } from \"./Auth\"\nimport { store as roleStore } from \"./Roles\"\nimport { store as userStore } from \"./Users\"\nimport { store as mealPlanStore } from \"./MealPlans\"\nimport { store as roomTypeStore } from \"./RoomTypes\"\nimport { store as locationStore } from \"./Locations\"\nimport { store as hotelStore } from \"./Hotels\"\nimport { store as cabTypeStore } from \"./CabTypes\"\nimport { store as cabStore } from \"./Cabs\"\nimport { store as tripStore } from \"./Trips\"\nimport { store as tripSourceStore } from \"./TripSources\"\nimport { store as tripStageStore } from \"./TripStages\"\nimport { store as transportServiceStore } from \"./TransportServices\"\nimport { store as transportServicePriceStore } from \"./TransportServicePrices\"\nimport { store as hotelPaymentPreferenceStore } from \"./HotelPaymentPreferences\"\nimport { store as hotelBookingStageStore } from \"./HotelBookingStages\"\nimport { store as tripPlanRequestStore } from \"./TripPlanRequests\"\nimport { store as tenantStore } from \"./Tenants\"\nimport { store as hotelPriceStore } from \"./HotelPrices\"\nimport { store as notificationStore } from \"./Notifications\"\nimport { IAppState } from \"./types\"\nimport xhr, { XHRContext } from \"./xhr\"\n\nconst rootReducer = combineReducers<IAppState>({\n  [authStore.key]: authStore.reducer,\n  [roleStore.key]: roleStore.reducer,\n  [userStore.key]: userStore.reducer,\n  [mealPlanStore.key]: mealPlanStore.reducer,\n  [roomTypeStore.key]: roomTypeStore.reducer,\n  [locationStore.key]: locationStore.reducer,\n  [hotelStore.key]: hotelStore.reducer,\n  [cabTypeStore.key]: cabTypeStore.reducer,\n  [cabStore.key]: cabStore.reducer,\n  [tripStore.key]: tripStore.reducer,\n  [tripSourceStore.key]: tripSourceStore.reducer,\n  [tripStageStore.key]: tripStageStore.reducer,\n  [transportServiceStore.key]: transportServiceStore.reducer,\n  [transportServicePriceStore.key]: transportServicePriceStore.reducer,\n  [hotelPaymentPreferenceStore.key]: hotelPaymentPreferenceStore.reducer,\n  [hotelBookingStageStore.key]: hotelBookingStageStore.reducer,\n  [tripPlanRequestStore.key]: tripPlanRequestStore.reducer,\n  [tenantStore.key]: tenantStore.reducer,\n  [hotelPriceStore.key]: hotelPriceStore.reducer,\n  [notificationStore.key]: notificationStore.reducer,\n})\n\nconst store = configureStore<IAppState>(rootReducer, {\n  thunkExtraAgrs: { xhr },\n})\n\nconst app = (\n  <Provider store={store}>\n    <HelmetProvider>\n      <XHRContext.Provider value={xhr}>\n        <AuthUserProvider>\n          <App />\n        </AuthUserProvider>\n      </XHRContext.Provider>\n    </HelmetProvider>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}